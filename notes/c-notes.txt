eval (apply (apply (+) 4) 5)                                            {}
  apply (apply (+) 4) 5                                                 []
    expect 1
    apply (+) 4                                                         [5]
      expect 2
      result 9
      return 2
    result 9
    return 1
  result 9
  return success

eval (apply (apply (\foo -> (\bar -> (apply (apply (+) foo) bar)) 4) 5) {}
  apply (apply (\foo -> (\bar -> (apply (apply (+) foo) bar))) 4) 5     []
    expect 1
    apply (\foo -> (\bar -> (apply (apply (+) foo) bar))) 4             [5]
      expect 2
      eval (\bar -> (apply (apply (+) foo) bar))                        {foo: 4}
        result (\bar -> (apply (apply (+) 4) bar))
        return success
      result (\bar -> (apply (apply (+) 4) bar))
      ... now we have consumed only 1 parameter!
      return 1
    apply (\bar -> (apply (apply (+) 4) bar)) 5                         []
      expect 1
      eval (apply (apply (+) 4) bar)                                    {bar: 5}
        apply (apply (+) 4) 5                                           []
          expect 1
          apply (+) 4                                                   [5]
            expect 2
            result 9
            return 2
          result 9
          return 1
        result 9
        return success
      result 9
      return 1
    result 9
    return 1
  result 9
  return success


So, under-consumption is possible (since we are type-safe) only in the presence of
