{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li11\fi-1\sl288\slmult1\pardirnatural

\f0\fs24 \cf0 typedef void modern;
\fs28 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li11\fi-1\pardirnatural

\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li11\fi-1\pardirnatural

\f1 \cf0 The \'93modern\'94 type is a polymorphic node for object-oriented access to both types and values.  Because it is not limited to values, it is not called \'93
\f0 modern_data
\f1 \'94; it is simply called \'93
\f0 modern
\f1 \'94 and the library user is encouraged to think of it as its own thing.\
\
Note that this is true in all the versions of the library for non-functional languages, but in languages which support generalized algebraic datatypes, the situation is more complicated; see for example the Haskell version.}