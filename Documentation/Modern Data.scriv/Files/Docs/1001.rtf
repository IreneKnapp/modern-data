{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li11\fi-1\pardirnatural

\f0\fs24 \cf0 There are two types of object used to control streaming, streams and processors.  Each has a transparent part, which is a structure containing pointers to callback functions, and an opaque part, which is represented as a void pointer.  To perform input - deserialization - client code provides a stream, and requests a processor from the system.  Output - serialization - is the reverse, with client code providing a processor and requesting a stream from the system.\
\
Virtual files, or vfiles, are also relevant to the streaming model, as they are to the node-based object model and for the same purpose.  See Virtual Files Overview for details.\
}