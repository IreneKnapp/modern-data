{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 AppleSymbols;}
{\colortbl;\red255\green255\blue255;\red252\green105\blue8;\red38\green38\blue38;\red142\green142\blue142;
}
\deftab720
\pard\pardeftab720

\f0\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 is the image accessible publicly: {\field{\*\fldinst{HYPERLINK "https://lh5.googleusercontent.com/-wjC6f-pd1RY/USgQgVE9C8I/AAAAAAAAM1M/qbIZSojnMc8/s901/Screenshot+from+2013-02-23+02:16:25.png"}}{\fldrslt \cf2 https://lh5.googleusercontent.com/-wjC6f-pd1RY/USgQgVE9C8I/AAAAAAAAM1M/qbIZSojnMc8/s901/Screenshot+from+2013-02-23+02%3A16%3A25.png}}\'a0?\
\pard\pardeftab720\qr

\fs28 \cf4 7:44\
\pard\pardeftab720

\b\fs36 \cf2 monochrom\
\pard\pardeftab720

\b0\fs32 \cf3 yes\
\pard\pardeftab720\qr

\fs28 \cf4 7:44\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: seen the subtextual demo video?\
\pard\pardeftab720\qr

\fs28 \cf4 7:44\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, yeah, it was an inspiration years ago\
we have fancy new records we want to use for named parameter passing\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 nifty\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 as the screenshot shows, it's currently terrible :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 cads\
\pard\pardeftab720

\b0\fs32 \cf3 wow that is frightening\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 its neat that it shows all types\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 monochrom\
\pard\pardeftab720

\b0\fs32 \cf3 except I don't like "=" overloaded like this. you have three meanings of =\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 well, most types, it doesnt tell me that fac is int to int\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 monochrom, same as Haskell record syntax?\
\pard\pardeftab720\qr

\fs28 \cf4 7:45\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 or actually num a => a -> a\
\pard\pardeftab720\qr

\fs28 \cf4 7:46\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, well, the arg is shown as Int, and the result is shown as Int\
newsham, so we thought repeating the whole Int -> Int is more noise than its worth\
we don't have type-classes yet for "Num a => .."\
(we implement our own type system)\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 wel what if for example you were using "return", it would be nifty to know that return is more polymorhic, but is used in a particular way\
*shrug*\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf2 monochrom\
\pard\pardeftab720

\b0\fs32 \cf3 well, I suppose everything is a record here\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 thinking out loud\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, polymorphic values that are specialized in an application are shown as red\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: I like it!\
I mean, the concept of it\
I have some similar ideas\
\pard\pardeftab720\qr

\fs28 \cf4 7:47\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 are you making something light-tableish?\
\pard\pardeftab720\qr

\fs28 \cf4 7:48\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 as you say, the visuals need work\
I personally would display only the type of the focused expression\
rather than the full tree\
\pard\pardeftab720\qr

\fs28 \cf4 7:48\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 huh, neat, light table has online alpha onw \'a0\cf2 http://www.lighttable.com/\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 7:48\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 oh cool\
I didn't like the concept when it was on kickstarter\
and I probably still won't\
but hey :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, if I hit enter on "*", this happens: {\field{\*\fldinst{HYPERLINK "http://i.imgur.com/PhJGObN.png"}}{\fldrslt \cf2 http://i.imgur.com/PhJGObN.png}}\
newsham, more ambitious than light-table :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 mine is more ambitious than Bottle even :) hehe\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 when are you gonna put up an awesome video?\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, what is yours?\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I'm trying to replace text files and command lines and web browsers and TeX all in one go lol\
\pard\pardeftab720\qr

\fs28 \cf4 7:49\
\pard\pardeftab720

\fs32 \cf4 bitonic left the room (quit: Ping timeout: 248 seconds).\
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, well, replacing the text toolchain for programming is a huge thing already :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\fs32 \cf4 centrinia left the room (quit: Read error: Connection reset by peer).\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 Modern Data is the core of it (that, you will probably recall from my incessant talking about it, is the self-describing binary data format for dependently-typed object graphs\'85)\
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\fs32 \cf4 bitonic [~user@b0fb09c5.bb.sky.com] entered the room.\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 then there's the interactive graphical editor for it, which will have a stylesheet language\
\pard\pardeftab720\qr

\fs28 \cf4 7:50\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, first we need it to be awesome rather than suck :)\
newsham, it's already awesome in many ways :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:51\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 so show me how many ways its awesome i wanna watch\
\pard\pardeftab720\qr

\fs28 \cf4 7:51\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 so that you can express the syntax you prefer to see your programming language in as a stylesheet, see\
\pard\pardeftab720\qr

\fs28 \cf4 7:51\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 we just added records in the last day or two.. incomplete support, we want to use it to have named args for functions\
newsham, part of the awesomeness is 60fps animation which will probably not go over video as well.. why not run it? :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:51\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 mind, this will work for arbitrary data files, not just for code\
\pard\pardeftab720\qr

\fs28 \cf4 7:51\
\pard\pardeftab720

\fs32 \cf4 conal [~conal@50-200-68-221-static.hfc.comcastbusiness.net] entered the room.\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, what do you have so far?\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 how do I run it?\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 a hell of a lot of specification and about 75% of the C code for the data format itself\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, git clone \cf2 https://github.com/Peaker/lamdu\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I want to get things right from the beginning, and I know that I need to document them...\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, and follow the TUTORIAL in there\
\pard\pardeftab720\qr

\fs28 \cf4 7:52\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 unfortunately the spec is currently only browsable as a 600k unstyled html file with prose sections and API sections intermingled :(\
unless you have the Mac program Scrivener, haha\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://ireneknapp.com/himitsu/modern-data/#3a51625c"}}{\fldrslt \cf0 http://ireneknapp.com/himitsu/modern-data/#3a51625c}}\'a0\'97 the interactive table of contents of it\
\pard\pardeftab720\qr

\fs28 \cf4 7:53\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, you doing it waterfall style?\
\pard\pardeftab720\qr

\fs28 \cf4 7:53\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 mm, only this first part\
and I'm parallelizing a bit, I made a start on the GUI stuff already too\
\pard\pardeftab720\qr

\fs28 \cf4 7:54\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, designing a large piece of novel software research without implementing/toying is probably a bad idea\
\pard\pardeftab720\qr

\fs28 \cf4 7:54\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 but that part is nowhere near as developed as Bottle\
oh but\
see\
I need to bootstrap it before it's enough there to toy with\
and I have toyed with it heavily in concept\
and in test programs\
I'm pretty confident of the basic design, really, at this point\
\pard\pardeftab720\qr

\fs28 \cf4 7:55\
\pard\pardeftab720

\fs32 \cf4 bitonic left the room (quit: Ping timeout: 255 seconds).\
\pard\pardeftab720\qr

\fs28 \cf4 7:56\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 well, good luck.. \'a0implementing something shows you how much more work there is in it than you've thought :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:56\
\pard\pardeftab720

\fs32 \cf4 bitonic [~user@b0fb09c5.bb.sky.com] entered the room.\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 7:56\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 and I mean, I have had two implentations already though\
I threw them both out because they were wrong :)\
one in Haskell and one in C\
\pard\pardeftab720\qr

\fs28 \cf4 7:56\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 I had gotten to Haskell through trying to implement this project in Python\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I see!\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\fs32 \cf4 EvanR left the room (quit: Read error: Connection reset by peer).\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 inventing a purely functional DSL in Python to hook up the GUI -- doing a poor job at it, and deciding to look at existing pure FP efforts to learn from them\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 yeah this unfortunately if it's to be of broad appeal to people can't have its foundational bit done in a language that requires a garbage collector :(\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: btw, spell check your README\
minor mistakes\
\pard\pardeftab720\qr

\fs28 \cf4 7:57\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 at least unless that language has a garbage collector that can cope with multiple instantiations of itself\
in other words, it has to be able to run as a library\
\pard\pardeftab720\qr

\fs28 \cf4 7:58\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 "Integrated unit-testing / code with examples / live programming - helps the programmers avoid silly bugs as they program, and helps programmers understand code better."\
\pard\pardeftab720\qr

\fs28 \cf4 7:59\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 anyway, it's not waterfall really\
it's "build one to throw away"\
\pard\pardeftab720\qr

\fs28 \cf4 7:59\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 needs integrated quickcheck and integrated theorem proving :)\
\pard\pardeftab720\qr

\fs28 \cf4 7:59\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 or two in this case :)\
iteration three is pretty much ready except for a lot of tedious work\
because that tedious part is SO tedious (the table of contents will tell you how many primitive operations I have to implement!)\
\pard\pardeftab720\qr

\fs28 \cf4 7:59\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, \cf2 https://github.com/Peaker/lamdu/commit/089dbeb8255e796d3be00cb59ca755baff64a01a\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:00\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I think it definitely saved a lot of time to do the design work of it up front\
\pard\pardeftab720\qr

\fs28 \cf4 8:00\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: whats the rev control story? \'a0\
you say it helps prevent conflicts..\
\pard\pardeftab720\qr

\fs28 \cf4 8:00\
\pard\pardeftab720

\fs32 \cf4 M30W left the room (quit: Ping timeout: 255 seconds).\
\pard\pardeftab720\qr

\fs28 \cf4 8:00\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, yeah, instead of versioning text line changes, we version higher-level AST changes.. Names are attributes of definitions, and referrals are by GUID, not name\
\pard\pardeftab720\qr

\fs28 \cf4 8:00\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 is verison control built in or can you still use your favorite external rev control?\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 built-in\
newsham, imagine a rename in version control\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 ahh\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 remove lots of lines, insert others\
with our rev control it's a single localized change\
also, we don't have files with definitions in a particular order, so no conflicts upon moving stuff around between files\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 hmm.. \'a0i understand how that will make it better, but i'm not convinced that one tool can do all of : editor, compiler, syntax checker, rev control, build environment \'a0 better\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 no whitespace to conflict on\
\pard\pardeftab720\qr

\fs28 \cf4 8:01\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 sometimes having a general purpose tool that works across many data types is good\
\pard\pardeftab720\qr

\fs28 \cf4 8:02\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 well, ideally we could have a new ecosystem of tools that live in that space, but the integrated UI is part of the story\
\pard\pardeftab720\qr

\fs28 \cf4 8:02\
\pard\pardeftab720

\fs32 \cf4 M30W [~M30W@unaffiliated/archeydevil] entered the room.\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:02\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 newsham - see, my thing is NOT integrated UI\
newsham - it's discrete tools that connect\
that's why the heart of it is really the data format\
the vocabulary that lets separate tools interoperate\
\pard\pardeftab720\qr

\fs28 \cf4 8:02\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 i dont like IDE's either, but I think live coding environment might have a compelling reason\
i'd like to see it explored and proven\
\pard\pardeftab720\qr

\fs28 \cf4 8:03\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, I hate Visual Studio, Eclipse, etc.. I hate emacs less, but hate it too :)\
\pard\pardeftab720\qr

\fs28 \cf4 8:03\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I think live coding environment is not incompatible with separated tools, when a self-describing binary format for dependently-typed object graphs is the basis of it :D\
\pard\pardeftab720\qr

\fs28 \cf4 8:03\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 IDE's are generally slow, have pretty weak UIs, and don't justify their massive costs with the benefits they typically bring\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 Modern Data absolutely wants to take over the version-control story someday too\
it's just that it will do that by being a library that makes it almost trivial to build a version-control program\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 lamdu is fast (instant start, everything should be fast because the data structures behind the scenes are designed to be manipulated quickly)\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 and a separate program that can edit code\
and so on\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 and so the cost is minimal, and the benefits are far larger\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 irene: yah, i'd like to see them work as separate tools where they can.\
but i'm not entirely convinced\
\pard\pardeftab720\qr

\fs28 \cf4 8:04\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 that's fair enough\
proof 
\f1 \uc0\u8712 
\f0 \'a0pudding\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 hmm, I just tried rm -rf / in a virtual machine and was dissappointed to see that it doesn't work.\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 define work\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 we don't have a silly "save" button, for example, and we want our "undo-buffer" to *be* the revision control, and that's another good reason for the integration\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 but for example i dont see why a visual coding environment cant spit out well formed syntactic text haskell\
and then use git/darcs/svn/hg on it\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 the short answer newsham is that text is lossy\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, because then you have to import it back from text\
newsham, yeah, it's lossy, and you get all the bad conflicts/etc from the textual revision control\
\pard\pardeftab720\qr

\fs28 \cf4 8:05\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 rm: cannot remove <whatever file it was trying to remove>: Operation not permitted\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 you can still get some of the rev control benefits\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 how?\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\fs32 \cf4 dschoepe left the room (quit: Ping timeout: 276 seconds).\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 for examle committing change units\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 probably because it got to /etc and removed the stuff that made PAM work\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 or by formatting the text in ways that line-based diff works well\
*shrug*\
\pard\pardeftab720\qr

\fs28 \cf4 8:06\
\pard\pardeftab720

\fs32 \cf4 pxdr left the room (quit: Ping timeout: 255 seconds).\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 the other thing is that I conceive of making programs that are more than programs\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\fs32 \cf4 EvanR [~erinehart@208.117.200.94] entered the room.\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\fs32 \cf4 pxdr [~pxdr@dslb-178-000-030-095.pools.arcor-ip.net] entered the room.\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, we might temporarily serialize to text to throw into GHC\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: have you realized that "Haskell code" can be a typeclass?\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 (or into whatever data GHC expects)\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp, not sure what you mean\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 the single exported method being "extract what the compiler needs as its input from this"\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\fs32 \cf4 EvanR is now known as Guest36495\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: Oh. You're porbably right. If I try it a second time it tells me rm: command not found. I just thought it did nothing.\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 then the user can extend the data with their own stuff - it can be any format the user desires under the hood\
\pard\pardeftab720\qr

\fs28 \cf4 8:07\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 i'm not sure i trust fancy-visual-env designer to necessarily implement mechanism for the particular rev control feature that some user really needs\
\pard\pardeftab720\qr

\fs28 \cf4 8:08\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 newsham - yes. \'a0I agree precisely. \'a0that is the argument against IDEs in a nutshell.\
\pard\pardeftab720\qr

\fs28 \cf4 8:08\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 where user prob already has said great feature in a well thought out stand alone general purpose rev control tool\
also I dont think every app should implement their own: search, replace, merge, commit, etc.\
users can already choose from sed, grep, awk, perl, git, svn, cvs, etc..\
\pard\pardeftab720\qr

\fs28 \cf4 8:09\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I think\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: I don't follow. Where did the type class get into it?\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 (composable tools ftw)\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, every editor has its own revision control built in already\
newsham, the "undo buffer"\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: the typeclass is what the data stored in the file has to implement\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: branch? merge?\
\pard\pardeftab720\qr

\fs28 \cf4 8:10\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 unfortunately, you also need to explicitly "save" (or lose work by default), and then commit to a separate version control, which then has to guess heuristically what changed\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: this trick - turning any data format into a typeclass - occurred to me after the second implementation and integrating it basically was the sign that I needed to start over again lol\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, well, those are missing features :) It's a weak mostly-linear vc\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: remote access protocol? \'a0authentication? \'a0compression?\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\fs32 \cf4 gentleben left the room (quit: Quit: gentleben).\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 i can git with 1000 collaborators\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, it would be nice to have all the vc power we're used to in our ordinary undo endeavors\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 anyway, i think you get the point\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 and much more importantly: It would be nice for the vc not to guess what changed\
but to know what actually changed\
\pard\pardeftab720\qr

\fs28 \cf4 8:11\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 i'm very much interested in what you're trying to do\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: I don't follow the trick. It sounds like gratuitous type class use, but then I say that about a lot of things. :-)\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 but i am not sure i agree with it all :)\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 this is also a big enhancement in conflict removal\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: oh, so it's like this\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 there are some things you will just never do as well as git\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, I agree that it means a whole lot more has to be gotten right\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: suppose I want to define a new file format that offers some benefits as compared to html\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, but I don't think a hybrid text/non-text world works well enough to justify the shift\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I'm taking html rather than Haskell as the example because that may make things clearer?\
\pard\pardeftab720\qr

\fs28 \cf4 8:12\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 so perhaps there's room for some new style third party general purpose rev control tool\
\pard\pardeftab720\qr

\fs28 \cf4 8:13\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 then what I can do is, I can define my html-prime, right\
\pard\pardeftab720\qr

\fs28 \cf4 8:13\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 that can work with your system but not be built directly in\
\pard\pardeftab720\qr

\fs28 \cf4 8:13\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, sure, there could still be third party implementors of that, but it'd still be integrated\
\pard\pardeftab720\qr

\fs28 \cf4 8:13\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 without the typeclass trick,\
I have to make a preprocessor that turns html-prime into html before it can be viewed\
\pard\pardeftab720\qr

\fs28 \cf4 8:13\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 and sometimes its worth losing a little on the ideal feature set to get great generality and reusability\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 with the typeclass trick, the preprocessor is embedded in the data itself\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 worse is better\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 (because dependent types imply arbitrary computation, heh, though that wasn't obvious to me until the first iteration of implementing this, haha0\
)\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 Why not just use a regular function on the data?\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 well, worse is better worked for a while for Nokia, but then the iPhone was better\
\pard\pardeftab720\qr

\fs28 \cf4 8:14\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 that's equivalent, really\
the difference is just\
:: (HTMLifiable a) => a\
vs\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, we see current programming envs as the Nokia of the software world :)\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 :: (a -> HTML, a)\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 ?\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 poor quality, lots of momentum, people don't expect better\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 Now that looks like you're trying for an existential.\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I am, yes, sorry\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 but when better comes, people will quickly throw away their nokias\
\pard\pardeftab720\qr

\fs28 \cf4 8:15\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 dependent types mess with my head :)\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: ok, lets talk about a realistic problem here. \'a0lets say your tool is a great success, now I'm using it every day, and I have a big project to work on with 50 other people across the world working on different parts in different timezones and sometiems different months of the year. \'a0At the start of the project I have to evaluate how well your system will cope with that, and because of RCS I might have to say 'screw it, lets use text\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 existentials are irrelevant with dependent types; what I'm writing out above is essentially what the type signature would look like with Haskell notation but dependent semantics\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\fs32 \cf4 jfischoff left the room (quit: Quit: jfischoff).\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 since any existential can be rewritten as\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 and if you want to compete with that world now yoru task is to stop focussing on all the cool langauge features of your system and start wasting your time making a world-class rev control feature set\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: No, you would still have to quantify a differently.\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 ((t :: Type), a :: t)\
\pard\pardeftab720\qr

\fs28 \cf4 8:16\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 "Haskell notation" has implicit forall; you have an implicit exists.\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, well, it will be opensource, so third party contributions can cover that\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\fs32 \cf4 centrinia [~exc@adsl-184-36-95-136.asm.bellsouth.net] entered the room.\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 or at least provide some sort of backdoor import/export functionality to let people play their darcs game\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 Those mean completely different things -- you can't say they're irrelevant, in any notation.\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 okay. \'a0but is this a nitpick and you see what I was getting at, or is this genuine confusion?\
hmm\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 peaker: but if i'm a dev lead, my choice isnt "use your system and write my own rev control OR use .hs and darcs" its just "ok, I cant use your system"\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, import/export will be as complete as possible.. but I don't think it'd be workable as part of a workflow\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 let me reread what I wrote with your last in mind\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: Anyway, if you have, in Haskell, class HTMLy a where htmlify :: a -> HTML; data HTMLThing = forall a. HTMLy a => HTMLThing a\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 until some 3rd party does what i need\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: Then you've gone wrong.\
\pard\pardeftab720\qr

\fs28 \cf4 8:17\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, unless it becomes entrenched and the advantages are too compelling\
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\fs32 \cf4 jfischoff [~jfischoff@c-67-169-45-161.hsd1.ca.comcast.net] entered the room.\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: how so?\
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 "HTMLThing" is nothing but an awkward way of writing "HTML".\
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, APIs that allow other projects to build rev control and such are certainly possible\
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 the difference is in how it's implemented. \'a0let me share one other thing that's kinda relevant\
\pard\pardeftab720\qr

\fs28 \cf4 8:18\
\pard\pardeftab720

\b\fs36 \cf2 newsham\
\pard\pardeftab720

\b0\fs32 \cf3 anyway, sorry if this has had a bit of a downer tone. \'a0your project sounds very cool and you should follow through with it and make what you want\
and i guess if your system is compelling enough people will fix the rest\
and if not, at least we'll see how far it goes and learn from it\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 which is that by using a dictionary of functions to store the (a -> HTML) thing, instead of putting it out on its own, you can store arbitrarily many (a -> Foo) methods\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: Maybe you should add in your lambdu tutorial that you need to have the ftgl c library installed?\
*lamdu\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 `Jake`, thanks\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 so that your HTML can also have formatting annotations, comments, etc etc, used to edit it or to compile it to something else or whatever\
while still being the same data\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: Yes. And you can also have a record with arbitrarily many values.\
\pard\pardeftab720\qr

\fs28 \cf4 8:19\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 the trick is fundamentally just packaging the function that compiles\
with the data that it operates on\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 data HTML = HTML \{ contents :: Blah, formatting :: Blah, ... \}\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 you're absolutely right that it doesn't need to be a typeclass proper\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: I think, haven't been able to finish the installation yet\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 and I don't really care if it is\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\fs32 \cf4 jfischoff left the room (quit: Client Quit).\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 but it does need to be at least a dictionary indexed by the return type\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 This way has many advantages and a few disadvantages.\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 because then it's arbitrarily extensible\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: No, this doesn't need to have anything to do with types.\
\pard\pardeftab720\qr

\fs28 \cf4 8:20\
\pard\pardeftab720

\fs32 \cf4 jfischoff [~jfischoff@c-67-169-45-161.hsd1.ca.comcast.net] entered the room.\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 no, because the point is, I don't want to force the user into ANY particular format\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: If you use a type class, it means that for every new behavior, you need to make up a new type.\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I have forward- and backward- compatibility in mind\
how so?\
hm\
I guess, sure, but this isn't in Haskell at all\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 If you just use a dictionary, you can make a hundred different values :: HTML with the same type.\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 it will have a Haskell binding\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: Yeah, installation successful with the library installed\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 Now behaviors are values, i.e. first-class things that you can manipulate etc., rather than types.\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 `Jake`, updated the TUTORIAL\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I have been thinking of them as typeclasses because that's how I conceived of the idea\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\fs32 \cf4 jfischoff left the room (quit: Client Quit).\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 oh!\
\pard\pardeftab720\qr

\fs28 \cf4 8:21\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: ok\
\pard\pardeftab720\qr

\fs28 \cf4 8:22\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I see what you mean\
you mean that it might be useful to have, say, an "end-user documentation" and an "internals documentation" in the same document\
both of which are HTML in the end\
\pard\pardeftab720\qr

\fs28 \cf4 8:22\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 ?\
\pard\pardeftab720\qr

\fs28 \cf4 8:22\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 so that the type is not the thing you want the dictionary to be keyed by?\
\pard\pardeftab720\qr

\fs28 \cf4 8:22\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: I didn't even install libftgl2, btw\
\pard\pardeftab720\qr

\fs28 \cf4 8:22\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 `Jake`, it probably got installed as an indirect dependency?\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 I don't know what this means.\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 with "end-user" and "internals" being two different examples of what I understand you to mean by "behavior"\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 It seems a bit off-topic for this channel.\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 Peaker\
\pard\pardeftab720

\b0\fs32 \cf3 newsham, thanks, if you try it out, tell me what you think\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 shachaf: was that addressed to me?\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: I will look through the installation log, wait a sec\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 Yes. We've been talking about Haskell in here for a bit now. :-)\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 lol\
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720

\b0\fs32 \cf3 irene-knapp: See also: \cf2 http://www.haskell.org/haskellwiki/FAQ#I.27m_making_an_RPG._Should_I_define_a_type_for_each_kind_of_monster.2C_and_a_type_class_for_them.3F\cf3 \
\pard\pardeftab720\qr

\fs28 \cf4 8:23\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 want to take this to some other venue?\
\pard\pardeftab720\qr

\fs28 \cf4 8:24\
\pard\pardeftab720

\b\fs36 \cf2 `Jake`\
\pard\pardeftab720

\b0\fs32 \cf3 Peaker: Yep, you're right\
\pard\pardeftab720\qr

\fs28 \cf4 8:24\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 okay\
then I think that I understood your point correctly but we are coming from such different perspectives that I was unable to communicate that :)\
\pard\pardeftab720\qr

\fs28 \cf4 8:24\
\pard\pardeftab720

\b\fs36 \cf2 shachaf\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "irc://irc.freenode.net:6667/#haskell"}}{\fldrslt 
\b0\fs32 \cf2 #haskell}}
\b0\fs32 \cf3 \'a0seems appropriate but you're not in there.\
\pard\pardeftab720\qr

\fs28 \cf4 8:24\
\pard\pardeftab720

\b\fs36 \cf0 irene-knapp\
\pard\pardeftab720

\b0\fs32 \cf3 I'm there now}