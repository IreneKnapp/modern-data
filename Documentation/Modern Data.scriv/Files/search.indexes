<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="4311">
            <Title>modern_node_representation_utf8_make </Title>
        </Document>
        <Document ID="2591">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2615">
            <Title>Semantics</Title>
        </Document>
        <Document ID="632">
            <Title>ceiling_float64_int64</Title>
        </Document>
        <Document ID="1551">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2999">
            <Title>Synopsis</Title>
            <Text>subtract_float32 = 232

Value type (abstract notation)
float32 -> float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1959">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4312">
            <Title>modern_node_representation_blob_make </Title>
        </Document>
        <Document ID="633">
            <Title>ceiling_float32_nat8</Title>
        </Document>
        <Document ID="2592">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_int32 = 1666</Text>
        </Document>
        <Document ID="2616">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_replace_byte_blob = 1856</Text>
        </Document>
        <Document ID="1552">
            <Title>Semantics</Title>
        </Document>
        <Document ID="634">
            <Title>ceiling_float64_nat8</Title>
        </Document>
        <Document ID="4313">
            <Title>modern_node_representation_sigma_make </Title>
        </Document>
        <Document ID="635">
            <Title>ceiling_float32_nat16</Title>
        </Document>
        <Document ID="3657">
            <Title>Synopsis</Title>
            <Text>minimum_bound_nat32 = 1382

Value type (abstract notation)
nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2617">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1553">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2593">
            <Title>Semantics</Title>
        </Document>
        <Document ID="636">
            <Title>ceiling_float64_nat16</Title>
        </Document>
        <Document ID="4290">
            <Title>modern_node_representation_let_item_get </Title>
        </Document>
        <Document ID="3250">
            <Title>Synopsis</Title>
            <Text>tangent_float64 = 833

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2210">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_tangent_float32 = 1056</Text>
        </Document>
        <Document ID="4314">
            <Title>modern_node_representation_name_value_make </Title>
        </Document>
        <Document ID="637">
            <Title>ceiling_float32_nat32</Title>
        </Document>
        <Document ID="2594">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_int64 = 1667</Text>
        </Document>
        <Document ID="2618">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_data_piece_utf8 = 1888</Text>
        </Document>
        <Document ID="1554">
            <Title>Semantics</Title>
        </Document>
        <Document ID="638">
            <Title>ceiling_float64_nat32</Title>
        </Document>
        <Document ID="4291">
            <Title>modern_node_representation_let_content_get </Title>
        </Document>
        <Document ID="4315">
            <Title>modern_node_representation_named_value_make </Title>
        </Document>
        <Document ID="2211">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1900">
            <Title>Semantics</Title>
        </Document>
        <Document ID="639">
            <Title>ceiling_float32_nat64</Title>
        </Document>
        <Document ID="2595">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2619">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1555">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4292">
            <Title>modern_node_representation_backreference_index_get </Title>
        </Document>
        <Document ID="3981">
            <Title>Synopsis</Title>
            <Text>make_named_type = 2432

Value type (abstract notation)
universe 0
-> name
-> universe 0

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2941">
            <Title>Synopsis</Title>
            <Text>compare_float64 = 169

Value type (abstract notation)
float64 -> float64 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1901">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2212">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_tangent_float64 = 1057</Text>
        </Document>
        <Document ID="4316">
            <Title>modern_node_representation_bool_type_make </Title>
        </Document>
        <Document ID="2596">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_nat8 = 1668</Text>
        </Document>
        <Document ID="1556">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4293">
            <Title>modern_node_representation_builtin_identifier_get </Title>
        </Document>
        <Document ID="3253">
            <Title>Synopsis</Title>
            <Text>arcsine_float32 = 864

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2213">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1902">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4317">
            <Title>modern_node_representation_ordering_type_make </Title>
        </Document>
        <Document ID="2597">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1557">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4294">
            <Title>modern_node_representation_bool_false_make </Title>
        </Document>
        <Document ID="2190">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arccosine_float32 = 896</Text>
        </Document>
        <Document ID="2214">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arcsine_float32 = 1088</Text>
        </Document>
        <Document ID="1903">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1150">
            <Title>Synopsis</Title>
            <Text>modern_node_type_bool_value_false = 1</Text>
        </Document>
        <Document ID="4318">
            <Title>modern_node_representation_maybe_type_make </Title>
        </Document>
        <Document ID="2598">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_nat16 = 1669</Text>
        </Document>
        <Document ID="1558">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4295">
            <Title>modern_node_representation_bool_true_make </Title>
        </Document>
        <Document ID="3984">
            <Title>Synopsis</Title>
            <Text>make_universe_type = 2464

Value type (abstract notation)
(level : nat64) -> universe level

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2215">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1904">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1880">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1151">
            <Title>Synopsis</Title>
            <Text>modern_node_type_bool_value_true = 2</Text>
        </Document>
        <Document ID="2191">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4319">
            <Title>modern_node_representation_int8_type_make </Title>
        </Document>
        <Document ID="2599">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1559">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4296">
            <Title>modern_node_representation_ordering_less_make </Title>
        </Document>
        <Document ID="3256">
            <Title>Synopsis</Title>
            <Text>arcsine_float64 = 865

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2945">
            <Title>Synopsis</Title>
            <Text>add_int8 = 192

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1905">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2216">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arcsine_float64 = 1089</Text>
        </Document>
        <Document ID="590">
            <Title>round_away_from_zero_float64_nat32</Title>
        </Document>
        <Document ID="1881">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1152">
            <Title>Synopsis</Title>
            <Text>modern_node_type_ordering_value_less = 3</Text>
        </Document>
        <Document ID="2192">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arccosine_float64 = 897</Text>
        </Document>
        <Document ID="3602">
            <Title>Synopsis</Title>
            <Text>floor_float32_int64 = 1350

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="591">
            <Title>round_away_from_zero_float32_nat64</Title>
        </Document>
        <Document ID="4297">
            <Title>modern_node_representation_ordering_equal_make </Title>
        </Document>
        <Document ID="2193">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2217">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1906">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1153">
            <Title>Synopsis</Title>
            <Text>modern_node_type_ordering_value_equal = 4</Text>
        </Document>
        <Document ID="592">
            <Title>round_away_from_zero_float64_nat64</Title>
        </Document>
        <Document ID="593">
            <Title>round_towards_even_float32_int8</Title>
        </Document>
        <Document ID="4298">
            <Title>modern_node_representation_ordering_greater_make </Title>
        </Document>
        <Document ID="2194">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arctangent_float32 = 928</Text>
        </Document>
        <Document ID="2218">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arccosine_float32 = 1120</Text>
        </Document>
        <Document ID="1907">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1883">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1154">
            <Title>Synopsis</Title>
            <Text>modern_node_type_ordering_value_greater = 5</Text>
        </Document>
        <Document ID="594">
            <Title>round_towards_even_float64_int8</Title>
        </Document>
        <Document ID="2540">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_int8 = 1568</Text>
        </Document>
        <Document ID="1500">
            <Title>Semantics</Title>
        </Document>
        <Document ID="595">
            <Title>round_towards_even_float32_int16</Title>
        </Document>
        <Document ID="4299">
            <Title>modern_node_representation_maybe_nothing_make </Title>
        </Document>
        <Document ID="3988">
            <Title>Synopsis</Title>
            <Text>cast_int8_int16 = 10240

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2948">
            <Title>Synopsis</Title>
            <Text>add_int16 = 193

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1908">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2219">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3259">
            <Title>Synopsis</Title>
            <Text>arccosine_float32 = 896

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1884">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1155">
            <Title>Synopsis</Title>
            <Text>modern_node_type_maybe_value_nothing = 6</Text>
        </Document>
        <Document ID="596">
            <Title>round_towards_even_float64_int16</Title>
        </Document>
        <Document ID="2195">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3581">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_float64 = 1329

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2541">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1501">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3605">
            <Title>Synopsis</Title>
            <Text>floor_float64_int64 = 1351

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="597">
            <Title>round_towards_even_float32_int32</Title>
        </Document>
        <Document ID="2196">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arctangent_float64 = 929</Text>
        </Document>
        <Document ID="1885">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1909">
            <Title>Synopsis</Title>
            <Text>void
modern_hash_initial_namespace_compute
(struct modern_hash *out);</Text>
        </Document>
        <Document ID="1156">
            <Title>Synopsis</Title>
            <Text>modern_node_type_maybe_value_just = 7</Text>
        </Document>
        <Document ID="598">
            <Title>round_towards_even_float64_int32</Title>
        </Document>
        <Document ID="2542">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_int16 = 1569</Text>
        </Document>
        <Document ID="1502">
            <Title>Semantics</Title>
        </Document>
        <Document ID="599">
            <Title>round_towards_even_float32_int64</Title>
        </Document>
        <Document ID="1886">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1157">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int8_value = 8</Text>
        </Document>
        <Document ID="2197">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2543">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1503">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2198">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arctangent_fraction_float32 = 960</Text>
        </Document>
        <Document ID="1887">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1158">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int16_value = 9</Text>
        </Document>
        <Document ID="3584">
            <Title>Synopsis</Title>
            <Text>floor_float32_int8 = 1344

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2544">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_int32 = 1570</Text>
        </Document>
        <Document ID="1504">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1480">
            <Title>Synopsis</Title>
            <Text>struct modern_stream *
modern_stream_explicatory_make
(modern_library *library);</Text>
        </Document>
        <Document ID="3608">
            <Title>Synopsis</Title>
            <Text>floor_float32_nat8 = 1352

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2199">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1888">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1159">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int32_value = 10</Text>
        </Document>
        <Document ID="3201">
            <Title>Synopsis</Title>
            <Text>square_root_float64 = 577

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="355">
            <Title>modern_library_client_state_get</Title>
        </Document>
        <Document ID="2545">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1505">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1481">
            <Title>Synopsis</Title>
            <Text>struct modern_stream *
modern_stream_documentation_make
(modern_library *library);</Text>
        </Document>
        <Document ID="1889">
            <Title>Parameters</Title>
        </Document>
        <Document ID="356">
            <Title>modern_node_function_type_left_get</Title>
        </Document>
        <Document ID="357">
            <Title>modern_node_function_type_right_get</Title>
        </Document>
        <Document ID="2546">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_int64 = 1571</Text>
        </Document>
        <Document ID="1506">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1482">
            <Title>Synopsis</Title>
            <Text>struct modern_stream *
modern_stream_output_make
(modern_library *library);</Text>
        </Document>
        <Document ID="358">
            <Title>modern_node_sigma_type_field_type_get</Title>
        </Document>
        <Document ID="4243">
            <Title>Builtin identifiers</Title>
        </Document>
        <Document ID="3932">
            <Title>Synopsis</Title>
            <Text>maybe_is_just = 2560

Value type (abstract notation)
(a : universe 0)
-> maybe a -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="110">
            <Title>modern_in_context_get</Title>
        </Document>
        <Document ID="3587">
            <Title>Synopsis</Title>
            <Text>floor_float64_int8 = 1345

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2547">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1507">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1483">
            <Title>Parameters</Title>
        </Document>
        <Document ID="359">
            <Title>modern_node_sigma_type_successor_get</Title>
        </Document>
        <Document ID="111">
            <Title>modern_to_context_add</Title>
        </Document>
        <Document ID="4244">
            <Title>Overview</Title>
            <Text>The meaning and purpose of these values is described in the section Semantics - Values and types - Builtin values.</Text>
        </Document>
        <Document ID="2140">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1100">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3204">
            <Title>Synopsis</Title>
            <Text>natural_logarithm_float32 = 608

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="112">
            <Title>modern_from_context_get</Title>
        </Document>
        <Document ID="2548">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_nat8 = 1572</Text>
        </Document>
        <Document ID="1508">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1484">
            <Title>Semantics</Title>
        </Document>
        <Document ID="113">
            <Title>Deserialization</Title>
        </Document>
        <Document ID="2141">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_float32 = 516</Text>
        </Document>
        <Document ID="1101">
            <Title>Synopsis</Title>
            <Text>ssize_t
(*modern_vfile_write)
(void *vfile_state,
 uint8_t *buffer,
 size_t length);</Text>
        </Document>
        <Document ID="1830">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2549">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1509">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1485">
            <Title>Parameters</Title>
        </Document>
        <Document ID="114">
            <Title>modern_deserialize_memory</Title>
        </Document>
        <Document ID="3182">
            <Title>Synopsis</Title>
            <Text>sign_int64 = 515

Value type (abstract notation)
int64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2142">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1102">
            <Title>Parameters</Title>
        </Document>
        <Document ID="844">
            <Title>cast_float32_float64</Title>
        </Document>
        <Document ID="3935">
            <Title>Synopsis</Title>
            <Text>fmap_maybe = 2592

Value type (abstract notation)
(a : universe 0)
-> (a : universe 0)
-> maybe a -> (a -> b) -> maybe b

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1831">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2871">
            <Title>Synopsis</Title>
            <Text>equal_to_int8 = 129

Value type (abstract notation)
int8 -> int8 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="115">
            <Title>modern_deserialize_file</Title>
        </Document>
        <Document ID="1486">
            <Title>Semantics</Title>
        </Document>
        <Document ID="845">
            <Title>cast_float64_float32</Title>
        </Document>
        <Document ID="116">
            <Title>modern_deserialize_fd</Title>
        </Document>
        <Document ID="4247">
            <Title>Node representations</Title>
        </Document>
        <Document ID="2143">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_float64 = 517</Text>
        </Document>
        <Document ID="1103">
            <Title>Semantics</Title>
        </Document>
        <Document ID="846">
            <Title>cast_blob_int8</Title>
        </Document>
        <Document ID="3207">
            <Title>Synopsis</Title>
            <Text>natural_logarithm_float64 = 609

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1832">
            <Title>Parameters</Title>
        </Document>
        <Document ID="117">
            <Title>modern_deserialize_vfile</Title>
        </Document>
        <Document ID="1487">
            <Title>Parameters</Title>
        </Document>
        <Document ID="847">
            <Title>cast_blob_int16</Title>
        </Document>
        <Document ID="118">
            <Title>moden_deserialize_input_stream</Title>
        </Document>
        <Document ID="4248">
            <Title>modern_node_representation</Title>
        </Document>
        <Document ID="2144">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1104">
            <Title>Synopsis</Title>
            <Text>void
modern_vfile_fd_finalize
(modern_library *library,
 void *vfile_state);</Text>
        </Document>
        <Document ID="848">
            <Title>cast_blob_int32</Title>
        </Document>
        <Document ID="1080">
            <Title>Synopsis</Title>
            <Text>struct modern_hash {
    uint64_t a;
    uint64_t b;
};</Text>
        </Document>
        <Document ID="1833">
            <Title>Semantics</Title>
        </Document>
        <Document ID="119">
            <Title>Serialization</Title>
        </Document>
        <Document ID="1488">
            <Title>Parameters</Title>
        </Document>
        <Document ID="600">
            <Title>round_towards_even_float64_int64</Title>
        </Document>
        <Document ID="4570">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_int64_set)
(modern_library *library,
 void *node,
 int64_t value);</Text>
        </Document>
        <Document ID="3530">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_int8 = 1312

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="849">
            <Title>cast_blob_int64</Title>
        </Document>
        <Document ID="3185">
            <Title>Synopsis</Title>
            <Text>sign_float32 = 516

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2145">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_pi_float32 = 544</Text>
        </Document>
        <Document ID="1105">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3938">
            <Title>Synopsis</Title>
            <Text>from_maybe = 2624

Value type (abstract notation)
(a : universe 0)
-> a -> maybe a -> a

Value type (detailed notation)</Text>
        </Document>
        <Document ID="601">
            <Title>round_towards_even_float32_nat8</Title>
        </Document>
        <Document ID="1081">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4249">
            <Title>Synopsis</Title>
            <Text>struct modern_node_representation {
    …
};</Text>
        </Document>
        <Document ID="1834">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1489">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2874">
            <Title>Synopsis</Title>
            <Text>equal_to_int16 = 130

Value type (abstract notation)
int16 -> int16 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4571">
            <Title>Semantics</Title>
        </Document>
        <Document ID="602">
            <Title>round_towards_even_float64_nat8</Title>
        </Document>
        <Document ID="2146">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1106">
            <Title>Semantics</Title>
        </Document>
        <Document ID="603">
            <Title>round_towards_even_float32_nat16</Title>
        </Document>
        <Document ID="1082">
            <Title>Synopsis</Title>
            <Text>void
modern_hash_compute
(uint8_t *data,
 size_t length,
 struct modern_hash *out);</Text>
        </Document>
        <Document ID="1835">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4572">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_nat8_set)
(modern_library *library,
 void *node,
 uint8_t value);</Text>
        </Document>
        <Document ID="604">
            <Title>round_towards_even_float64_nat16</Title>
        </Document>
        <Document ID="1083">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1107">
            <Title>Synopsis</Title>
            <Text>void *
modern_vfile_fd_initialize
(modern_library *library,
 int fd);</Text>
        </Document>
        <Document ID="605">
            <Title>round_towards_even_float32_nat32</Title>
        </Document>
        <Document ID="1836">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4573">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3533">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_int8 = 1313

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="606">
            <Title>round_towards_even_float64_nat32</Title>
        </Document>
        <Document ID="3188">
            <Title>Synopsis</Title>
            <Text>sign_float64 = 517

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2148">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_pi_float64 = 545</Text>
        </Document>
        <Document ID="1108">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1084">
            <Title>Synopsis</Title>
            <Text>void
modern_hash_child_compute
(struct modern_hash *parent,
 uint8_t *data,
 size_t length,
 struct modern_hash *out);</Text>
        </Document>
        <Document ID="607">
            <Title>round_towards_even_float32_nat64</Title>
        </Document>
        <Document ID="1837">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2877">
            <Title>Synopsis</Title>
            <Text>equal_to_int32 = 131

Value type (abstract notation)
int32 -> int32 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4574">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_nat16_set)
(modern_library *library,
 void *node,
 uint16_t value);</Text>
        </Document>
        <Document ID="2470">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1430">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_int8)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="608">
            <Title>round_towards_even_float64_nat64</Title>
        </Document>
        <Document ID="2149">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1109">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1085">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1838">
            <Title>Parameters</Title>
        </Document>
        <Document ID="609">
            <Title>round_towards_odd_float32_int8</Title>
        </Document>
        <Document ID="4575">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2471">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_nat32 = 1414</Text>
        </Document>
        <Document ID="1431">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_int16)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="1086">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1839">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4576">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_nat32_set)
(modern_library *library,
 void *node,
 uint32_t value);</Text>
        </Document>
        <Document ID="3536">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_int16 = 1314

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1432">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_int32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2472">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1087">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4577">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2473">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_nat64 = 1415</Text>
        </Document>
        <Document ID="1433">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_int64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4578">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_nat64_set)
(modern_library *library,
 void *node,
 uint64_t value);</Text>
        </Document>
        <Document ID="2474">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1434">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_nat8)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="1089">
            <Title>modern_error_handler</Title>
        </Document>
        <Document ID="4171">
            <Title>Synopsis</Title>
            <Text>cast_float64_float32 = 10301

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2820">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_blob = 10313</Text>
        </Document>
        <Document ID="4579">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3539">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_int16 = 1315

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1435">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_nat16)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2475">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_int8 = 1440</Text>
        </Document>
        <Document ID="2821">
            <Title>Semantics</Title>
        </Document>
        <Document ID="560">
            <Title>hyperbolic_arctangent_float64</Title>
        </Document>
        <Document ID="2476">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1436">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_nat32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="561">
            <Title>round_towards_zero_float32_int8</Title>
        </Document>
        <Document ID="3862">
            <Title>Synopsis</Title>
            <Text>bit_not_int32 = 1666

Value type (abstract notation)
int32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2822">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_blob = 10314</Text>
        </Document>
        <Document ID="562">
            <Title>round_towards_zero_float64_int8</Title>
        </Document>
        <Document ID="2477">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_int16 = 1441</Text>
        </Document>
        <Document ID="1437">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_nat64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="563">
            <Title>round_towards_zero_float32_int16</Title>
        </Document>
        <Document ID="4174">
            <Title>Synopsis</Title>
            <Text>cast_blob_int8 = 10302

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1030">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2823">
            <Title>Semantics</Title>
        </Document>
        <Document ID="564">
            <Title>round_towards_zero_float64_int16</Title>
        </Document>
        <Document ID="2478">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1438">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_float32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4520">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="565">
            <Title>round_towards_zero_float32_int32</Title>
        </Document>
        <Document ID="1760">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1031">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_retain_count_overflow)
(void *client_state,
 void *retainable);</Text>
        </Document>
        <Document ID="2824">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_blob = 10315</Text>
        </Document>
        <Document ID="566">
            <Title>round_towards_zero_float64_int32</Title>
        </Document>
        <Document ID="2479">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_int32 = 1442</Text>
        </Document>
        <Document ID="1439">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_float64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4521">
            <Title>Semantics</Title>
        </Document>
        <Document ID="567">
            <Title>round_towards_zero_float32_int64</Title>
        </Document>
        <Document ID="2072">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_float32 = 352</Text>
        </Document>
        <Document ID="1761">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1032">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2825">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3865">
            <Title>Synopsis</Title>
            <Text>bit_not_int64 = 1667

Value type (abstract notation)
int64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="568">
            <Title>round_towards_zero_float64_int64</Title>
        </Document>
        <Document ID="4522">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat16_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="569">
            <Title>round_towards_zero_float32_nat8</Title>
        </Document>
        <Document ID="4177">
            <Title>Synopsis</Title>
            <Text>cast_blob_int16 = 10303

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3137">
            <Title>Synopsis</Title>
            <Text>negate_int8 = 448

Value type (abstract notation)
int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1762">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1033">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2073">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4523">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2074">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_float64 = 353</Text>
        </Document>
        <Document ID="1763">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1034">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_retain_count_underflow)
(void *client_state,
 void *retainable);</Text>
        </Document>
        <Document ID="2827">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_blob = 10316</Text>
        </Document>
        <Document ID="4524">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2420">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2075">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1764">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1035">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2828">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3868">
            <Title>Synopsis</Title>
            <Text>bit_not_nat8 = 1668

Value type (abstract notation)
nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4525">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2421">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_int64 = 1351</Text>
        </Document>
        <Document ID="3461">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_nat32 = 1261

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2076">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_int8 = 384</Text>
        </Document>
        <Document ID="1765">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1036">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2829">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_blob = 10317</Text>
        </Document>
        <Document ID="4526">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2422">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2077">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1766">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1037">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_double_autorelease)
(void *client_state,
 void *retainable);</Text>
        </Document>
        <Document ID="4527">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2423">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_nat8 = 1352</Text>
        </Document>
        <Document ID="810">
            <Title>cast_nat32_int32</Title>
        </Document>
        <Document ID="2078">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_int16 = 385</Text>
        </Document>
        <Document ID="1767">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1038">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4120">
            <Title>Synopsis</Title>
            <Text>cast_nat32_int32 = 10284

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="811">
            <Title>cast_nat32_int64</Title>
        </Document>
        <Document ID="4528">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_float32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="1360">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_int16_set)
(modern_library *library,
 modern *node,
 int16_t value);</Text>
        </Document>
        <Document ID="2424">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3464">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_nat64 = 1262

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="812">
            <Title>cast_nat32_nat8</Title>
        </Document>
        <Document ID="2079">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1768">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1039">
            <Title>Semantics</Title>
        </Document>
        <Document ID="813">
            <Title>cast_nat32_nat16</Title>
        </Document>
        <Document ID="4529">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1361">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_int32_set)
(modern_library *library,
 modern *node,
 int32_t value);</Text>
        </Document>
        <Document ID="2425">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_nat8 = 1353</Text>
        </Document>
        <Document ID="814">
            <Title>cast_nat32_nat64</Title>
        </Document>
        <Document ID="1769">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3811">
            <Title>Synopsis</Title>
            <Text>bit_or_int16 = 1601

Value type (abstract notation)
int16 -> int16 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="815">
            <Title>cast_nat64_int8</Title>
        </Document>
        <Document ID="1362">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_int64_set)
(modern_library *library,
 modern *node,
 int64_t value);</Text>
        </Document>
        <Document ID="2426">
            <Title>Semantics</Title>
        </Document>
        <Document ID="816">
            <Title>cast_nat64_int16</Title>
        </Document>
        <Document ID="4123">
            <Title>Synopsis</Title>
            <Text>cast_nat32_int64 = 10285

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="817">
            <Title>cast_nat64_int32</Title>
        </Document>
        <Document ID="1363">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_nat8_set)
(modern_library *library,
 modern *node,
 uint8_t value);</Text>
        </Document>
        <Document ID="2427">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_nat16 = 1354</Text>
        </Document>
        <Document ID="3467">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_nat64 = 1263

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="818">
            <Title>cast_nat64_int64</Title>
        </Document>
        <Document ID="2020">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1364">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_nat16_set)
(modern_library *library,
 modern *node,
 uint16_t value);</Text>
        </Document>
        <Document ID="819">
            <Title>cast_nat64_nat8</Title>
        </Document>
        <Document ID="2428">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3790">
            <Title>Synopsis</Title>
            <Text>bit_and_int32 = 1570

Value type (abstract notation)
int32 -> int32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3814">
            <Title>Synopsis</Title>
            <Text>bit_or_int32 = 1602

Value type (abstract notation)
int32 -> int32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1710">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2750">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2021">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_int16 = 257</Text>
        </Document>
        <Document ID="1365">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_nat32_set)
(modern_library *library,
 modern *node,
 uint32_t value);</Text>
        </Document>
        <Document ID="2429">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_nat16 = 1355</Text>
        </Document>
        <Document ID="283">
            <Title>Canonical form</Title>
        </Document>
        <Document ID="4126">
            <Title>Synopsis</Title>
            <Text>cast_nat32_nat8 = 10286

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2022">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1711">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3062">
            <Title>Synopsis</Title>
            <Text>divide_towards_negative_infinity_int16 = 321

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="284">
            <Title>modern_node_canonical_hash_compute</Title>
        </Document>
        <Document ID="1366">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_nat64_set)
(modern_library *library,
 modern *node,
 uint64_t value);</Text>
        </Document>
        <Document ID="2752">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_nat8 = 10279</Text>
        </Document>
        <Document ID="1712">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2023">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_int32 = 258</Text>
        </Document>
        <Document ID="1367">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_float32_set)
(modern_library *library,
 modern *node,
 float value);</Text>
        </Document>
        <Document ID="3793">
            <Title>Synopsis</Title>
            <Text>bit_and_int64 = 1571

Value type (abstract notation)
int64 -> int64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3817">
            <Title>Synopsis</Title>
            <Text>bit_or_int64 = 1603

Value type (abstract notation)
int64 -> int64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1713">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2753">
            <Title>Semantics</Title>
        </Document>
        <Document ID="287">
            <Title>Normative references</Title>
        </Document>
        <Document ID="2024">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1368">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_float64_set)
(modern_library *library,
 modern *node,
 double value);</Text>
        </Document>
        <Document ID="288">
            <Title>IEEE 754-2008 (floating-point)</Title>
        </Document>
        <Document ID="4450">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_type_family_item_get)
(modern_library *library,
 void *value, uint64_t index);</Text>
        </Document>
        <Document ID="3410">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_nat64 = 1230

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4129">
            <Title>Synopsis</Title>
            <Text>cast_nat32_nat16 = 10287

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2754">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_nat32 = 10280</Text>
        </Document>
        <Document ID="1714">
            <Title>Semantics</Title>
        </Document>
        <Document ID="289">
            <Title>Values and types</Title>
        </Document>
        <Document ID="2025">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_int64 = 259</Text>
        </Document>
        <Document ID="3065">
            <Title>Synopsis</Title>
            <Text>divide_towards_negative_infinity_int32 = 322

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1690">
            <Title>Semantics</Title>
        </Document>
        <Document ID="770">
            <Title>cast_int8_nat16</Title>
        </Document>
        <Document ID="1369">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_utf8_data_piece_set)
(modern_library *library,
 modern *value,
 uint8_t *data,
 size_t offset,
 size_t old_bytes,
 size_t new_bytes);</Text>
        </Document>
        <Document ID="4451">
            <Title>Semantics</Title>
        </Document>
        <Document ID="771">
            <Title>cast_int8_nat32</Title>
        </Document>
        <Document ID="2755">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1715">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2026">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1691">
            <Title>Parameters</Title>
        </Document>
        <Document ID="772">
            <Title>cast_int8_nat64</Title>
        </Document>
        <Document ID="4452">
            <Title>Synopsis</Title>
            <Text>uint64_t 
(*modern_node_representation_let_count_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="3">
            <Title>Introduction</Title>
            <Text>Modern Data is a self-describing binary data format for dependently-typed object graphs, and also a library.

A self-describing data format is a format like XML, JSON, YAML, or Common Lisp’s s-expressions, which can be processed at a superficial level without knowledge of the specific type of data it contains.  The typical purpose of such formats is interchange across diverse software tools; for example, many tools for working with databases can produce output or accept input in XML.  They can also be useful intermediate representations for transformations on data structures, as with XSLT.  They can even be used for network protocols, as with XMPP/Jabber.  Modern Data is at least as suitable for these tasks as any existing format.

Unlike the above-mentioned alternatives, Modern Data is primarily a binary format, not a textual one.  This is because any textual format based on it would necessarily be either very verbose and hard to write, or else would give up many important features.  There is a textual format for documentation, standardization, and debugging, but users are urged never to use it for interchange.

Although not the primary motivation for the choice, a benefit of being a binary format is a certain compactness.  Care has been taken to ensure that the format can in principle be used by database engines and the like as a native format - perhaps slightly larger than non-self-describing forms, but not enormously so as a textual format would be, and without needing a parse phase to perform simple actions such as scanning through it.  Specifically, the format does not use offset-based pointers, so it is suitable for embedding in other formats that do their own space allocation.

The most distinctive attribute of Modern Data compared to existing formats is that it is dependently typed.  In a formal sense, this means that types and values are intermixable.  Thus the schema for a Modern Data document is itself potentially a Modern Data document, using a type as a value.  Furthermore, bounds-checked arrays, dimensioned quantities, and the like can all be expressed through values used within types, in ways that will be familiar to programmers who have used theorem-proving languages such as Agda, Coq, Epigram, and Idris.

Another benefit that is a prerequisite of dependent typing but will not be obvious to programmers who are unfamiliar with Hindley-Milner-style type systems is that types are parametric; this means, for example, that it is possible to write the incomplete type “balanced binary tree containing leaf nodes of some particular type”, without specifying the content type at the time that the tree type is defined; the type parameter can be filled in to instantiate that tree for any desired content type, thus obtaining a complete type, which can actually be instantiated.  This will be familiar to Haskell and ML programmers; it is also reminiscent of C++ and Java templates, but the meaning of it has been more rigorously formalized.

Furthermore, code can be written using the library which operates on a parametric type such as our binary tree example, generically to its specific parameters - thus code can be written which rebalances a tree after an update, without knowing the type of the contents.

Modern Data, unlike other self-describing formats, is capable of representing an arbitrary object graph - not merely one that has obvious linear structure.  This is accomplished without pointers or globally-scoped identifiers of any kind, and therefore does not impede use embedded within other formats, as mentioned above.  The benefit is that arbitrary data structures can be represented directly, including ones which would have cyclic pointers in their traditional in-memory representations.

The Modern Data base library is written in C.  Not because it’s more suitable for the task than other languages would be - it’s not.  Rather, functional languages tend to have runtime systems (largely consisting of garbage collectors) which make the scenario of deploying a library to be linked against from other languages more difficult.  Obviously there will be bindings written in functional languages, as functional programming is the paradigm best equipped to take advantage of Modern Data’s features, but the library will always be in a system language, so that it can easily be linked against from as many other languages as possible.  Care has been taken to play nicely with foreign-function interfaces, which cannot always use the full capabilities of the C ABI.

The library presents two basic ways of interacting with data.  The node-based object model is analogous to the Document Object Model (DOM) for HTML and XML processing, and is simpler to invoke.  The streaming model is analogous to SAX for XML processing, and is more complicated but dramatically more efficient in some situations.  If you are not sure which to use, you should use the node-based object model.

The streaming model’s primary purpose is to allow you to substitute your own data structures in place of the ones the library provides.  The streaming model requires more work of you, because validation is the client code’s responsibility rather than the library’s.  This lack of validation is a feature; it enables the efficiency gains, and also is the mechanism for constructing novel file formats and network protocols which use Modern Data in some places but have their own “skeletons”.

Please, come on in - and enjoy the type system!</Text>
        </Document>
        <Document ID="3796">
            <Title>Synopsis</Title>
            <Text>bit_and_nat8 = 1572

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="773">
            <Title>cast_int16_int8</Title>
        </Document>
        <Document ID="1716">
            <Title>Parameters</Title>
        </Document>
        <Document ID="5">
            <Title>Scrawlings</Title>
            <Text>To my pre-readers:  This section is random notes, most of which are not yet written down elsewhere.  Nothing it says is normative and some of it has become wrong over time.

For C, everything is effectively like Data.Dynamic.  For Haskell there will be a GADT and an existential.

Node types “lambda”, “apply”, “index” (as in De Bruijn), and “family” (as in inductive type family).

To make things with cycles, what happens behind the scenes is…  Well, it’s not behind the scenes when you’re doing streaming mode, but in object-model mode, it uses lambdas and applies.  The “prelude” has the S and K combinators already defined, which isn’t strictly necessary because you could define them yourself, but it’s a convenience.

The Lisp-like syntax is the debug format, for use in, say, standards documents that describe APIs in which the units of data interchange are values in Modern Data.

Recursive types, such as the simple tree type (in Haskell notation) data Tree = Internal (Tree a) (Tree a) | Leaf a, are defined as cyclic structures.  This avoids the need to refer to anything by name, ever, although the system does in fact support names.

This is on the type level but it’s dependent, so the machinery is the same for types as for values.

I am unclear on whether to implement the set hierarchy, or type-in-type.  I know that I want to call it “universe”, because “set” is a poor name suggestive of set theory rather than type theory.  If I do use the set hierarchy, I expect to have a finite limit, probably 64 bits, on how high one can go.  This is not really any more of a wart than a limit placed on how large an array can be.

With both lambdas and applies present, in principle full computation is possible.

Some parts of this are simply matters of good C practice rather than of dependent types.  For example, the use of vfile structures for when you want to read a Modern Data value that’s in a zipfile.

You can basically use Modern Data for anything you presently do with XML or HTML or JSON or whatnot, except you can also communicate types across it.  So schemas are built in.  XML schema description is a bugbear that they’ve had a lot of failed attempts at.  You can “teach” the other end how to at least process your thing, even if it doesn’t know your types in advance, by sending a type-as-data across the wire.  You can write helper utilities that only understand some of the types and not the rest, to make “map” and other higher-order functions.

The original motivator was because I hate using text as the format for shell commands.

There should be all sorts of applications.  I think it applies to the functional-database problem, too, even.

In principle you could write webpages in it.

You could implement a programming “language” in it.  The source code would be simply a data structure, instead of being text.  If you like text, you can treat the textual presentation as simply a formatting layer.

Once the basic library is working I’m going to make a generic graphical editor for this, for the Mac.

You can use it for network protocols, too; XMPP/Jabber is similar but using XML as the self-describing data format.

The type system exposes a lot of very low-level types.  I intend to build more higher-level types on top, but the goal at this stage is to provide all the primitives.  After that, I can play around and stuff.  I don’t plan for the higher-level types to be part of the “standard”, because that wouldn’t buy anything - they don’t need to be agreed upon in advance to use them, since the schema is expressible in the system itself.

For aggregate types, I originally broke it down to array (one-dimensional, nothing fancy with the indices; anything more complicated can be built on top); union, which assigns a name to each field it may contain, and exactly one of those fields is present in an actual value; structure, which also assigns a name to each field, but all the fields are present.  Structures, notably, did not have field orders; that is, two structure types with the same field names and types were equivalent regardless of the order the fields appeared in.  And the last aggregate type is “named”.  Notice that in array, union, and structure, the aggregate doesn’t have its own name, which makes anonymous ones possible.  The capability is separated out.

For text the type is UTF-8.  There are no types for other character sets or encodings, because that’s the right one 99% of the time.

There’s blob, too, so if you need to embed non-Modern data in some known format, you can just make a blob out of it.

However, the type system has been simplified now - instead of array, union, and structure, there’s just sigma.</Text>
        </Document>
        <Document ID="2756">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_nat64 = 10281</Text>
        </Document>
        <Document ID="2027">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_nat8 = 260</Text>
        </Document>
        <Document ID="6">
            <Title>C library</Title>
        </Document>
        <Document ID="1692">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4453">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3413">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_nat64 = 1231

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="8">
            <Title>modern_context</Title>
        </Document>
        <Document ID="774">
            <Title>cast_int16_int32</Title>
        </Document>
        <Document ID="3068">
            <Title>Synopsis</Title>
            <Text>divide_towards_negative_infinity_int64 = 323

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2757">
            <Title>Semantics</Title>
        </Document>
        <Document ID="775">
            <Title>cast_int16_int64</Title>
        </Document>
        <Document ID="1717">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2028">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1693">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4454">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_let_item_get)
(modern_library *library,
 void *value, uint64_t index);</Text>
        </Document>
        <Document ID="776">
            <Title>cast_int16_nat8</Title>
        </Document>
        <Document ID="1310">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_bool_true_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2350">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2758">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_int8 = 10282</Text>
        </Document>
        <Document ID="1718">
            <Title>Semantics</Title>
        </Document>
        <Document ID="777">
            <Title>cast_int16_nat16</Title>
        </Document>
        <Document ID="2029">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_nat16 = 261</Text>
        </Document>
        <Document ID="1694">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4455">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2351">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_nat8 = 1288</Text>
        </Document>
        <Document ID="778">
            <Title>cast_int16_nat32</Title>
        </Document>
        <Document ID="1311">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_ordering_less_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="3799">
            <Title>Synopsis</Title>
            <Text>bit_and_nat16 = 1573

Value type (abstract notation)
nat16 -> nat16 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2759">
            <Title>Semantics</Title>
        </Document>
        <Document ID="530">
            <Title>two_to_the_x_float64</Title>
        </Document>
        <Document ID="1719">
            <Title>Parameters</Title>
        </Document>
        <Document ID="779">
            <Title>cast_int16_nat64</Title>
        </Document>
        <Document ID="1695">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4456">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_let_content_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="3416">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_float32 = 1232

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="531">
            <Title>x_to_the_y_float32</Title>
        </Document>
        <Document ID="1312">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_ordering_equal_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2352">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3392">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_nat8 = 1224

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1696">
            <Title>Semantics</Title>
        </Document>
        <Document ID="532">
            <Title>x_to_the_y_float64</Title>
        </Document>
        <Document ID="4457">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2353">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_nat8 = 1289</Text>
        </Document>
        <Document ID="533">
            <Title>logarithm_base_x_float32</Title>
        </Document>
        <Document ID="1313">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_ordering_greater_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="1697">
            <Title>Parameters</Title>
        </Document>
        <Document ID="534">
            <Title>logarithm_base_x_float64</Title>
        </Document>
        <Document ID="4458">
            <Title>Synopsis</Title>
            <Text>uint64_t 
(*modern_node_representation_backreference_index_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2354">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1314">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_maybe_nothing_make)
(modern_library *library,
 modern *type);</Text>
        </Document>
        <Document ID="535">
            <Title>sine_float32</Title>
        </Document>
        <Document ID="1290">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_named_value_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1698">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4051">
            <Title>Synopsis</Title>
            <Text>cast_int64_int8 = 10261

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3011">
            <Title>Synopsis</Title>
            <Text>multiply_int32 = 258

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="536">
            <Title>sine_float64</Title>
        </Document>
        <Document ID="2700">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4459">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3419">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_float64 = 1233

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1315">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_maybe_just_make)
(modern_library *library,
 modern *type,
 modern *content_value);</Text>
        </Document>
        <Document ID="2355">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_nat16 = 1290</Text>
        </Document>
        <Document ID="537">
            <Title>cosine_float32</Title>
        </Document>
        <Document ID="3395">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_nat8 = 1225

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1291">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_maybe_type_content_type_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1699">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2701">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_int8 = 10254</Text>
        </Document>
        <Document ID="538">
            <Title>cosine_float64</Title>
        </Document>
        <Document ID="2356">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1316">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int8_make)
(modern_library *library,
 int8_t value);</Text>
        </Document>
        <Document ID="1292">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_function_type_left_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="539">
            <Title>tangent_float32</Title>
        </Document>
        <Document ID="3742">
            <Title>Synopsis</Title>
            <Text>rotate_left_int32 = 1506

Value type (abstract notation)
int32 -> nat8 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2702">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2357">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_nat16 = 1291</Text>
        </Document>
        <Document ID="1317">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int16_make)
(modern_library *library,
 int16_t value);</Text>
        </Document>
        <Document ID="1293">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_function_type_right_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4054">
            <Title>Synopsis</Title>
            <Text>cast_int64_int16 = 10262

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3014">
            <Title>Synopsis</Title>
            <Text>multiply_int64 = 259

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2703">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_int16 = 10255</Text>
        </Document>
        <Document ID="50">
            <Title>modern_stream_blob_end</Title>
        </Document>
        <Document ID="3398">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_nat16 = 1226

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2358">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1318">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int32_make)
(modern_library *library,
 int32_t value);</Text>
        </Document>
        <Document ID="1294">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_type_field_type_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4400">
            <Title>Synopsis</Title>
            <Text>uint16_t 
(*modern_node_representation_nat16_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2680">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1640">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2704">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2359">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_nat32 = 1292</Text>
        </Document>
        <Document ID="1319">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int64_make)
(modern_library *library,
 int64_t value);</Text>
        </Document>
        <Document ID="1295">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_type_successor_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4401">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2681">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_nat16 = 10244</Text>
        </Document>
        <Document ID="1641">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2705">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_int64 = 10256</Text>
        </Document>
        <Document ID="57">
            <Title>modern_stream_named_value_is_next</Title>
        </Document>
        <Document ID="3745">
            <Title>Synopsis</Title>
            <Text>rotate_left_int64 = 1507

Value type (abstract notation)
int64 -> nat8 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1296">
            <Title>Synopsis</Title>
            <Text>struct modern_hash *
(*modern_node_named_type_name_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="58">
            <Title>modern_stream_lambda_is_next</Title>
        </Document>
        <Document ID="4402">
            <Title>Synopsis</Title>
            <Text>uint32_t 
(*modern_node_representation_nat32_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="59">
            <Title>modern_stream_apply_is_next</Title>
        </Document>
        <Document ID="4057">
            <Title>Synopsis</Title>
            <Text>cast_int64_int32 = 10263

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3017">
            <Title>Synopsis</Title>
            <Text>multiply_nat8 = 260

Value type (abstract notation)
nat8 -> nat8 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1642">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2682">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2706">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1297">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_named_type_content_type_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4403">
            <Title>Semantics</Title>
        </Document>
        <Document ID="490">
            <Title>modulus_towards_zero_int64</Title>
        </Document>
        <Document ID="2683">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_nat32 = 10245</Text>
        </Document>
        <Document ID="1643">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2707">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_nat8 = 10257</Text>
        </Document>
        <Document ID="491">
            <Title>modulus_towards_zero_nat8</Title>
        </Document>
        <Document ID="1298">
            <Title>Synopsis</Title>
            <Text>uint64_t
(*modern_node_universe_type_level_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4404">
            <Title>Synopsis</Title>
            <Text>uint64_t 
(*modern_node_representation_nat64_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2300">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_int8 = 1249</Text>
        </Document>
        <Document ID="492">
            <Title>modulus_towards_zero_nat16</Title>
        </Document>
        <Document ID="2684">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1644">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2708">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3748">
            <Title>Synopsis</Title>
            <Text>rotate_left_nat8 = 1508

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="493">
            <Title>modulus_towards_zero_nat32</Title>
        </Document>
        <Document ID="1299">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_lambda_content_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4405">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2301">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3341">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_nat8 = 1193

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="494">
            <Title>modulus_towards_zero_nat64</Title>
        </Document>
        <Document ID="2685">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_nat64 = 10246</Text>
        </Document>
        <Document ID="1645">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2709">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_nat16 = 10258</Text>
        </Document>
        <Document ID="495">
            <Title>modulus_towards_negative_infinity_int8</Title>
        </Document>
        <Document ID="4382">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_value_type_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="4406">
            <Title>Synopsis</Title>
            <Text>float 
(*modern_node_representation_float32_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2302">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_int16 = 1250</Text>
        </Document>
        <Document ID="496">
            <Title>modulus_towards_negative_infinity_int16</Title>
        </Document>
        <Document ID="2686">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1646">
            <Title>Semantics</Title>
        </Document>
        <Document ID="497">
            <Title>modulus_towards_negative_infinity_int32</Title>
        </Document>
        <Document ID="4383">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4407">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2303">
            <Title>Semantics</Title>
        </Document>
        <Document ID="498">
            <Title>modulus_towards_negative_infinity_int64</Title>
        </Document>
        <Document ID="2687">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_int8 = 10247</Text>
        </Document>
        <Document ID="1647">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4000">
            <Title>Synopsis</Title>
            <Text>cast_int8_nat16 = 10244

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="250">
            <Title>modern_allocator_realloc</Title>
        </Document>
        <Document ID="4384">
            <Title>Synopsis</Title>
            <Text>int
(*modern_node_representation_mutable_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2280">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_nat8 = 1225</Text>
        </Document>
        <Document ID="1240">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4408">
            <Title>Synopsis</Title>
            <Text>double 
(*modern_node_representation_float64_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2304">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_int16 = 1251</Text>
        </Document>
        <Document ID="980">
            <Title>modern_vfile_memory_buffer_make</Title>
        </Document>
        <Document ID="3344">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_nat16 = 1194

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2688">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1648">
            <Title>Semantics</Title>
        </Document>
        <Document ID="252">
            <Title>modern_processor_abort</Title>
        </Document>
        <Document ID="981">
            <Title>modern_vfile_memory_buffer_initialize</Title>
        </Document>
        <Document ID="4385">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2281">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1241">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4409">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2305">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1970">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_nat32 = 166</Text>
        </Document>
        <Document ID="253">
            <Title>modern_processor_flush</Title>
        </Document>
        <Document ID="982">
            <Title>modern_vfile_memory_buffer_finalize</Title>
        </Document>
        <Document ID="2689">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_int32 = 10248</Text>
        </Document>
        <Document ID="1649">
            <Title>Parameters</Title>
        </Document>
        <Document ID="254">
            <Title>Predefined hashes</Title>
        </Document>
        <Document ID="983">
            <Title>modern_vfile_memory_allocating_make</Title>
        </Document>
        <Document ID="4386">
            <Title>Synopsis</Title>
            <Text>struct modern_hash
(*modern_node_representation_canonical_hash_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2282">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_nat16 = 1226</Text>
        </Document>
        <Document ID="1242">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2306">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_int32 = 1252</Text>
        </Document>
        <Document ID="1971">
            <Title>Semantics</Title>
        </Document>
        <Document ID="984">
            <Title>modern_vfile_memory_allocating_initialize</Title>
        </Document>
        <Document ID="4003">
            <Title>Synopsis</Title>
            <Text>cast_int8_nat32 = 10245

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="256">
            <Title>modern_stream_nat16</Title>
        </Document>
        <Document ID="985">
            <Title>modern_vfile_memory_allocating_finalize</Title>
        </Document>
        <Document ID="2283">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1243">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2307">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3347">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_nat16 = 1195

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4387">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1972">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_nat64 = 167</Text>
        </Document>
        <Document ID="257">
            <Title>modern_stream_nat32</Title>
        </Document>
        <Document ID="986">
            <Title>modern_vfile_memory_allocating_bytes_get</Title>
        </Document>
        <Document ID="258">
            <Title>modern_stream_nat64</Title>
        </Document>
        <Document ID="2284">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_nat16 = 1227</Text>
        </Document>
        <Document ID="1244">
            <Title>Semantics</Title>
        </Document>
        <Document ID="987">
            <Title>modern_vfile_memory_allocating_data_piece_get</Title>
        </Document>
        <Document ID="2308">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_int32 = 1253</Text>
        </Document>
        <Document ID="4388">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_maybe_just_content_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="1973">
            <Title>Semantics</Title>
        </Document>
        <Document ID="259">
            <Title>modern_copy_context</Title>
        </Document>
        <Document ID="988">
            <Title>modern_vfile_stdio_make</Title>
        </Document>
        <Document ID="2630">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_sigma_field_value = 1984</Text>
        </Document>
        <Document ID="740">
            <Title>length_bytes_utf8</Title>
        </Document>
        <Document ID="4389">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2285">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1245">
            <Title>Semantics</Title>
        </Document>
        <Document ID="989">
            <Title>modern_vfile_stdio_initialize</Title>
        </Document>
        <Document ID="2309">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1974">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_float32 = 168</Text>
        </Document>
        <Document ID="741">
            <Title>length_bytes_blob</Title>
        </Document>
        <Document ID="4006">
            <Title>Synopsis</Title>
            <Text>cast_int8_nat64 = 10246

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2631">
            <Title>Semantics</Title>
        </Document>
        <Document ID="742">
            <Title>get_byte_blob</Title>
        </Document>
        <Document ID="2286">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_nat32 = 1228</Text>
        </Document>
        <Document ID="1246">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1975">
            <Title>Semantics</Title>
        </Document>
        <Document ID="743">
            <Title>replace_byte_blob</Title>
        </Document>
        <Document ID="3672">
            <Title>Synopsis</Title>
            <Text>maximum_bound_int64 = 1411

Value type (abstract notation)
int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2632">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_sigma_successor = 2016</Text>
        </Document>
        <Document ID="2287">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1247">
            <Title>Callbacks</Title>
        </Document>
        <Document ID="744">
            <Title>get_data_piece_utf8</Title>
        </Document>
        <Document ID="1976">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_float64 = 169</Text>
        </Document>
        <Document ID="745">
            <Title>get_data_piece_blob</Title>
        </Document>
        <Document ID="2633">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2288">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_nat32 = 1229</Text>
        </Document>
        <Document ID="1248">
            <Title>modern_node</Title>
        </Document>
        <Document ID="746">
            <Title>replace_data_piece_utf8</Title>
        </Document>
        <Document ID="1977">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4330">
            <Title>modern_node_representation_blob_type_make </Title>
        </Document>
        <Document ID="4009">
            <Title>Synopsis</Title>
            <Text>cast_int16_int8 = 10247

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2634">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_named_value = 2048</Text>
        </Document>
        <Document ID="1570">
            <Title>Semantics</Title>
        </Document>
        <Document ID="747">
            <Title>replace_data_piece_blob</Title>
        </Document>
        <Document ID="2289">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1249">
            <Title>Synopsis</Title>
            <Text>struct modern_node {
    …
};</Text>
        </Document>
        <Document ID="748">
            <Title>empty_utf8</Title>
        </Document>
        <Document ID="1978">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_int8 = 192</Text>
        </Document>
        <Document ID="4331">
            <Title>modern_node_representation_function_type_make </Title>
        </Document>
        <Document ID="3675">
            <Title>Synopsis</Title>
            <Text>maximum_bound_nat8 = 1412

Value type (abstract notation)
nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2635">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1571">
            <Title>Parameters</Title>
        </Document>
        <Document ID="749">
            <Title>empty_blob</Title>
        </Document>
        <Document ID="1979">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4332">
            <Title>modern_node_representation_sigma_type_make </Title>
        </Document>
        <Document ID="2636">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maybe_is_just = 2560</Text>
        </Document>
        <Document ID="1572">
            <Title>Semantics</Title>
        </Document>
        <Document ID="503">
            <Title>negate_int8</Title>
        </Document>
        <Document ID="4333">
            <Title>modern_node_representation_name_type_make </Title>
        </Document>
        <Document ID="2637">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1573">
            <Title>Parameters</Title>
        </Document>
        <Document ID="504">
            <Title>negate_int16</Title>
        </Document>
        <Document ID="4334">
            <Title>modern_node_representation_named_type_make </Title>
        </Document>
        <Document ID="2230">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_int16 = 1186</Text>
        </Document>
        <Document ID="505">
            <Title>negate_int32</Title>
        </Document>
        <Document ID="3678">
            <Title>Synopsis</Title>
            <Text>maximum_bound_nat16 = 1413

Value type (abstract notation)
nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2638">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_fmap_maybe = 2592</Text>
        </Document>
        <Document ID="1574">
            <Title>Semantics</Title>
        </Document>
        <Document ID="506">
            <Title>negate_int64</Title>
        </Document>
        <Document ID="3271">
            <Title>Synopsis</Title>
            <Text>arctangent_fraction_float32 = 960

Value type (abstract notation)
float32 -> float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2231">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4335">
            <Title>modern_node_representation_universe_type_make </Title>
        </Document>
        <Document ID="507">
            <Title>negate_float32</Title>
        </Document>
        <Document ID="1920">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2960">
            <Title>Synopsis</Title>
            <Text>add_nat16 = 197

Value type (abstract notation)
nat16 -> nat16 -> maybe nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2639">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1575">
            <Title>Parameters</Title>
        </Document>
        <Document ID="508">
            <Title>negate_float64</Title>
        </Document>
        <Document ID="4336">
            <Title>modern_node_representation_lambda_make </Title>
        </Document>
        <Document ID="2232">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_int16 = 1187</Text>
        </Document>
        <Document ID="509">
            <Title>absolute_value_int8</Title>
        </Document>
        <Document ID="1921">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_and_bool = 32</Text>
        </Document>
        <Document ID="1576">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4337">
            <Title>modern_node_representation_lambda_apply_make</Title>
        </Document>
        <Document ID="2233">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1922">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1577">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3274">
            <Title>Synopsis</Title>
            <Text>arctangent_fraction_float64 = 961

Value type (abstract notation)
float64 -> float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2234">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_int32 = 1188</Text>
        </Document>
        <Document ID="1170">
            <Title>Synopsis</Title>
            <Text>modern_node_type_name_value = 21</Text>
        </Document>
        <Document ID="4338">
            <Title>modern_node_representation_type_family_make </Title>
        </Document>
        <Document ID="1923">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_or_bool = 64</Text>
        </Document>
        <Document ID="2963">
            <Title>Synopsis</Title>
            <Text>add_nat32 = 198

Value type (abstract notation)
nat32 -> nat32 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1578">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3620">
            <Title>Synopsis</Title>
            <Text>floor_float32_nat32 = 1356

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4339">
            <Title>modern_node_representation_let_make </Title>
        </Document>
        <Document ID="2235">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1171">
            <Title>Synopsis</Title>
            <Text>modern_node_type_named_value = 22</Text>
        </Document>
        <Document ID="1924">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1579">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2236">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_int32 = 1189</Text>
        </Document>
        <Document ID="1172">
            <Title>Synopsis</Title>
            <Text>modern_node_type_bool_type = 23</Text>
        </Document>
        <Document ID="1925">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_not_bool = 96</Text>
        </Document>
        <Document ID="3277">
            <Title>Synopsis</Title>
            <Text>hyperbolic_sine_float32 = 992

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2237">
            <Title>Semantics</Title>
        </Document>
        <Document ID="460">
            <Title>multiply_int16</Title>
        </Document>
        <Document ID="1173">
            <Title>Synopsis</Title>
            <Text>modern_node_type_ordering_type = 24</Text>
        </Document>
        <Document ID="1926">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2966">
            <Title>Synopsis</Title>
            <Text>add_nat64 = 199

Value type (abstract notation)
nat64 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3623">
            <Title>Synopsis</Title>
            <Text>floor_float64_nat32 = 1357

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="461">
            <Title>multiply_int32</Title>
        </Document>
        <Document ID="2238">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_int64 = 1190</Text>
        </Document>
        <Document ID="1174">
            <Title>Synopsis</Title>
            <Text>modern_node_type_maybe_type = 25</Text>
        </Document>
        <Document ID="462">
            <Title>multiply_int64</Title>
        </Document>
        <Document ID="1927">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_bool = 128</Text>
        </Document>
        <Document ID="2560">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_int32 = 1602</Text>
        </Document>
        <Document ID="463">
            <Title>multiply_nat8</Title>
        </Document>
        <Document ID="1520">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2239">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1175">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int8_type = 26</Text>
        </Document>
        <Document ID="1928">
            <Title>Semantics</Title>
        </Document>
        <Document ID="464">
            <Title>multiply_nat16</Title>
        </Document>
        <Document ID="2561">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1521">
            <Title>Parameters</Title>
        </Document>
        <Document ID="465">
            <Title>multiply_nat32</Title>
        </Document>
        <Document ID="1176">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int16_type = 27</Text>
        </Document>
        <Document ID="1929">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_int8 = 129</Text>
        </Document>
        <Document ID="2969">
            <Title>Synopsis</Title>
            <Text>add_float32 = 200

Value type (abstract notation)
float32 -> float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="466">
            <Title>multiply_nat64</Title>
        </Document>
        <Document ID="3626">
            <Title>Synopsis</Title>
            <Text>floor_float32_nat64 = 1358

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1522">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2562">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_int64 = 1603</Text>
        </Document>
        <Document ID="467">
            <Title>multiply_float32</Title>
        </Document>
        <Document ID="1177">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int32_type = 28</Text>
        </Document>
        <Document ID="468">
            <Title>multiply_float64</Title>
        </Document>
        <Document ID="2563">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1523">
            <Title>Parameters</Title>
        </Document>
        <Document ID="469">
            <Title>divide_towards_zero_int8</Title>
        </Document>
        <Document ID="1178">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int64_type = 29</Text>
        </Document>
        <Document ID="4260">
            <Title>modern_node_representation_int32_get </Title>
        </Document>
        <Document ID="950">
            <Title>modern_stream_ordering_less</Title>
        </Document>
        <Document ID="2564">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_nat8 = 1604</Text>
        </Document>
        <Document ID="1524">
            <Title>Semantics</Title>
        </Document>
        <Document ID="951">
            <Title>modern_stream_ordering_equal</Title>
        </Document>
        <Document ID="1179">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat8_type = 30</Text>
        </Document>
        <Document ID="4261">
            <Title>modern_node_representation_int64_get </Title>
        </Document>
        <Document ID="2910">
            <Title>Synopsis</Title>
            <Text>equal_to_ordering = 151

Value type (abstract notation)
ordering -> ordering -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="952">
            <Title>modern_stream_ordering_greater</Title>
        </Document>
        <Document ID="3629">
            <Title>Synopsis</Title>
            <Text>floor_float64_nat64 = 1359

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1525">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2565">
            <Title>Semantics</Title>
        </Document>
        <Document ID="953">
            <Title>modern_stream_type_definition_ordering</Title>
        </Document>
        <Document ID="4262">
            <Title>modern_node_representation_nat8_get </Title>
        </Document>
        <Document ID="3951">
            <Title>Synopsis</Title>
            <Text>get_sigma_type_field_type = 2144

Value type (abstract notation)
universe 0 -> maybe (universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3222">
            <Title>Synopsis</Title>
            <Text>x_to_the_y_float32 = 704

Value type (abstract notation)
float32 -> float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="954">
            <Title>modern_node_ordering_less_make</Title>
        </Document>
        <Document ID="2566">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_nat16 = 1605</Text>
        </Document>
        <Document ID="1526">
            <Title>Semantics</Title>
        </Document>
        <Document ID="955">
            <Title>modern_node_ordering_equal_make</Title>
        </Document>
        <Document ID="4263">
            <Title>modern_node_representation_nat16_get </Title>
        </Document>
        <Document ID="956">
            <Title>modern_node_ordering_greater_make</Title>
        </Document>
        <Document ID="2567">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1527">
            <Title>Parameters</Title>
        </Document>
        <Document ID="957">
            <Title>modern_node_ordering_type_make</Title>
        </Document>
        <Document ID="4264">
            <Title>modern_node_representation_nat32_get </Title>
        </Document>
        <Document ID="2160">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_e_to_the_x_float64 = 641</Text>
        </Document>
        <Document ID="1120">
            <Title>Parameters</Title>
        </Document>
        <Document ID="958">
            <Title>equal_to_ordering</Title>
        </Document>
        <Document ID="2568">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_nat32 = 1606</Text>
        </Document>
        <Document ID="1528">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4610">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_apply_left_set)
(modern_library *library,
 void *value,
 void *left);</Text>
        </Document>
        <Document ID="710">
            <Title>bit_and_nat16</Title>
        </Document>
        <Document ID="959">
            <Title>modern_node_type_ordering_value_less</Title>
        </Document>
        <Document ID="4265">
            <Title>modern_node_representation_nat64_get </Title>
        </Document>
        <Document ID="3954">
            <Title>Synopsis</Title>
            <Text>get_sigma_type_successor = 2176

Value type (abstract notation)
universe 0 -> (a : universe 0)
-> maybe (a -> universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2914">
            <Title>Synopsis</Title>
            <Text>compare_int8 = 160

Value type (abstract notation)
int8 -> int8 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3225">
            <Title>Synopsis</Title>
            <Text>x_to_the_y_float64 = 705

Value type (abstract notation)
float64 -> float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1850">
            <Title>Parameters</Title>
        </Document>
        <Document ID="711">
            <Title>bit_and_nat32</Title>
        </Document>
        <Document ID="1121">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2161">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2569">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1529">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4611">
            <Title>Semantics</Title>
        </Document>
        <Document ID="712">
            <Title>bit_and_nat64</Title>
        </Document>
        <Document ID="4266">
            <Title>modern_node_representation_float32_get </Title>
        </Document>
        <Document ID="2162">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_two_to_the_x_float32 = 672</Text>
        </Document>
        <Document ID="1851">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1122">
            <Title>Synopsis</Title>
            <Text>uint8_t *
modern_vfile_memory_allocating_data_piece_get
(modern_library *library,
 void *vfile_state,
 size_t offset,
 size_t bytes);</Text>
        </Document>
        <Document ID="713">
            <Title>bit_or_int8</Title>
        </Document>
        <Document ID="4612">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_apply_right_set)
(modern_library *library,
 void *value,
 void *right);</Text>
        </Document>
        <Document ID="714">
            <Title>bit_or_int16</Title>
        </Document>
        <Document ID="4267">
            <Title>modern_node_representation_float64_get </Title>
        </Document>
        <Document ID="2892">
            <Title>Synopsis</Title>
            <Text>equal_to_nat64 = 136

Value type (abstract notation)
nat64 -> nat64 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1852">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1123">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2163">
            <Title>Semantics</Title>
        </Document>
        <Document ID="715">
            <Title>bit_or_int32</Title>
        </Document>
        <Document ID="4613">
            <Title>Semantics</Title>
        </Document>
        <Document ID="716">
            <Title>bit_or_int64</Title>
        </Document>
        <Document ID="4268">
            <Title>modern_node_representation_utf8_bytes_get </Title>
        </Document>
        <Document ID="3957">
            <Title>Synopsis</Title>
            <Text>get_named_type_content_type = 2208

Value type (abstract notation)
universe 0 -> maybe (universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2917">
            <Title>Synopsis</Title>
            <Text>compare_int16 = 161

Value type (abstract notation)
int16 -> int16 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3228">
            <Title>Synopsis</Title>
            <Text>logarithm_base_x_float32 = 736

Value type (abstract notation)
float32 -> float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1853">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1124">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2164">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_two_to_the_x_float64 = 673</Text>
        </Document>
        <Document ID="717">
            <Title>bit_or_nat8</Title>
        </Document>
        <Document ID="4590">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_named_value_set)
(modern_library *library,
 void *node,
 void *type,
 void *value);</Text>
        </Document>
        <Document ID="4614">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_type_family_item_add)
(modern_library *library,
 void *value,
 void *item,
 uint64_t index);</Text>
        </Document>
        <Document ID="2510">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_int16 = 1505</Text>
        </Document>
        <Document ID="718">
            <Title>bit_or_nat16</Title>
        </Document>
        <Document ID="4269">
            <Title>modern_node_representation_utf8_data_piece_get </Title>
        </Document>
        <Document ID="1854">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1125">
            <Title>Synopsis</Title>
            <Text>size_t
modern_vfile_memory_allocating_bytes_get
(modern_library *library,
 void *vfile_state);</Text>
        </Document>
        <Document ID="2165">
            <Title>Semantics</Title>
        </Document>
        <Document ID="180">
            <Title>modern_node_nat16_type_make</Title>
        </Document>
        <Document ID="719">
            <Title>bit_or_nat32</Title>
        </Document>
        <Document ID="4591">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3551">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_int64 = 1319

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2511">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4615">
            <Title>Semantics</Title>
        </Document>
        <Document ID="181">
            <Title>modern_node_nat32_type_make</Title>
        </Document>
        <Document ID="2895">
            <Title>Synopsis</Title>
            <Text>equal_to_float32 = 137

Value type (abstract notation)
float32 -> float32 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1855">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1126">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2166">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_x_to_the_y_float32 = 704</Text>
        </Document>
        <Document ID="182">
            <Title>modern_node_nat64_type_make</Title>
        </Document>
        <Document ID="4592">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_maybe_type_content_type_set)
(modern_library *library,
 void *value,
 void *content_type);</Text>
        </Document>
        <Document ID="4616">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_type_family_item_remove)
(modern_library *library,
 void *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="2512">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_int32 = 1506</Text>
        </Document>
        <Document ID="183">
            <Title>modern_node_float32_type_make</Title>
        </Document>
        <Document ID="2167">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1856">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1127">
            <Title>Semantics</Title>
        </Document>
        <Document ID="184">
            <Title>modern_node_float64_type_make</Title>
        </Document>
        <Document ID="4593">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4617">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2513">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2168">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_x_to_the_y_float64 = 705</Text>
        </Document>
        <Document ID="1857">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1128">
            <Title>Synopsis</Title>
            <Text>void
modern_vfile_memory_allocating_finalize
(modern_library *library,
 void *vfile_state);</Text>
        </Document>
        <Document ID="4210">
            <Title>Synopsis</Title>
            <Text>cast_int32_blob = 10314

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="186">
            <Title>modern_node_utf8_type_make</Title>
        </Document>
        <Document ID="4594">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_function_type_left_set)
(modern_library *library,
 void *value,
 void *left);</Text>
        </Document>
        <Document ID="3554">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_nat8 = 1320

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2514">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_int64 = 1507</Text>
        </Document>
        <Document ID="1450">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_ordering_greater)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2490">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4618">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_let_item_add)
(modern_library *library,
 void *value,
 void *item,
 uint64_t index);</Text>
        </Document>
        <Document ID="187">
            <Title>modern_node_blob_type_make</Title>
        </Document>
        <Document ID="1858">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2898">
            <Title>Synopsis</Title>
            <Text>equal_to_float64 = 138

Value type (abstract notation)
float64 -> float64 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1129">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2169">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4595">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2491">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_int8 = 1472</Text>
        </Document>
        <Document ID="2515">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1451">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_maybe_nothing)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4619">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1859">
            <Title>Semantics</Title>
        </Document>
        <Document ID="670">
            <Title>maximum_bound_nat16</Title>
        </Document>
        <Document ID="4596">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_function_type_right_set)
(modern_library *library,
 void *value,
 void *right);</Text>
        </Document>
        <Document ID="2492">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2516">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_nat8 = 1508</Text>
        </Document>
        <Document ID="1452">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_maybe_just_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="671">
            <Title>maximum_bound_nat32</Title>
        </Document>
        <Document ID="4213">
            <Title>Synopsis</Title>
            <Text>cast_int64_blob = 10315

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3902">
            <Title>Synopsis</Title>
            <Text>get_data_piece_utf8 = 1888

Value type (abstract notation)
utf8 -> nat64 -> nat64 -> maybe utf8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4597">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3557">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_nat8 = 1321

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2517">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1453">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_int8)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 int8_t value);</Text>
        </Document>
        <Document ID="2493">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_int16 = 1473</Text>
        </Document>
        <Document ID="672">
            <Title>maximum_bound_nat64</Title>
        </Document>
        <Document ID="673">
            <Title>shift_left_int8</Title>
        </Document>
        <Document ID="4598">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_sigma_type_field_type_set)
(modern_library *library,
 void *value,
 void *field_type);</Text>
        </Document>
        <Document ID="2494">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2518">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_nat16 = 1509</Text>
        </Document>
        <Document ID="1454">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_int16)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 int16_t value);</Text>
        </Document>
        <Document ID="674">
            <Title>shift_left_int16</Title>
        </Document>
        <Document ID="675">
            <Title>shift_left_int32</Title>
        </Document>
        <Document ID="2111">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_int16 = 449</Text>
        </Document>
        <Document ID="1800">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2840">
            <Title>Overview</Title>
        </Document>
        <Document ID="4599">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2519">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1455">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_int32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 int32_t value);</Text>
        </Document>
        <Document ID="676">
            <Title>shift_left_int64</Title>
        </Document>
        <Document ID="4192">
            <Title>Synopsis</Title>
            <Text>cast_blob_nat32 = 10308

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3152">
            <Title>Synopsis</Title>
            <Text>negate_float64 = 453

Value type (abstract notation)
float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2112">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3905">
            <Title>Synopsis</Title>
            <Text>get_data_piece_blob = 1889

Value type (abstract notation)
blob -> nat64 -> nat64 -> maybe blob

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4216">
            <Title>Synopsis</Title>
            <Text>cast_nat8_blob = 10316

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1801">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2841">
            <Title>Overview</Title>
            <Text>A library instance is an opaque structure which represents a single configured copy of the system.  It is a basic type which, once constructed, is passed to every function.  It contains structures of pointers to callbacks which are used to accomplish all the low-level tasks the library needs to conduct.  Callback structures are used in several places in the system, and not all of them are part of the library instance - only the most fundamental ones.

In all callbacks, the library is written with the expectation that the client code may longjmp() or cause program termination at any time, and will not crash upon these events.  Allocation failure is also not the unrecoverable condition that it is in some systems; it is permitted, and will cause neither crashes nor memory leaks.  The test suite verifies all of these behaviours extensively.

Library instances (as all of Modern Data) are threading-naive; that is, they use no thread-local storage, but also do no internal locking.  No special action is needed to migrate a library instance from one operating-system thread to another, but only one thread may be in the midst of a library call at any given moment.

The callback structures are the error handler, the allocator, and the node routines; the client state, an opaque pointer for the use of client code, is also part of the library instance’s state.  None of these can be changed once the library instance is initialized, but they can be retrieved and inspected at any time.

The most fundamental task is error handling.  In order to allow the system to be robust against allocation failure, it is necessary that there be no heap allocation required to process an error!  As such, each possible error condition has its own callback.  This leads to a verbose style, but is typically what one wants in any event.

The next-most-important task is memory allocation.  This is straightforward and does not need further discussion.

The final important task is to handle primitive operations on the representation of nodes.  The library provides a default implementation here, but in order to bind more closely with non-C programming languages, the capability to provide one’s own is also provided.  All access to the internal structures is indirected through these callbacks, with the result that all the basic operations (serialization, evaluation, and so on) can be performed regardless of the actual node representation.</Text>
        </Document>
        <Document ID="3881">
            <Title>Synopsis</Title>
            <Text>decode_utf8 = 1696

Value type (abstract notation)
utf8 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2496">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_int32 = 1474</Text>
        </Document>
        <Document ID="1456">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_int64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 int64_t value);</Text>
        </Document>
        <Document ID="677">
            <Title>shift_left_nat8</Title>
        </Document>
        <Document ID="678">
            <Title>shift_left_nat16</Title>
        </Document>
        <Document ID="430">
            <Title>compare_int16</Title>
        </Document>
        <Document ID="2113">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_int32 = 450</Text>
        </Document>
        <Document ID="1802">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2842">
            <Title>Overview</Title>
        </Document>
        <Document ID="679">
            <Title>shift_left_nat32</Title>
        </Document>
        <Document ID="2497">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1457">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_nat8)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint8_t value);</Text>
        </Document>
        <Document ID="431">
            <Title>compare_int32</Title>
        </Document>
        <Document ID="2090">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_nat64 = 391</Text>
        </Document>
        <Document ID="2114">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1050">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1803">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2843">
            <Title>Overview</Title>
            <Text>A modern_builtin_identifier is an enumerated value, one of a sparsely-allocated set which fits in a sixteen-bit range.  They are used with nodes of modern_node_type_builtin to represent certain functions and values which are, as the reader might already be imagining, built-in to the system because they are required for its normal usage.  The represented values are comprised of flow-control primitives, logical combinators, comparators, and operations on primitive values and types, both atomic and aggregate.  The actual names and numbers of each are, for brevity, given alongside their types and semantics in the section Builtin identifiers.</Text>
        </Document>
        <Document ID="432">
            <Title>compare_int64</Title>
        </Document>
        <Document ID="2498">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_int64 = 1475</Text>
        </Document>
        <Document ID="1458">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_nat16)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint16_t value);</Text>
        </Document>
        <Document ID="433">
            <Title>compare_nat8</Title>
        </Document>
        <Document ID="4540">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_name_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="3500">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_nat8 = 1288

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4195">
            <Title>Synopsis</Title>
            <Text>cast_blob_nat64 = 10309

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3155">
            <Title>Synopsis</Title>
            <Text>absolute_value_int8 = 480

Value type (abstract notation)
int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="434">
            <Title>compare_nat16</Title>
        </Document>
        <Document ID="2115">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_int64 = 451</Text>
        </Document>
        <Document ID="1780">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3908">
            <Title>Synopsis</Title>
            <Text>replace_data_piece_utf8 = 1920

Value type (abstract notation)
utf8 -> nat64 -> nat64 -> utf8 -> maybe utf8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1051">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2091">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2499">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1459">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_nat32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint32_t value);</Text>
        </Document>
        <Document ID="4219">
            <Title>Synopsis</Title>
            <Text>cast_nat16_blob = 10317

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="435">
            <Title>compare_nat32</Title>
        </Document>
        <Document ID="4541">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1804">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2844">
            <Title>Overview</Title>
            <Text>The C-based library is a major part of the Modern Data system.  It is the foundation for the library in all other languages except JavaScript, due to the ease of linking against and using C.  It is designed to allow pieces of the system to be swapped out with ease, not just the allocator but the actual representation of nodes.  There is a fair amount of setup that needs to be done in order to use it, so it is recommended to read these overview sections in order.

In order to be considerate about namespace, all symbols that the library exports start with the string “modern_”.</Text>
        </Document>
        <Document ID="3884">
            <Title>Synopsis</Title>
            <Text>encode_utf8 = 1728

Value type (abstract notation)
nat32 -> maybe utf8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2092">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_negative_infinity_int8 = 416</Text>
        </Document>
        <Document ID="2116">
            <Title>Semantics</Title>
        </Document>
        <Document ID="436">
            <Title>compare_nat64</Title>
        </Document>
        <Document ID="1781">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1052">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_non_numeric_float)
(void *client_state);</Text>
        </Document>
        <Document ID="1805">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4542">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_named_type_make)
(modern_library *library,
 struct modern_hash name, void *content_type);</Text>
        </Document>
        <Document ID="437">
            <Title>compare_float32</Title>
        </Document>
        <Document ID="2093">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2117">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_float32 = 452</Text>
        </Document>
        <Document ID="1782">
            <Title>Parameters</Title>
        </Document>
        <Document ID="438">
            <Title>compare_float64</Title>
        </Document>
        <Document ID="1053">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1806">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4543">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3503">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_nat8 = 1289

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="439">
            <Title>add_int8</Title>
        </Document>
        <Document ID="4198">
            <Title>Synopsis</Title>
            <Text>cast_blob_float32 = 10310

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3158">
            <Title>Synopsis</Title>
            <Text>absolute_value_int16 = 481

Value type (abstract notation)
int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2118">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1783">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1054">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2094">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_negative_infinity_int16 = 417</Text>
        </Document>
        <Document ID="1807">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2847">
            <Title>Builtin values</Title>
            <Text>“Built-in value” is a special node type, which consists of an identifier from a sixteen-bit unsigned number-space.  Each permitted identifier has a name and a semantic meaning, described in this section.  Unlike most other node types, the value type of a built-in value depends (solely) on its identifier.  Thus, this node type could be viewed as an “extension” node type, providing a larger number-space.

Many of the extant built-in values exist to provide primitive operations on the other value types, such as arithmetic, trigonometry, and introspection.  There is also one, if_bool, which provides flow control.  Because loops can be implemented with cyclic structures (which is to say, with let-bindings), no other flow-control constructs are necessary to be Turing-complete.

The reader is urged not to inspect the ordering of the symbols within the number-space too carefully, as it will reveal embarrassing details of the order in which concepts were invented during early drafts of Modern Data!  They are presented in this document in a logical order and grouping; the actual numbers assignations are purely an implementation detail.

The human-readable names, numeric values, and semantics are given, in order to attain some approximation of brevity, in a top-level section of this document, Builtin identifiers, alongside the C-library names.</Text>
        </Document>
        <Document ID="3887">
            <Title>Synopsis</Title>
            <Text>character_offset_to_byte_offset_utf8 = 1760

Value type (abstract notation)
utf8 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4544">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_universe_type_make)
(modern_library *library,
 uint64_t level);</Text>
        </Document>
        <Document ID="921">
            <Title>Booleans</Title>
        </Document>
        <Document ID="1400">
            <Title>Synopsis</Title>
            <Text>modern *
modern_evaluate
(modern_library *library,
 modern *node);</Text>
        </Document>
        <Document ID="2440">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2095">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2119">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_float64 = 453</Text>
        </Document>
        <Document ID="1784">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1055">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_immutable)
(void *client_state,
 modern *node);</Text>
        </Document>
        <Document ID="922">
            <Title>Maybes</Title>
        </Document>
        <Document ID="1808">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4545">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2441">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_float64 = 1361
</Text>
        </Document>
        <Document ID="1401">
            <Title>Synopsis</Title>
            <Text>modern *
modern_resolve_backreferences
(modern_library *library,
 modern *node);</Text>
        </Document>
        <Document ID="2096">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_negative_infinity_int32 = 418</Text>
        </Document>
        <Document ID="1785">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1056">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1809">
            <Title>Semantics</Title>
        </Document>
        <Document ID="924">
            <Title>modern_node_backreference_index_get</Title>
        </Document>
        <Document ID="4546">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_lambda_make)
(modern_library *library,
 void *content);</Text>
        </Document>
        <Document ID="3506">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_nat16 = 1290

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1402">
            <Title>Synopsis</Title>
            <Text>modern *
modern_deserialize_memory
(modern_library *library,
 modern_context *context,
 uint8_t *data,
 size_t length);</Text>
        </Document>
        <Document ID="925">
            <Title>modern_node_backreference_index_set</Title>
        </Document>
        <Document ID="2442">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3482">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_int16 = 1282

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2097">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1786">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1057">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4547">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2443">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_int8 = 1376</Text>
        </Document>
        <Document ID="1403">
            <Title>Synopsis</Title>
            <Text>modern *
modern_deserialize_file
(modern_library *library,
 modern_context *context,
 FILE *file);</Text>
        </Document>
        <Document ID="2098">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_negative_infinity_int64 = 419</Text>
        </Document>
        <Document ID="1787">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1058">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_builtin_identifier)
(void *client_state,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="4548">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_apply_make)
(modern_library *library,
 void *left, void *right);</Text>
        </Document>
        <Document ID="1380">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_universe_type_level_set)
(modern_library *library,
 modern *value,
 uint64_t level);</Text>
        </Document>
        <Document ID="390">
            <Title>modern_node_set_type_family_item_add</Title>
        </Document>
        <Document ID="1404">
            <Title>Synopsis</Title>
            <Text>modern *
modern_deserialize_fd
(modern_library *library,
 modern_context *context,
 int fd);</Text>
        </Document>
        <Document ID="2444">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2099">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1788">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1059">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4141">
            <Title>Synopsis</Title>
            <Text>cast_nat64_int32 = 10291

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3101">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_nat8 = 388

Value type (abstract notation)
nat8 -> nat8 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="391">
            <Title>modern_node_set_let_item_remove</Title>
        </Document>
        <Document ID="4549">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3509">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_nat16 = 1291

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1405">
            <Title>Synopsis</Title>
            <Text>modern *
modern_deserialize_vfile
(modern_library *library,
 modern_context *context,
 struct modern_vfile *vfile,
 void *vfile_state);</Text>
        </Document>
        <Document ID="392">
            <Title>modern_node_set_let_item_add</Title>
        </Document>
        <Document ID="2445">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_int16 = 1377</Text>
        </Document>
        <Document ID="3485">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_int16 = 1283

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1789">
            <Title>Semantics</Title>
        </Document>
        <Document ID="393">
            <Title>modern_node_let_content_set</Title>
        </Document>
        <Document ID="1382">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_lambda_content_set)
(modern_library *library,
 modern *value,
 modern *content);</Text>
        </Document>
        <Document ID="1406">
            <Title>Synopsis</Title>
            <Text>modern *
modern_deserialize_input_stream
(modern_library *library,
 modern_context *context,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2446">
            <Title>Semantics</Title>
        </Document>
        <Document ID="394">
            <Title>modern_node_builtin_identifier_set</Title>
        </Document>
        <Document ID="3832">
            <Title>Synopsis</Title>
            <Text>bit_xor_int8 = 1632

Value type (abstract notation)
int8 -> int8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="395">
            <Title>modern_node_mutable_get</Title>
        </Document>
        <Document ID="1383">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_apply_left_set)
(modern_library *library,
 modern *value,
 modern *left);</Text>
        </Document>
        <Document ID="1407">
            <Title>Synopsis</Title>
            <Text>void
modern_serialize_memory_buffer
(modern_library *library,
 modern *value,
 modern_context *context,
 uint8_t *buffer,
 size_t *length);</Text>
        </Document>
        <Document ID="2447">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_int32 = 1378</Text>
        </Document>
        <Document ID="396">
            <Title>General</Title>
        </Document>
        <Document ID="4144">
            <Title>Synopsis</Title>
            <Text>cast_nat64_int64 = 10292

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3104">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_nat16 = 389

Value type (abstract notation)
nat16 -> nat16 -> maybe nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1000">
            <Title>modern_builtin_identifier</Title>
        </Document>
        <Document ID="2040">
            <Title>Semantics</Title>
        </Document>
        <Document ID="397">
            <Title>General</Title>
        </Document>
        <Document ID="3488">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_int32 = 1284

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1384">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_apply_right_set)
(modern_library *library,
 modern *value,
 modern *right);</Text>
        </Document>
        <Document ID="1408">
            <Title>Synopsis</Title>
            <Text>void
modern_serialize_file
(modern_library *library,
 modern *value,
 modern_context *context,
 FILE *file);</Text>
        </Document>
        <Document ID="2448">
            <Title>Semantics</Title>
        </Document>
        <Document ID="398">
            <Title>modern_node_immutable_set</Title>
        </Document>
        <Document ID="2770">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_nat64 = 10288</Text>
        </Document>
        <Document ID="1730">
            <Title>Semantics</Title>
        </Document>
        <Document ID="150">
            <Title>modern_node_lambda_content_get</Title>
        </Document>
        <Document ID="1001">
            <Title>Overview</Title>
            <Text>There are two types of object used to control streaming, streams and processors.  Each has a transparent part, which is a structure containing pointers to callback functions, and an opaque part, which is represented as a void pointer.  To perform input - deserialization - client code provides a stream, and requests a processor from the system.  Output - serialization - is the reverse, with client code providing a processor and requesting a stream from the system.

Virtual files, or vfiles, are also relevant to the streaming model, as they are to the node-based object model and for the same purpose.  See Virtual Files Overview for details.
</Text>
        </Document>
        <Document ID="399">
            <Title>modern_error_handler_immutable</Title>
        </Document>
        <Document ID="2041">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_int16 = 289</Text>
        </Document>
        <Document ID="1385">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_set_type_family_item_add)
(modern_library *library,
 modern *value,
 modern *item,
 uint64_t index);</Text>
        </Document>
        <Document ID="1409">
            <Title>Synopsis</Title>
            <Text>uint8_t *
modern_serialize_memory_allocating
(modern_library *library,
 modern *value,
 modern_context *context,
 size_t *length);</Text>
        </Document>
        <Document ID="2449">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_int64 = 1379</Text>
        </Document>
        <Document ID="880">
            <Title>modern_stream_value_definition_is_next</Title>
        </Document>
        <Document ID="151">
            <Title>modern_node_apply_left_get</Title>
        </Document>
        <Document ID="2771">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1731">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1002">
            <Title>Semantics</Title>
        </Document>
        <Document ID="881">
            <Title>Cast</Title>
        </Document>
        <Document ID="152">
            <Title>modern_node_apply_right_get</Title>
        </Document>
        <Document ID="2042">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3835">
            <Title>Synopsis</Title>
            <Text>bit_xor_int16 = 1633

Value type (abstract notation)
int16 -> int16 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1386">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_set_type_family_item_remove)
(modern_library *library,
 modern *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="882">
            <Title>Type manipulation</Title>
        </Document>
        <Document ID="153">
            <Title>Construction</Title>
        </Document>
        <Document ID="4147">
            <Title>Synopsis</Title>
            <Text>cast_nat64_nat8 = 10293

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3107">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_nat32 = 390

Value type (abstract notation)
nat32 -> nat32 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1732">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2772">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_int8 = 10289</Text>
        </Document>
        <Document ID="2043">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_int32 = 290</Text>
        </Document>
        <Document ID="883">
            <Title>Named value</Title>
        </Document>
        <Document ID="154">
            <Title>modern_node_int8_make</Title>
        </Document>
        <Document ID="3083">
            <Title>Synopsis</Title>
            <Text>divide_float32 = 352

Value type (abstract notation)
float32 -> float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1387">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_set_let_item_add)
(modern_library *library,
 modern *value,
 modern *item,
 uint64_t index);</Text>
        </Document>
        <Document ID="884">
            <Title>Sigma value</Title>
        </Document>
        <Document ID="155">
            <Title>modern_node_int16_make</Title>
        </Document>
        <Document ID="2773">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1733">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1004">
            <Title>Aggregate values</Title>
        </Document>
        <Document ID="2044">
            <Title>Semantics</Title>
        </Document>
        <Document ID="885">
            <Title>Large object</Title>
        </Document>
        <Document ID="156">
            <Title>modern_node_int32_make</Title>
        </Document>
        <Document ID="1388">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_set_let_item_remove)
(modern_library *library,
 modern *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="4470">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_ordering_greater_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="886">
            <Title>Bitwise</Title>
        </Document>
        <Document ID="157">
            <Title>modern_node_int64_make</Title>
        </Document>
        <Document ID="2774">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_int16 = 10290</Text>
        </Document>
        <Document ID="1734">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1005">
            <Title>Why sigma?</Title>
            <Text>An early version of Modern Data featured separate primitives for structures (also called records), arrays, and unions.  A point in favor of this approach is that it makes the job of graphical editors easier, because they don’t need to do special logic to determine “this value is an array”, for example.  However, it was unclear how to fit dependency into this scheme.  Adding a dependent pair type solves this problem but makes the other types redundant, and because the other types can all be built out of dependent pairs as well, the editor’s task is actually still just as hard.  So the decision was made to drop the other types and just build in terms of the dependent pair, which, to give it greater prominence, was given its alternate name of “sigma”.</Text>
        </Document>
        <Document ID="2045">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_int64 = 291</Text>
        </Document>
        <Document ID="3838">
            <Title>Synopsis</Title>
            <Text>bit_xor_int32 = 1634

Value type (abstract notation)
int32 -> int32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="887">
            <Title>Boundary value</Title>
        </Document>
        <Document ID="1389">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_let_content_set)
(modern_library *library,
 modern *value,
 modern *content);</Text>
        </Document>
        <Document ID="158">
            <Title>modern_node_nat8_make</Title>
        </Document>
        <Document ID="4471">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3431">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_int16 = 1251

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="888">
            <Title>Rounding</Title>
        </Document>
        <Document ID="159">
            <Title>modern_node_nat16_make</Title>
        </Document>
        <Document ID="2775">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1735">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2046">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3086">
            <Title>Synopsis</Title>
            <Text>divide_float64 = 353

Value type (abstract notation)
float64 -> float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="640">
            <Title>ceiling_float64_nat64</Title>
        </Document>
        <Document ID="889">
            <Title>Trigonometric</Title>
        </Document>
        <Document ID="4472">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_maybe_nothing_make)
(modern_library *library,
 void *type);</Text>
        </Document>
        <Document ID="641">
            <Title>floor_float32_int8</Title>
        </Document>
        <Document ID="2776">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_int32 = 10291</Text>
        </Document>
        <Document ID="1736">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2047">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_nat8 = 292</Text>
        </Document>
        <Document ID="642">
            <Title>floor_float64_int8</Title>
        </Document>
        <Document ID="4473">
            <Title>Semantics</Title>
        </Document>
        <Document ID="643">
            <Title>floor_float32_int16</Title>
        </Document>
        <Document ID="2777">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1008">
            <Title>Synopsis</Title>
            <Text>modern_library *
modern_library_initialize
(struct modern_error_handler *error_handler,
 struct modern_allocator *allocator,
 struct modern_node_representation *node,
 void (*finalizer)(void *client_state),
 void *client_state);</Text>
        </Document>
        <Document ID="2048">
            <Title>Semantics</Title>
        </Document>
        <Document ID="644">
            <Title>floor_float64_int16</Title>
        </Document>
        <Document ID="4474">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_maybe_just_make)
(modern_library *library,
 void *type,
 void *content_value);</Text>
        </Document>
        <Document ID="2370">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1330">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_named_value_make)
(modern_library *library,
 modern *type,
 modern *value);</Text>
        </Document>
        <Document ID="3434">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_int32 = 1252

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="645">
            <Title>floor_float32_int32</Title>
        </Document>
        <Document ID="2778">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_int64 = 10292</Text>
        </Document>
        <Document ID="1738">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1009">
            <Title>Parameters</Title>
            <Text>Error handler

Allocator

Finalizer

Client state

Return</Text>
        </Document>
        <Document ID="2049">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_nat16 = 293</Text>
        </Document>
        <Document ID="3089">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_int8 = 384

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="646">
            <Title>floor_float64_int32</Title>
        </Document>
        <Document ID="4475">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2371">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_int8 = 1312</Text>
        </Document>
        <Document ID="1331">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_bool_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="647">
            <Title>floor_float32_int64</Title>
        </Document>
        <Document ID="1739">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2779">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4476">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int8_make)
(modern_library *library,
 int8_t value);</Text>
        </Document>
        <Document ID="648">
            <Title>floor_float64_int64</Title>
        </Document>
        <Document ID="1332">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_ordering_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="61">
            <Title>modern_stream_type_family_is_next</Title>
        </Document>
        <Document ID="2372">
            <Title>Semantics</Title>
        </Document>
        <Document ID="62">
            <Title>modern_stream_end</Title>
        </Document>
        <Document ID="649">
            <Title>floor_float32_nat8</Title>
        </Document>
        <Document ID="63">
            <Title>modern_stream_finalize</Title>
        </Document>
        <Document ID="64">
            <Title>Callbacks</Title>
        </Document>
        <Document ID="4477">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2373">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_int8 = 1313</Text>
        </Document>
        <Document ID="1333">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_maybe_type_make)
(modern_library *library,
 modern *content_type);</Text>
        </Document>
        <Document ID="401">
            <Title>modern_stream_type_definition_bool</Title>
        </Document>
        <Document ID="65">
            <Title>modern_vfile_read</Title>
        </Document>
        <Document ID="3437">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_int32 = 1253

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="402">
            <Title>modern_stream_bool_false</Title>
        </Document>
        <Document ID="66">
            <Title>modern_vfile_write</Title>
        </Document>
        <Document ID="67">
            <Title>Node Types</Title>
        </Document>
        <Document ID="4478">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int16_make)
(modern_library *library,
 int16_t value);</Text>
        </Document>
        <Document ID="2374">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1334">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="68">
            <Title>modern_node_type_int8_value</Title>
        </Document>
        <Document ID="403">
            <Title>modern_stream_bool_true</Title>
        </Document>
        <Document ID="69">
            <Title>modern_node_type_int16_value</Title>
        </Document>
        <Document ID="404">
            <Title>modern_node_type_bool_value_false</Title>
        </Document>
        <Document ID="3760">
            <Title>Synopsis</Title>
            <Text>rotate_right_int8 = 1536

Value type (abstract notation)
int8 -> nat8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2720">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4479">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2375">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_int16 = 1314</Text>
        </Document>
        <Document ID="1335">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int16_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="405">
            <Title>modern_node_type_bool_value_true</Title>
        </Document>
        <Document ID="406">
            <Title>modern_node_type_bool_type</Title>
        </Document>
        <Document ID="3032">
            <Title>Synopsis</Title>
            <Text>multiply_float64 = 265

Value type (abstract notation)
float64 -> float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2721">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_nat8 = 10264</Text>
        </Document>
        <Document ID="4072">
            <Title>Synopsis</Title>
            <Text>cast_nat8_int8 = 10268

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2376">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1336">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="407">
            <Title>modern_node_bool_false_make</Title>
        </Document>
        <Document ID="408">
            <Title>modern_node_bool_true_make</Title>
        </Document>
        <Document ID="2722">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2377">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_int16 = 1315</Text>
        </Document>
        <Document ID="1337">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_int64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="409">
            <Title>modern_node_bool_type_make</Title>
        </Document>
        <Document ID="3763">
            <Title>Synopsis</Title>
            <Text>rotate_right_int16 = 1537

Value type (abstract notation)
int16 -> nat8 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2723">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_nat16 = 10265</Text>
        </Document>
        <Document ID="2378">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1338">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="4420">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_successor_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="4075">
            <Title>Synopsis</Title>
            <Text>cast_nat8_int16 = 10269

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3035">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_int8 = 288

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1660">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2724">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2379">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_int32 = 1316</Text>
        </Document>
        <Document ID="1339">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat16_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="4421">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1661">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2725">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_nat32 = 10266</Text>
        </Document>
        <Document ID="4422">
            <Title>Synopsis</Title>
            <Text>struct modern_hash
(*modern_node_representation_name_value_hash_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="3766">
            <Title>Synopsis</Title>
            <Text>rotate_right_int32 = 1538

Value type (abstract notation)
int32 -> nat8 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1662">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2726">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4423">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4078">
            <Title>Synopsis</Title>
            <Text>cast_nat8_int32 = 10270

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3038">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_int16 = 289

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1663">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2727">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_nat64 = 10267</Text>
        </Document>
        <Document ID="360">
            <Title>Combinators</Title>
        </Document>
        <Document ID="4424">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_named_value_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2320">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_nat16 = 1259</Text>
        </Document>
        <Document ID="1664">
            <Title>Semantics</Title>
        </Document>
        <Document ID="361">
            <Title>modern_node_let_count_get</Title>
        </Document>
        <Document ID="2728">
            <Title>Semantics</Title>
        </Document>
        <Document ID="362">
            <Title>modern_node_let_item_get</Title>
        </Document>
        <Document ID="4425">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2321">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3769">
            <Title>Synopsis</Title>
            <Text>rotate_right_int64 = 1539

Value type (abstract notation)
int64 -> nat8 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1665">
            <Title>Parameters</Title>
        </Document>
        <Document ID="363">
            <Title>modern_node_let_content_get</Title>
        </Document>
        <Document ID="2729">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_int8 = 10268</Text>
        </Document>
        <Document ID="4426">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_maybe_type_content_type_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="364">
            <Title>modern_node_type_family_count_get</Title>
        </Document>
        <Document ID="2322">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_nat32 = 1260</Text>
        </Document>
        <Document ID="3362">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_float32 = 1200

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1666">
            <Title>Semantics</Title>
        </Document>
        <Document ID="365">
            <Title>modern_node_type_family_item_get</Title>
        </Document>
        <Document ID="4427">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2323">
            <Title>Semantics</Title>
        </Document>
        <Document ID="366">
            <Title>modern_node_builtin_identifier_get</Title>
        </Document>
        <Document ID="1667">
            <Title>Parameters</Title>
        </Document>
        <Document ID="367">
            <Title>Combinators</Title>
        </Document>
        <Document ID="4428">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_function_type_left_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="1260">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_usage)
(void *client_state);</Text>
        </Document>
        <Document ID="2324">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_nat32 = 1261</Text>
        </Document>
        <Document ID="368">
            <Title>modern_node_function_type_make</Title>
        </Document>
        <Document ID="1668">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4021">
            <Title>Synopsis</Title>
            <Text>cast_int16_nat16 = 10251

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="120">
            <Title>modern_serialize_memory_buffer</Title>
        </Document>
        <Document ID="369">
            <Title>modern_node_let_make</Title>
        </Document>
        <Document ID="4429">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1261">
            <Title>Parameters</Title>
        </Document>
        <Document ID="121">
            <Title>modern_serialize_memory_allocating</Title>
        </Document>
        <Document ID="2325">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3365">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_float64 = 1201

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1990">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_nat32 = 198</Text>
        </Document>
        <Document ID="850">
            <Title>cast_blob_nat8</Title>
        </Document>
        <Document ID="1669">
            <Title>Parameters</Title>
        </Document>
        <Document ID="122">
            <Title>modern_serialize_file</Title>
        </Document>
        <Document ID="851">
            <Title>cast_blob_nat16</Title>
        </Document>
        <Document ID="1262">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2326">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_nat64 = 1262</Text>
        </Document>
        <Document ID="123">
            <Title>modern_serialize_fd</Title>
        </Document>
        <Document ID="1991">
            <Title>Semantics</Title>
        </Document>
        <Document ID="852">
            <Title>cast_blob_nat32</Title>
        </Document>
        <Document ID="3712">
            <Title>Synopsis</Title>
            <Text>shift_right_int8 = 1472

Value type (abstract notation)
int8 -> nat8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="124">
            <Title>modern_serialize_vfile</Title>
        </Document>
        <Document ID="853">
            <Title>cast_blob_nat64</Title>
        </Document>
        <Document ID="1263">
            <Title>Synopsis</Title>
            <Text>struct modern_stream {
    …
};</Text>
        </Document>
        <Document ID="2327">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1992">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_nat64 = 199</Text>
        </Document>
        <Document ID="125">
            <Title>modern_serialize_output_stream</Title>
        </Document>
        <Document ID="854">
            <Title>cast_blob_float32</Title>
        </Document>
        <Document ID="4024">
            <Title>Synopsis</Title>
            <Text>cast_int16_nat32 = 10252

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="126">
            <Title>Node-based object model</Title>
        </Document>
        <Document ID="855">
            <Title>cast_blob_float64</Title>
        </Document>
        <Document ID="3368">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_int8 = 1216

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1264">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2328">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_nat64 = 1263</Text>
        </Document>
        <Document ID="1993">
            <Title>Semantics</Title>
        </Document>
        <Document ID="127">
            <Title>Reading</Title>
        </Document>
        <Document ID="856">
            <Title>cast_int8_blob</Title>
        </Document>
        <Document ID="2650">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1610">
            <Title>Semantics</Title>
        </Document>
        <Document ID="128">
            <Title>modern_node_node_type_get</Title>
        </Document>
        <Document ID="857">
            <Title>cast_int16_blob</Title>
        </Document>
        <Document ID="2329">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1994">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_float32 = 200</Text>
        </Document>
        <Document ID="129">
            <Title>modern_node_value_type_get</Title>
        </Document>
        <Document ID="858">
            <Title>cast_int32_blob</Title>
        </Document>
        <Document ID="3691">
            <Title>Synopsis</Title>
            <Text>shift_left_int16 = 1441

Value type (abstract notation)
int16 -> nat8 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2651">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_sigma_type_successor = 2176</Text>
        </Document>
        <Document ID="1611">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3715">
            <Title>Synopsis</Title>
            <Text>shift_right_int16 = 1473

Value type (abstract notation)
int16 -> nat8 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="610">
            <Title>round_towards_odd_float64_int8</Title>
        </Document>
        <Document ID="859">
            <Title>cast_int64_blob</Title>
        </Document>
        <Document ID="1266">
            <Title>Overview</Title>
            <Text>Virtual files, often abbreviated to vfiles herein, are a type of object which represents an abstract stream of bytes which can be read from and/or written to.  They have a transparent part, which is a structure containing pointers to callback functions, and an opaque part, which is represented as a void pointer.  In typical usage, client code will obtain a virtual file from the system appropriate to the task it wishes to perform, then pass this virtual file into the .  It is also possible for client code to construct its own virtual file and have the system use it, for special-purpose cases.  For example, a Modern Data document might be embedded in a container format such as zip or tar; a special-purpose virtual file could enable deserializing it in-place, without first unpacking the container.

There are just two callbacks in the vfile structure.  To obtain data, use modern_vfile_read().  To produce it, use modern_vfile_write().  A vfile which is only to be used for input need only implement the read function, and similarly for output.

Unlike some of the other object types in Modern Data, such as the node and stream abstractions, the initialization and finaliziation methods are not part of the callback structure.  This is because different vfile types require different parameters upon initialization.  It is the responsibility of the code providing a vfile to also provide a mechanism to initialize and finalize it.  For example, modern_vfile_memory_buffer_initialize() is the function to initialize one particular kind of vfile, which is backed by a buffer of memory managed by the client.  Its parameters are different from those of modern_vfile_stdio_initialize(), which is specific to a vfile backed by a file pointer created by the standard C library.</Text>
        </Document>
        <Document ID="1995">
            <Title>Semantics</Title>
        </Document>
        <Document ID="611">
            <Title>round_towards_odd_float32_int16</Title>
        </Document>
        <Document ID="2652">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1612">
            <Title>Semantics</Title>
        </Document>
        <Document ID="612">
            <Title>round_towards_odd_float64_int16</Title>
        </Document>
        <Document ID="1267">
            <Title>modern_processor</Title>
        </Document>
        <Document ID="1996">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_float64 = 201</Text>
        </Document>
        <Document ID="613">
            <Title>round_towards_odd_float32_int32</Title>
        </Document>
        <Document ID="2653">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_named_type_content_type = 2208</Text>
        </Document>
        <Document ID="1613">
            <Title>Parameters</Title>
        </Document>
        <Document ID="614">
            <Title>round_towards_odd_float64_int32</Title>
        </Document>
        <Document ID="1268">
            <Title>Synopsis</Title>
            <Text>enum modern_node_type
(*modern_node_node_type_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1997">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4350">
            <Title>modern_node_representation_nat16_set </Title>
        </Document>
        <Document ID="3310">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arctangent_float64 = 1153

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="615">
            <Title>round_towards_odd_float32_int64</Title>
        </Document>
        <Document ID="3694">
            <Title>Synopsis</Title>
            <Text>shift_left_int32 = 1442

Value type (abstract notation)
int32 -> nat8 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2654">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1614">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1590">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3718">
            <Title>Synopsis</Title>
            <Text>shift_right_int32 = 1474

Value type (abstract notation)
int32 -> nat8 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="616">
            <Title>round_towards_odd_float64_int64</Title>
        </Document>
        <Document ID="1269">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_value_type_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1998">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_int8 = 224</Text>
        </Document>
        <Document ID="4351">
            <Title>modern_node_representation_nat32_set </Title>
        </Document>
        <Document ID="617">
            <Title>round_towards_odd_float32_nat8</Title>
        </Document>
        <Document ID="2655">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_universe_type_level = 2240</Text>
        </Document>
        <Document ID="1615">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1591">
            <Title>Parameters</Title>
        </Document>
        <Document ID="618">
            <Title>round_towards_odd_float64_nat8</Title>
        </Document>
        <Document ID="1999">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4352">
            <Title>modern_node_representation_nat64_set </Title>
        </Document>
        <Document ID="619">
            <Title>round_towards_odd_float32_nat16</Title>
        </Document>
        <Document ID="2656">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1616">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1592">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4353">
            <Title>modern_node_representation_float32_set </Title>
        </Document>
        <Document ID="3697">
            <Title>Synopsis</Title>
            <Text>shift_left_int64 = 1443

Value type (abstract notation)
int64 -> nat8 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2657">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_sigma = 2272</Text>
        </Document>
        <Document ID="1617">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1593">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4354">
            <Title>modern_node_representation_float64_set </Title>
        </Document>
        <Document ID="2250">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_nat32 = 1196</Text>
        </Document>
        <Document ID="1210">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3314">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_int8 = 1184

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2658">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1618">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1594">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4355">
            <Title>modern_node_representation_utf8_data_piece_set </Title>
        </Document>
        <Document ID="2251">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1211">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1940">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2659">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_name = 2304</Text>
        </Document>
        <Document ID="1619">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1595">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3292">
            <Title>Synopsis</Title>
            <Text>hyperbolic_tangent_float64 = 1057

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2252">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_nat32 = 1197</Text>
        </Document>
        <Document ID="1212">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4356">
            <Title>modern_node_representation_blob_data_piece_set </Title>
        </Document>
        <Document ID="1941">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_nat32 = 135</Text>
        </Document>
        <Document ID="2981">
            <Title>Synopsis</Title>
            <Text>subtract_int32 = 226

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1596">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4357">
            <Title>modern_node_representation_sigma_set </Title>
        </Document>
        <Document ID="2253">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1213">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3317">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_int8 = 1185

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1942">
            <Title>Semantics</Title>
        </Document>
        <Document ID="570">
            <Title>round_towards_zero_float64_nat8</Title>
        </Document>
        <Document ID="1597">
            <Title>Parameters</Title>
        </Document>
        <Document ID="571">
            <Title>round_towards_zero_float32_nat16</Title>
        </Document>
        <Document ID="4358">
            <Title>modern_node_representation_named_value_set </Title>
        </Document>
        <Document ID="2254">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_nat64 = 1198</Text>
        </Document>
        <Document ID="1214">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1190">
            <Title>Synopsis</Title>
            <Text>modern_node_type_named_type = 41</Text>
        </Document>
        <Document ID="1943">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_nat64 = 136</Text>
        </Document>
        <Document ID="572">
            <Title>round_towards_zero_float64_nat16</Title>
        </Document>
        <Document ID="1598">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2600">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_nat32 = 1670</Text>
        </Document>
        <Document ID="573">
            <Title>round_towards_zero_float32_nat32</Title>
        </Document>
        <Document ID="3295">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arcsine_float32 = 1088

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2255">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1215">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1191">
            <Title>Synopsis</Title>
            <Text>modern_node_type_universe_type = 42</Text>
        </Document>
        <Document ID="4359">
            <Title>modern_node_representation_maybe_type_content_type_set</Title>
        </Document>
        <Document ID="1944">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2984">
            <Title>Synopsis</Title>
            <Text>subtract_int64 = 227

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="574">
            <Title>round_towards_zero_float64_nat32</Title>
        </Document>
        <Document ID="1599">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2601">
            <Title>Semantics</Title>
        </Document>
        <Document ID="575">
            <Title>round_towards_zero_float32_nat64</Title>
        </Document>
        <Document ID="2256">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_nat64 = 1199</Text>
        </Document>
        <Document ID="1216">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1192">
            <Title>Synopsis</Title>
            <Text>modern_node_type_lambda = 43</Text>
        </Document>
        <Document ID="1945">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_float32 = 137</Text>
        </Document>
        <Document ID="576">
            <Title>round_towards_zero_float64_nat64</Title>
        </Document>
        <Document ID="3642">
            <Title>Synopsis</Title>
            <Text>minimum_bound_int16 = 1377

Value type (abstract notation)
int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2602">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_nat64 = 1671</Text>
        </Document>
        <Document ID="2257">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1217">
            <Title>Semantics</Title>
        </Document>
        <Document ID="577">
            <Title>round_away_from_zero_float32_int8</Title>
        </Document>
        <Document ID="1193">
            <Title>Synopsis</Title>
            <Text>modern_node_type_apply = 44</Text>
        </Document>
        <Document ID="1946">
            <Title>Semantics</Title>
        </Document>
        <Document ID="578">
            <Title>round_away_from_zero_float64_int8</Title>
        </Document>
        <Document ID="2603">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3298">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arcsine_float64 = 1089

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2258">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_float32 = 1200</Text>
        </Document>
        <Document ID="1218">
            <Title>Semantics</Title>
        </Document>
        <Document ID="579">
            <Title>round_away_from_zero_float32_int16</Title>
        </Document>
        <Document ID="1194">
            <Title>Synopsis</Title>
            <Text>modern_node_type_type_family = 45</Text>
        </Document>
        <Document ID="1947">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_float64 = 138</Text>
        </Document>
        <Document ID="2987">
            <Title>Synopsis</Title>
            <Text>subtract_nat8 = 228

Value type (abstract notation)
nat8 -> nat8 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4300">
            <Title>modern_node_representation_maybe_just_make </Title>
        </Document>
        <Document ID="2580">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_nat8 = 1636</Text>
        </Document>
        <Document ID="2604">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_decode_utf8 = 1696</Text>
        </Document>
        <Document ID="1540">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2259">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1219">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1195">
            <Title>Synopsis</Title>
            <Text>modern_node_type_let = 46</Text>
        </Document>
        <Document ID="1948">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4301">
            <Title>modern_node_representation_int8_make </Title>
        </Document>
        <Document ID="3645">
            <Title>Synopsis</Title>
            <Text>minimum_bound_int32 = 1378

Value type (abstract notation)
int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2605">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1541">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2581">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1196">
            <Title>Synopsis</Title>
            <Text>modern_node_type_backreference = 47</Text>
        </Document>
        <Document ID="1949">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_name = 139</Text>
        </Document>
        <Document ID="4302">
            <Title>modern_node_representation_int16_make </Title>
        </Document>
        <Document ID="2582">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_nat16 = 1637</Text>
        </Document>
        <Document ID="2606">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_encode_utf8 = 1728</Text>
        </Document>
        <Document ID="1542">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1197">
            <Title>Synopsis</Title>
            <Text>modern_node_type_builtin = 48</Text>
        </Document>
        <Document ID="4303">
            <Title>modern_node_representation_int32_make </Title>
        </Document>
        <Document ID="2583">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2607">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1543">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1198">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4280">
            <Title>modern_node_representation_sigma_type_successor_get </Title>
        </Document>
        <Document ID="4304">
            <Title>modern_node_representation_int64_make </Title>
        </Document>
        <Document ID="2200">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arctangent_fraction_float64 = 961</Text>
        </Document>
        <Document ID="3648">
            <Title>Synopsis</Title>
            <Text>minimum_bound_int64 = 1379

Value type (abstract notation)
int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2608">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_character_offset_to_byte_offset_utf8 = 1760</Text>
        </Document>
        <Document ID="1544">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2584">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_nat32 = 1638</Text>
        </Document>
        <Document ID="1199">
            <Title>Semantics</Title>
        </Document>
        <Document ID="820">
            <Title>cast_nat64_nat16</Title>
        </Document>
        <Document ID="3241">
            <Title>Synopsis</Title>
            <Text>cosine_float32 = 800

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2201">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4281">
            <Title>modern_node_representation_named_type_name_get </Title>
        </Document>
        <Document ID="4305">
            <Title>modern_node_representation_nat8_make </Title>
        </Document>
        <Document ID="2585">
            <Title>Semantics</Title>
        </Document>
        <Document ID="821">
            <Title>cast_nat64_nat32</Title>
        </Document>
        <Document ID="2609">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1545">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4282">
            <Title>modern_node_representation_named_type_content_type_get</Title>
        </Document>
        <Document ID="822">
            <Title>cast_utf8_blob</Title>
        </Document>
        <Document ID="2202">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_sine_float32 = 992</Text>
        </Document>
        <Document ID="4306">
            <Title>modern_node_representation_nat16_make </Title>
        </Document>
        <Document ID="2586">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_nat64 = 1639</Text>
        </Document>
        <Document ID="1546">
            <Title>Semantics</Title>
        </Document>
        <Document ID="823">
            <Title>cast_blob_utf8</Title>
        </Document>
        <Document ID="4283">
            <Title>modern_node_representation_universe_type_level_get </Title>
        </Document>
        <Document ID="3972">
            <Title>Synopsis</Title>
            <Text>make_function_type = 2368

Value type (abstract notation)
universe 0 -> universe 0 -> universe 0

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2932">
            <Title>Synopsis</Title>
            <Text>compare_nat32 = 166

Value type (abstract notation)
nat32 -> nat32 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="824">
            <Title>cast_name_blob</Title>
        </Document>
        <Document ID="2203">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4307">
            <Title>modern_node_representation_nat32_make </Title>
        </Document>
        <Document ID="2587">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1547">
            <Title>Parameters</Title>
        </Document>
        <Document ID="825">
            <Title>cast_blob_name</Title>
        </Document>
        <Document ID="4284">
            <Title>modern_node_representation_lambda_content_get </Title>
        </Document>
        <Document ID="3244">
            <Title>Synopsis</Title>
            <Text>cosine_float64 = 801

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2204">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_sine_float64 = 993</Text>
        </Document>
        <Document ID="1140">
            <Title>Synopsis</Title>
            <Text>void *
modern_vfile_memory_buffer_initialize
(modern_library *library,
 uint8_t *data,
 size_t length);</Text>
        </Document>
        <Document ID="2180">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cosine_float64 = 801</Text>
        </Document>
        <Document ID="4308">
            <Title>modern_node_representation_nat64_make </Title>
        </Document>
        <Document ID="2588">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_int8 = 1664</Text>
        </Document>
        <Document ID="1548">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4630">
            <Title>2013-02-05 lpsmith</Title>
            <Text>9:23
lpsmith
 how long and what general topic?
9:23
irene-knapp
it's my Modern Data project, a self-describing binary data format for dependently-typed object graphs (*pauses for breath*), and you can read just until it gets boring if you want :)
you aren't obligated just btw :)
9:42
lpsmith
the third paragraph seems pretty... strange to me.   I don't think I agree
9:42
irene-knapp
hmmm
the binary-only one?
9:42
lpsmith
yeah
I'm not opposed to a binary format
9:42
irene-knapp
but you don't think I've justified it
9:42
lpsmith
though I think a standard textual format would be helpful too
9:42
irene-knapp
that's valuable feedback and I'd like to discuss further
yeah - well it has become very clear that I need one for documentation purposes at the very least
9:43
lpsmith
I mean, if you are complaining about html,  i think the problem is more that we were much too lenient in trying to get something to show up in the browser
9:43
irene-knapp
with my current set of possible node types, anything textual is going to be very verbose, but that's fine for documentation
I just really don't want people to think of the text format as the real one, because then they'll be like "Modern Data is ridiculous, how can I use this syntax?"
you're not supposed to - it exists for documentation and debugging, which are important, but that's it
I guess I should just say that
you're not the first person to comment on that part but you're the first to outright disagree with it, and I appreciate that
9:45
lpsmith
well,  I don't think the fact that people make mistakes is very relevant
9:46
irene-knapp
yeah, no, I see that now, I think I got into a case where I really wanted to buy this argument because I was convinced of its conclusion but couldn't elucidate the real argument
9:47
lpsmith
Parametericity is an interesting idea though
9:47
irene-knapp
Unlike the above-mentioned alternatives, Modern Data is primarily a binary format, not a textual one.  This is because any textual format based on it would necessarily be either very verbose and hard to write, or else would give up many important features.  There is a textual format for documentation and debugging, but users are urged never to use it for interchange.
does that sound better?
yes!
9:47
lpsmith
maybe not as useful without functions as well,  but still,  it does get you something
9:47
irene-knapp
oh it has functions
it has to - I didn't realize when I wrote this introduction
but dependent types imply them
9:47
lpsmith
hmm
9:47
irene-knapp
because the typechecker has to be able to evaluate things
you need lambda and apply, and that means you're Turing-complete
9:47
lpsmith
yeah
9:48
irene-knapp
so you might as well throw in operations on primitives to make things easy, so I did
9:48
lpsmith
I'm all for strongly encouraging it not be used for interchange, I'm fine with that
9:48
irene-knapp
good :)
so you like the new wording.  I've put it in my master copy.
9:48
lpsmith
but to be honest,  for a lot of people some kind of standard textual format will be their preferred way of interacting with it
9:48
irene-knapp
I suppose.
I've got a separate project which is a GUI editor for the thing
I should make sure it works on the console as well
but I want the core library working, at least for basic serialization and deserialization (typechecking and evaluating can wait until I have some practical experience with the thing)
before I put too much time into the editor
9:50
lpsmith
yeah, your scrawlings are pretty incomprehensible,  but that's ok
9:50
irene-knapp
haha
sorry :)
I forgot those got included, but I see I have managed to put a disclaimer at the top of them lol
it's also no longer all true.  like cycle breaking is no longer lambda/apply, it's recursive-let and what I called "type families" (recursive-let-for-types)
(the difference is that a type family doesn't return a value - in Haskell notation, there's no "in" clause)
9:53
lpsmith
well, sounds moderately interesting,  I may read some more later.... though I skimmed down to mutation,  which I suppose is relevant to the C api,  but how is a standard notion of mutation helpful otherwise?
9:53
irene-knapp
thanks, haha
it's not helpful otherwise.  I have been flip-fllopping.
9:53
lpsmith
I mean,  globally there is no consistent state.  (Though I guess google's started to fix that)
9:53
irene-knapp
I might take it out again
lol
thank you for reading, again :) I really do appreciate all feedback and time
I had been thinking,
until yesterday when I had an epiphany,
9:54
lpsmith
data's best thought of as pure values,  sent between stateful processes in my mind
9:54
irene-knapp
that mutation was necessary to construct cyclic objects
there needs to be a paragraph or two in here about how the way it actually works is that there's "surface structure", which is a proper tree, and "deep structure", which potentially has sharing and cycles
9:55
lpsmith
sure,  unless you have data-based fixed points
9:55
irene-knapp
I do, actually, but they aren't sufficient
9:55
lpsmith
oh?
9:55
irene-knapp
well - say rather that they're really, really inefficient
that was my first model
I abandoned it because it got really confusing
and because it meant I had to make the evaluator work before I could test ANYTHING
9:56
lpsmith
I could believe that
9:56
irene-knapp
what I actually do now is, there are nodes that are "back references" in the "surface structure"
they are actually De Bruijn indices
and they behave like symbolic links do in Unix
normal operations traverse them silently, but they're available for inspection as well
I also - I'm going to copy-paste this chatlog somewhere and turn it into reminders to myself, if that's okay
9:58
lpsmith
yeah that's fine
9:58
irene-knapp
thanks
9:58
lpsmith
I log pretty much everything :)
9:58
irene-knapp
nod :)
9:59
lpsmith
I suppose I should delete those logs once in a while though.
9:59
irene-knapp
perhaps, I dunno.  I have logs back to 1998.
not continuous for that period, and not all in the same file format, ....
I also have logs that predate that, but they're like a 5-meg archive in the ICQ version 99b database format that I can't read, but I saved it alongside a copy of the reverse-engineering notes for that format in case I ever really want to see what the life of an angsty teen was like :)
oh right, so what I was about to say but I distracted myself
I need to write up notes on possible applications
stylesheet languages, "fake typeclasses" (because you don't need real typeclasses with dependent types)
for defined file formats, I expect the normal top-level data structure to be
MyFancyDocumentFormat (a : Type) (a -> SomeExportFormat) a
in other words, a three-tuple of a description of the actual format, a function converting that to the desired format, and the actual format
it's essentially saying "anything that is convertible to this format" instead of "anything that's in this exact format", to allow programs to interoperate but still store things their own way
when I figure out how dictionaries are going to work (I think I can build them on the primitives I have already - but I need to do that), I may change that recommendation to be a dictionary one field of which is the exporter
so that you can store data that has multiple views
10:05
lpsmith
I dunno,  I'd come up with a couple simple-ish examples
10:05
irene-knapp
"View as webpage", "view as printer-oriented document", "view as hyper-document-archive-thing"
yeah, probably
I need simple examples also
well, anyway
I've talked your ear off enough :) hehe</Text>
        </Document>
        <Document ID="4285">
            <Title>modern_node_representation_apply_left_get </Title>
        </Document>
        <Document ID="4309">
            <Title>modern_node_representation_float32_make </Title>
        </Document>
        <Document ID="2205">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1870">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1141">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2181">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2589">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1549">
            <Title>Parameters</Title>
        </Document>
        <Document ID="290">
            <Title>Floating-point numbers</Title>
            <Text>The floating-point datatypes used by Modern Data are a subset of the “interchange formats” defined by IEEE 754-2008.</Text>
        </Document>
        <Document ID="4631">
            <Text>XHTML XSLT: xhtml-toc.xslt
</Text>
        </Document>
        <Document ID="4286">
            <Title>modern_node_representation_apply_right_get </Title>
        </Document>
        <Document ID="3975">
            <Title>Synopsis</Title>
            <Synopsis>TODO What does this function do?</Synopsis>
            <Text>make_named_value = 2336

Value type (abstract notation)
universe 0 -> name -> universe 0 TODO … ???

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2935">
            <Title>Synopsis</Title>
            <Text>compare_nat64 = 167

Value type (abstract notation)
nat64 -> nat64 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="291">
            <Title>Integers</Title>
        </Document>
        <Document ID="2206">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_cosine_float32 = 1024</Text>
        </Document>
        <Document ID="1871">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1142">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2182">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_tangent_float32 = 832</Text>
        </Document>
        <Document ID="292">
            <Title>Natural numbers</Title>
        </Document>
        <Document ID="4632">
            <Title>Untitled</Title>
        </Document>
        <Document ID="4287">
            <Title>modern_node_representation_type_family_count_get </Title>
        </Document>
        <Document ID="3247">
            <Title>Synopsis</Title>
            <Text>tangent_float32 = 832

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2207">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1872">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1143">
            <Title>Synopsis</Title>
            <Text>struct modern_vfile *
modern_vfile_memory_buffer_make
(modern_library *library);</Text>
        </Document>
        <Document ID="2183">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4633">
            <Title>The Blink Protocol</Title>
            <Text>￼
Start Blog Download
Start

Properties Scenarios Tutorial Background Specifications Changelog Team FAQ
Make Every Word Tell
The Blink Protocol is a standardized method for defining how to exchange messages in and between systems. Blink makes it easy for people to define what information to exchange and how. It also eliminates friction in the communications machinery.
The philosophy of Blink is that efficient communication follows from making every word tell.
Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. This requires not that the writer make all his sentences short, or that he avoid all detail and treat his subjects only in outline, but that every word tell.

-- William Strunk, Jr. The Elements of Style. 1918. [1]
In a Blink
The blink of the eye takes about a hundred milliseconds. In that time frame, you can pass a million trading messages over Blink.
Key Properties
	•	An integrated, easy to use protocol specification language
	•	A straightforward, efficient, and compact binary transfer format
	•	A second binary transfer format that trades compactness for even lower processing overhead. This format can also be used as a native memory layout in modern x86 processors
	•	Three text renderings: XML, JSON, and Blink Tag
	•	Self‐describing message streams
	•	Platform independence
	•	Interaction model independence
	•	Suitability for FPGA implementation
Blink is free to use for any purpose.
Blink was designed by Pantor Engineering AB for internal and client use, and we decided to make it publicly available. The design and specifications are in a beta phase, and are improving thanks to feedback from people inside and outside the financial markets community.
To make it easier to write your own Blink implementation, you can download tools for schema metadata processing here.


Copyright ©, 2012-2013, Pantor Engineering AB. All Rights Reserved

Follow @blinkproto
￼
￼
</Text>
        </Document>
        <Document ID="294">
            <Title>Text</Title>
            <Text>Modern Data supports exactly one text encoding, which is UTF-8, as defined by RFC 3629.  Because this encoding is inherently variable-length even with a fixed number of characters, no attempt is made to constrain its size at the level of primitives.  Instead, it is treated by Modern Data as a variable-length object.

It would be possible to have a taxonomy of text encodings and character sets, with primitives for conversion.  However, the primary goal of Modern Data is to be an interchange format.  It is not helpful to authors to have to support many encodings, especially now that UTF-8 is adequate for almost all purposes.  Furthermore, custom formats can still be defined in principle by specifying predicates to be satisfied by binary large objects.</Text>
        </Document>
        <Document ID="4288">
            <Title>modern_node_representation_type_family_item_get </Title>
        </Document>
        <Document ID="2184">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_tangent_float64 = 833</Text>
        </Document>
        <Document ID="2208">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_cosine_float64 = 1025</Text>
        </Document>
        <Document ID="1873">
            <Title>Semantics</Title>
        </Document>
        <Document ID="295">
            <Title>Binary large objects</Title>
        </Document>
        <Document ID="1144">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4634">
            <Title>2013-02-22 shachaf in #haskell</Title>
            <Text>irene-knapp
I can join it for the occasion
8:24
tjohnson [~tjohnson@71-20-46-196.war.clearwire-wmx.net] entered the room.
8:24
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:25
SolidResolve left the room (quit: Max SendQ exceeded).
8:25
irene-knapp
but of course, Modern Data is not written in Haskell although it intends to have a Haskell binding through the FFI
8:25
alec__ [~alec@68-185-207-130.dhcp.dntn.tx.charter.com] entered the room.
8:25
kamatsu left the room (quit: Quit: Leaving.).
8:25
k0001 left the room (quit: Ping timeout: 255 seconds).
8:25
irene-knapp
my first version was in Haskell but the RTS concern is a big one :(
8:25
shachaf
I don't know what it is.
8:25
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:25
SolidResolve left the room (quit: Max SendQ exceeded).
8:25
leninmhs
i think is a little big size for a very simple program, of course im starting on haskell
8:25
irene-knapp
oh
8:25
shachaf
This was more of a general point about type class abuse. And at any rate it's a point about APIs, not implementations.
8:25
irene-knapp
I've been talking about it incessantly in every channel I'm in, lol
but okay
it's to be a self-describing binary data format for dependently typed object graphs =p
say that ten times fast :)
8:26
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:26
SolidResolve left the room (quit: Max SendQ exceeded).
8:26
danharaj
I'm afraid to say it once.
8:26
irene-knapp
lol
anyway, so yes
APIs, okay
well I mean
8:26
shachaf
By the way, there's still value to existentials. For example you can get much less space usage in some cases.
8:26
jmelesky left the room (quit: Quit: Leaving).
8:26
irene-knapp
it's …… a data format that I was discussing
not an API at all
8:26
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:27
SolidResolve left the room (quit: Max SendQ exceeded).
8:27
otters left the room (quit: Ping timeout: 256 seconds).
8:27
irene-knapp
calling "data which contains a dictionary of functions, and a value which they can operate on" an API is a stretch
8:27
monochrom
if you like to measure exe sizes, at least take two data points and do linear regression, not one data point
8:27
k0001 [~k0001@186.153.74.218] entered the room.
8:27
shachaf
In (exists a. (a, (a -> String, a -> Foo, a -> Bar))), the "vtable" can be shared.
In (String, Foo, Bar), it can't.
8:27
irene-knapp
wait, let me read that
8:27
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:27
SolidResolve left the room (quit: Max SendQ exceeded).
8:27
irene-knapp
before you continue
8:27
shachaf
This is pretty unfortunate.
8:27
monochrom
measure one line of code. then measure 1000 lines of code. then draw a line.
8:27
shakakai [~shakakai@69.170.161.42] entered the room.
8:27
irene-knapp
yes.  exactly.
8:28
kamatsu [~Adium@123-243-95-236.static.tpgi.com.au] entered the room.
8:28
irene-knapp
the former is what I am doing.
8:28
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:28
SolidResolve left the room (quit: Max SendQ exceeded).
8:28
irene-knapp
you've definitely convinced me not to use the term typeclass for it
8:28
erkin left the room (quit: Remote host closed the connection).
8:28
irene-knapp
because that term will make people think what you thought
it probably ISN'T a typeclass, even
8:29
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:29
irene-knapp
that's just how I came up with the concept
8:29
SolidResolve left the room (quit: Max SendQ exceeded).
8:29
bitonic
let’s say I have `class Foo f g | f -> g' and then `instance (Foo f f) => Foo (Bar f) f'.  can I express this with type families?  `class Foo f where; Inner f :: * -> *' and `instance (Foo f, f ~ Inner f) => Foo (Bar f)' requires UndecidableInstances
8:29
irene-knapp
I mean that the relationship between what I am doing and typeclasses is all in my head and shouldn't be pushed on others :)
8:29
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:29
SolidResolve left the room (quit: Max SendQ exceeded).
8:29
Cale
leninmhs: There's a very large constant term in the size of GHC-generated binaries because it statically links everything by default.
8:29
erkin [~PinkiePie@unaffiliated/erkin] entered the room.
8:29
irene-knapp
shachaf: have I resolved your confusion now?
8:29
slink_ left the room (quit: Ping timeout: 255 seconds).
8:30
shachaf
irene-knapp: OK, other than performance concerns, why would you have ((a:Type), a, a -> Foo, a -> Bar), rather than (Foo, Bar)?
8:30
irene-knapp
oh
because this is a data format, not an API
8:30
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:30
SolidResolve left the room (quit: Max SendQ exceeded).
8:30
irene-knapp
the purpose is data interchange
8:30
bananagram left the room (quit: Ping timeout: 264 seconds).
8:30
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:30
SolidResolve left the room (quit: Max SendQ exceeded).
8:31
shachaf
?
You interchange a "dictionary of functions"?
8:31
leninmhs
i see, equally im read a little at http://www.haskell.org/ghc/docs/latest/html/users_guide/options-optimise.html
8:31
Icarot left the room (quit: Ping timeout: 248 seconds).
8:31
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:31
SolidResolve left the room (quit: Max SendQ exceeded).
8:31
kamatsu left the room (quit: Client Quit).
8:31
irene-knapp
yes!
8:31
jfischoff [~jfischoff@c-67-169-45-161.hsd1.ca.comcast.net] entered the room.
8:31
irene-knapp
functions are just data, after all
8:32
SolidResolve [~SolidReso@cpe-67-248-182-64.nycap.res.rr.com] entered the room.
8:32
irene-knapp
there are applications - basically this is what XML and other self-describing formats were grasping for
8:32
tjohnson left the room (quit: Ping timeout: 245 seconds).
8:32
shachaf
OK, so this thing is about serializing functions and what not?
8:33
Cale
leninmhs: try  ghc -dynamic foo
8:33
irene-knapp
well
so you know what dependent types are?
briefly, types and data are interchangeable, but the implications are far-reaching because you can express arbitrary proofs in the typesystem, which means you can express arbitrary validation criteria that the data must satisfy
it also implies that you can express arbitrary functions
8:34
Cale
leninmhs: and then strip the binary if you want
8:35
path[l] left the room (quit: Quit: path[l]).
8:35
stephenjudkins [~textual@c-76-105-198-110.hsd1.or.comcast.net] entered the room.
8:36
Cale
Compiled normally, a little program I wrote for someone else in this channel a little while ago is 1121467 bytes. Compiled with -dynamic it's 22367 and then after stripping, it's 14036
8:36
einsof left the room (quit: ).
8:36
slink_ [~slink@pool-108-46-131-174.nycmny.fios.verizon.net] entered the room.
8:36
monochrom
to run it, the runner has to install GHC, which is 70-100MB
8:36
jfischoff left the room (quit: Quit: jfischoff).
8:37
otters [~otters@oftn/member/otters] entered the room.
8:37
Cale
right :)
8:37
irene-knapp
shachaf: so anyway, serializing functions is one of the quite-a-few applications I see for this
of course we have a name for serialized functions
we call them source code
8:37
Cale
Well, maybe not all of ghc...
8:37
ozataman left the room (quit: Remote host closed the connection).
8:37
Cale
But a bunch of other shared object files anyway
8:38
gridaphobe left the room (quit: Remote host closed the connection).
8:38
irene-knapp
shachaf: basically there's a whole bunch of related technologies that I want to build, similar in inspiration to Peaker's master plan to make one IDE to rule them all and in the let-clause bind them (har har),
but I want to make them as separate small tools
to do that, they have to be able to communicate with each other
across a well-defined interface
8:38
milessabin [~miles@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net] entered the room.
8:38
monochrom
colah told his method of reducing exe size. and he statically links both haskell libs and c libs. (c libs because there is some FFI and he doesn't want to burden users with hunting libs)
8:39
irene-knapp
and it turns out that almost the entire interesting problem is to define that interface
(and implement it, of course)
does that make sense?
8:39
monochrom
half of it is strip, and the other half of it is building all haskell libs with split-objs.
8:39
dmac [~Adium@12.207.22.242] entered the room.
8:39
znode left the room (quit: Remote host closed the connection).
8:39
azaq23 left the room (quit: Quit: Leaving.).
8:40
monochrom
and for fun, on top of that, he throws in self-decompressing-exe which we all enjoyed during the DOS days
8:40
irene-knapp
bah I lost shachaf's attention :)
8:40
andrewsw left the room (quit: Ping timeout: 244 seconds).
8:40
stephenjudkins left the room (quit: Client Quit).
8:40
monochrom
also, his strip command is formidable. he adds like 10 flags. although, we don't know how much they help
8:40
Taslem [320472e7@gateway/web/freenode/ip.50.4.114.231] entered the room.
8:41
irene-knapp
in addition to source code, I'd like to replace the command-line shell
and in addition to an editor I'd like a terminal window and a web browser
those will all come later though
8:42
monochrom
but the overall result is impressive. something like 5MB but it includes every haskell lib and c lib under the sun plus your kitchen sink
8:42
yacks [~yacks@180.151.36.169] entered the room.</Text>
        </Document>
        <Document ID="2530">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_int64 = 1539</Text>
        </Document>
        <Document ID="296">
            <Title>80-bit and 128-bit values</Title>
            <Text>It is worth noting that, while many platforms support 128-bit float values, many others do not.  Even when the compiler does, often the system library does not.  This is, not least, because there are no standardized names for the functions - though GNU libquadmath uses the “q” suffix on the ISO C99 base names.  The C type which would be the most likely candidate to be a 128-bit float, long double, is actually an 80-bit float on most Intel-related platforms, while non-Intel platforms seldom support anything longer than 64-bit floats.

This creates a situation where there is no one agreed-upon format for very large floating-point numbers, and it is a significant portability burden to write code which uses either, let alone both.  Modern Data’s purpose is to be an interchange format and lingua franca; therefore, it leaves out support for these types entirely.  It is expected that, should a standard emerge, Modern Data will be duly extended in some future revision.

This decision was not made casually; in fact, an early version of the design featured a 128-bit float.  The only way to reconcile this design decision with the portability constraints Modern Data aspires to was to use the largest available floating-point type on any given platform for all function parameters and return values, while converting these to and from 128-bit representations for interchange.  This was actually implemented at one point, but was removed for the above reasons.  A type which cannot be used is - axiomatically! - of no use to anyone.
</Text>
        </Document>
        <Document ID="4289">
            <Title>modern_node_representation_let_count_get </Title>
        </Document>
        <Document ID="3978">
            <Title>Synopsis</Title>
            <Text>make_sigma_type = 2400

Value type (abstract notation)
(a : universe 0)
-> (b : a -> universe 0)
-> universe 0

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2938">
            <Title>Synopsis</Title>
            <Text>compare_float32 = 168

Value type (abstract notation)
float32 -> float32 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2209">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1874">
            <Title>Parameters</Title>
        </Document>
        <Document ID="297">
            <Title>Canonical form</Title>
            <Text>Modern Data contexts are essentially hash tables containing modern nodes as their elements.  The hash key used for indexing them is based on the “canonical form” of the modern node.  This section discusses what that canonical form means and how it is computed.  Though client code need never be aware of what are essentially implementation details such as these, independent implementations of the library do need to know them.

It is important to note that each node, independently, has its own canonical form.  It is not meaningful to speak of the canonical form of a document as a whole.

The canonical form is computed in the following steps, performed sequentially:

1) Compute the flattened representation of the document as viewed from the node being considered, as described below.

2) Do a pre-order traversal of the reachable parts of the document starting from the node being considered, outputting modern-stream events constructing each traversed node in turn to an “imagined” accumulator of bytes.

3) Compute the hash of all the bytes that were output to the accumulator.

For ease of implementation and on the general principle of consistency, the format of the accumulator is the same as the format of a modern stream.  However, to compute the accumulator, it is not sufficient simply to output a document and record what has been output; the flattening stage must be done first, to break cycles.  Furthermore, because the exact sequence of bytes changes with the exact sequence of events generated, the events must come from a pre-order traversal as described above.  The flattening stage will have ensured that the pre-order traversal only needs to output value and type events, as well as a single family event at the top-level.  The pre-order traversal will not output any lambda or apply events, nor will it output family events other than the single top-level one.</Text>
        </Document>
        <Document ID="1145">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2185">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4635">
            <Title>2013-02-22 Peaker, newsham, and shachaf in #haskell-blah</Title>
            <Text>Peaker
is the image accessible publicly: https://lh5.googleusercontent.com/-wjC6f-pd1RY/USgQgVE9C8I/AAAAAAAAM1M/qbIZSojnMc8/s901/Screenshot+from+2013-02-23+02%3A16%3A25.png ?
7:44
monochrom
yes
7:44
newsham
peaker: seen the subtextual demo video?
7:44
Peaker
newsham, yeah, it was an inspiration years ago
we have fancy new records we want to use for named parameter passing
7:45
newsham
nifty
7:45
Peaker
as the screenshot shows, it's currently terrible :)
7:45
cads
wow that is frightening
7:45
newsham
its neat that it shows all types
7:45
monochrom
except I don't like "=" overloaded like this. you have three meanings of =
7:45
newsham
well, most types, it doesnt tell me that fac is int to int
7:45
Peaker
monochrom, same as Haskell record syntax?
7:45
newsham
or actually num a => a -> a
7:46
Peaker
newsham, well, the arg is shown as Int, and the result is shown as Int
newsham, so we thought repeating the whole Int -> Int is more noise than its worth
we don't have type-classes yet for "Num a => .."
(we implement our own type system)
7:47
newsham
wel what if for example you were using "return", it would be nifty to know that return is more polymorhic, but is used in a particular way
*shrug*
7:47
monochrom
well, I suppose everything is a record here
7:47
newsham
thinking out loud
7:47
Peaker
newsham, polymorphic values that are specialized in an application are shown as red
7:47
irene-knapp
Peaker: I like it!
I mean, the concept of it
I have some similar ideas
7:47
newsham
are you making something light-tableish?
7:48
irene-knapp
as you say, the visuals need work
I personally would display only the type of the focused expression
rather than the full tree
7:48
newsham
huh, neat, light table has online alpha onw  http://www.lighttable.com/
7:48
irene-knapp
oh cool
I didn't like the concept when it was on kickstarter
and I probably still won't
but hey :)
7:49
Peaker
newsham, if I hit enter on "*", this happens: http://i.imgur.com/PhJGObN.png
newsham, more ambitious than light-table :)
7:49
irene-knapp
mine is more ambitious than Bottle even :) hehe
7:49
newsham
when are you gonna put up an awesome video?
7:49
Peaker
irene-knapp, what is yours?
7:49
irene-knapp
I'm trying to replace text files and command lines and web browsers and TeX all in one go lol
7:49
bitonic left the room (quit: Ping timeout: 248 seconds).
7:50
Peaker
irene-knapp, well, replacing the text toolchain for programming is a huge thing already :)
7:50
centrinia left the room (quit: Read error: Connection reset by peer).
7:50
irene-knapp
Modern Data is the core of it (that, you will probably recall from my incessant talking about it, is the self-describing binary data format for dependently-typed object graphs…)
7:50
bitonic [~user@b0fb09c5.bb.sky.com] entered the room.
7:50
irene-knapp
then there's the interactive graphical editor for it, which will have a stylesheet language
7:50
Peaker
newsham, first we need it to be awesome rather than suck :)
newsham, it's already awesome in many ways :)
7:51
newsham
so show me how many ways its awesome i wanna watch
7:51
irene-knapp
so that you can express the syntax you prefer to see your programming language in as a stylesheet, see
7:51
Peaker
we just added records in the last day or two.. incomplete support, we want to use it to have named args for functions
newsham, part of the awesomeness is 60fps animation which will probably not go over video as well.. why not run it? :)
7:51
irene-knapp
mind, this will work for arbitrary data files, not just for code
7:51
conal [~conal@50-200-68-221-static.hfc.comcastbusiness.net] entered the room.
7:52
Peaker
irene-knapp, what do you have so far?
7:52
newsham
how do I run it?
7:52
irene-knapp
a hell of a lot of specification and about 75% of the C code for the data format itself
7:52
Peaker
newsham, git clone https://github.com/Peaker/lamdu
7:52
irene-knapp
I want to get things right from the beginning, and I know that I need to document them...
7:52
Peaker
newsham, and follow the TUTORIAL in there
7:52
irene-knapp
unfortunately the spec is currently only browsable as a 600k unstyled html file with prose sections and API sections intermingled :(
unless you have the Mac program Scrivener, haha
http://ireneknapp.com/himitsu/modern-data/#3a51625c — the interactive table of contents of it
7:53
Peaker
irene-knapp, you doing it waterfall style?
7:53
irene-knapp
mm, only this first part
and I'm parallelizing a bit, I made a start on the GUI stuff already too
7:54
Peaker
irene-knapp, designing a large piece of novel software research without implementing/toying is probably a bad idea
7:54
irene-knapp
but that part is nowhere near as developed as Bottle
oh but
see
I need to bootstrap it before it's enough there to toy with
and I have toyed with it heavily in concept
and in test programs
I'm pretty confident of the basic design, really, at this point
7:55
bitonic left the room (quit: Ping timeout: 255 seconds).
7:56
Peaker
well, good luck..  implementing something shows you how much more work there is in it than you've thought :)
7:56
bitonic [~user@b0fb09c5.bb.sky.com] entered the room.
7:56
irene-knapp
and I mean, I have had two implentations already though
I threw them both out because they were wrong :)
one in Haskell and one in C
7:56
Peaker
I had gotten to Haskell through trying to implement this project in Python
7:57
irene-knapp
I see!
7:57
EvanR left the room (quit: Read error: Connection reset by peer).
7:57
Peaker
inventing a purely functional DSL in Python to hook up the GUI -- doing a poor job at it, and deciding to look at existing pure FP efforts to learn from them
7:57
irene-knapp
yeah this unfortunately if it's to be of broad appeal to people can't have its foundational bit done in a language that requires a garbage collector :(
7:57
newsham
peaker: btw, spell check your README
minor mistakes
7:57
irene-knapp
at least unless that language has a garbage collector that can cope with multiple instantiations of itself
in other words, it has to be able to run as a library
7:58
newsham
"Integrated unit-testing / code with examples / live programming - helps the programmers avoid silly bugs as they program, and helps programmers understand code better."
7:59
irene-knapp
anyway, it's not waterfall really
it's "build one to throw away"
7:59
newsham
needs integrated quickcheck and integrated theorem proving :)
7:59
irene-knapp
or two in this case :)
iteration three is pretty much ready except for a lot of tedious work
because that tedious part is SO tedious (the table of contents will tell you how many primitive operations I have to implement!)
7:59
Peaker
newsham, https://github.com/Peaker/lamdu/commit/089dbeb8255e796d3be00cb59ca755baff64a01a
8:00
irene-knapp
I think it definitely saved a lot of time to do the design work of it up front
8:00
newsham
peaker: whats the rev control story?  
you say it helps prevent conflicts..
8:00
M30W left the room (quit: Ping timeout: 255 seconds).
8:00
Peaker
newsham, yeah, instead of versioning text line changes, we version higher-level AST changes.. Names are attributes of definitions, and referrals are by GUID, not name
8:00
newsham
is verison control built in or can you still use your favorite external rev control?
8:01
Peaker
built-in
newsham, imagine a rename in version control
8:01
newsham
ahh
8:01
Peaker
remove lots of lines, insert others
with our rev control it's a single localized change
also, we don't have files with definitions in a particular order, so no conflicts upon moving stuff around between files
8:01
newsham
hmm..  i understand how that will make it better, but i'm not convinced that one tool can do all of : editor, compiler, syntax checker, rev control, build environment   better
8:01
Peaker
no whitespace to conflict on
8:01
newsham
sometimes having a general purpose tool that works across many data types is good
8:02
Peaker
well, ideally we could have a new ecosystem of tools that live in that space, but the integrated UI is part of the story
8:02
M30W [~M30W@unaffiliated/archeydevil] entered the room.
8:02
irene-knapp
newsham - see, my thing is NOT integrated UI
newsham - it's discrete tools that connect
that's why the heart of it is really the data format
the vocabulary that lets separate tools interoperate
8:02
newsham
i dont like IDE's either, but I think live coding environment might have a compelling reason
i'd like to see it explored and proven
8:03
Peaker
newsham, I hate Visual Studio, Eclipse, etc.. I hate emacs less, but hate it too :)
8:03
irene-knapp
I think live coding environment is not incompatible with separated tools, when a self-describing binary format for dependently-typed object graphs is the basis of it :D
8:03
Peaker
IDE's are generally slow, have pretty weak UIs, and don't justify their massive costs with the benefits they typically bring
8:04
irene-knapp
Modern Data absolutely wants to take over the version-control story someday too
it's just that it will do that by being a library that makes it almost trivial to build a version-control program
8:04
Peaker
lamdu is fast (instant start, everything should be fast because the data structures behind the scenes are designed to be manipulated quickly)
8:04
irene-knapp
and a separate program that can edit code
and so on
8:04
Peaker
and so the cost is minimal, and the benefits are far larger
8:04
newsham
irene: yah, i'd like to see them work as separate tools where they can.
but i'm not entirely convinced
8:04
irene-knapp
that's fair enough
proof ∈ pudding
8:05
`Jake`
hmm, I just tried rm -rf / in a virtual machine and was dissappointed to see that it doesn't work.
8:05
irene-knapp
define work
8:05
Peaker
we don't have a silly "save" button, for example, and we want our "undo-buffer" to *be* the revision control, and that's another good reason for the integration
8:05
newsham
but for example i dont see why a visual coding environment cant spit out well formed syntactic text haskell
and then use git/darcs/svn/hg on it
8:05
irene-knapp
the short answer newsham is that text is lossy
8:05
Peaker
newsham, because then you have to import it back from text
newsham, yeah, it's lossy, and you get all the bad conflicts/etc from the textual revision control
8:05
`Jake`
rm: cannot remove &lt;whatever file it was trying to remove>: Operation not permitted
8:06
newsham
you can still get some of the rev control benefits
8:06
Peaker
how?
8:06
dschoepe left the room (quit: Ping timeout: 276 seconds).
8:06
newsham
for examle committing change units
8:06
irene-knapp
probably because it got to /etc and removed the stuff that made PAM work
8:06
newsham
or by formatting the text in ways that line-based diff works well
*shrug*
8:06
pxdr left the room (quit: Ping timeout: 255 seconds).
8:07
irene-knapp
the other thing is that I conceive of making programs that are more than programs
8:07
EvanR [~erinehart@208.117.200.94] entered the room.
8:07
pxdr [~pxdr@dslb-178-000-030-095.pools.arcor-ip.net] entered the room.
8:07
Peaker
newsham, we might temporarily serialize to text to throw into GHC
8:07
irene-knapp
Peaker: have you realized that "Haskell code" can be a typeclass?
8:07
Peaker
(or into whatever data GHC expects)
8:07
Peaker
irene-knapp, not sure what you mean
8:07
irene-knapp
the single exported method being "extract what the compiler needs as its input from this"
8:07
EvanR is now known as Guest36495
8:07
`Jake`
irene-knapp: Oh. You're porbably right. If I try it a second time it tells me rm: command not found. I just thought it did nothing.
8:07
irene-knapp
then the user can extend the data with their own stuff - it can be any format the user desires under the hood
8:07
newsham
i'm not sure i trust fancy-visual-env designer to necessarily implement mechanism for the particular rev control feature that some user really needs
8:08
irene-knapp
newsham - yes.  I agree precisely.  that is the argument against IDEs in a nutshell.
8:08
newsham
where user prob already has said great feature in a well thought out stand alone general purpose rev control tool
also I dont think every app should implement their own: search, replace, merge, commit, etc.
users can already choose from sed, grep, awk, perl, git, svn, cvs, etc..
8:09
irene-knapp
I think
8:10
shachaf
irene-knapp: I don't follow. Where did the type class get into it?
8:10
newsham
(composable tools ftw)
8:10
Peaker
newsham, every editor has its own revision control built in already
newsham, the "undo buffer"
8:10
irene-knapp
shachaf: the typeclass is what the data stored in the file has to implement
8:10
newsham
peaker: branch? merge?
8:10
Peaker
unfortunately, you also need to explicitly "save" (or lose work by default), and then commit to a separate version control, which then has to guess heuristically what changed
8:11
irene-knapp
shachaf: this trick - turning any data format into a typeclass - occurred to me after the second implementation and integrating it basically was the sign that I needed to start over again lol
8:11
Peaker
newsham, well, those are missing features :) It's a weak mostly-linear vc
8:11
newsham
peaker: remote access protocol?  authentication?  compression?
8:11
gentleben left the room (quit: Quit: gentleben).
8:11
newsham
i can git with 1000 collaborators
8:11
Peaker
newsham, it would be nice to have all the vc power we're used to in our ordinary undo endeavors
8:11
newsham
anyway, i think you get the point
8:11
Peaker
and much more importantly: It would be nice for the vc not to guess what changed
but to know what actually changed
8:11
newsham
i'm very much interested in what you're trying to do
8:12
shachaf
irene-knapp: I don't follow the trick. It sounds like gratuitous type class use, but then I say that about a lot of things. :-)
8:12
newsham
but i am not sure i agree with it all :)
8:12
Peaker
this is also a big enhancement in conflict removal
8:12
irene-knapp
shachaf: oh, so it's like this
8:12
newsham
there are some things you will just never do as well as git
8:12
Peaker
newsham, I agree that it means a whole lot more has to be gotten right
8:12
irene-knapp
shachaf: suppose I want to define a new file format that offers some benefits as compared to html
8:12
Peaker
newsham, but I don't think a hybrid text/non-text world works well enough to justify the shift
8:12
irene-knapp
I'm taking html rather than Haskell as the example because that may make things clearer?
8:12
newsham
so perhaps there's room for some new style third party general purpose rev control tool
8:13
irene-knapp
then what I can do is, I can define my html-prime, right
8:13
newsham
that can work with your system but not be built directly in
8:13
Peaker
newsham, sure, there could still be third party implementors of that, but it'd still be integrated
8:13
irene-knapp
without the typeclass trick,
I have to make a preprocessor that turns html-prime into html before it can be viewed
8:13
newsham
and sometimes its worth losing a little on the ideal feature set to get great generality and reusability
8:14
irene-knapp
with the typeclass trick, the preprocessor is embedded in the data itself
8:14
newsham
worse is better
8:14
irene-knapp
(because dependent types imply arbitrary computation, heh, though that wasn't obvious to me until the first iteration of implementing this, haha0
)
8:14
shachaf
Why not just use a regular function on the data?
8:14
Peaker
well, worse is better worked for a while for Nokia, but then the iPhone was better
8:14
irene-knapp
that's equivalent, really
the difference is just
:: (HTMLifiable a) => a
vs
8:15
Peaker
newsham, we see current programming envs as the Nokia of the software world :)
8:15
irene-knapp
:: (a -> HTML, a)
8:15
shachaf
?
8:15
Peaker
poor quality, lots of momentum, people don't expect better
8:15
shachaf
Now that looks like you're trying for an existential.
8:15
irene-knapp
I am, yes, sorry
8:15
Peaker
but when better comes, people will quickly throw away their nokias
8:15
irene-knapp
dependent types mess with my head :)
8:16
newsham
peaker: ok, lets talk about a realistic problem here.  lets say your tool is a great success, now I'm using it every day, and I have a big project to work on with 50 other people across the world working on different parts in different timezones and sometiems different months of the year.  At the start of the project I have to evaluate how well your system will cope with that, and because of RCS I might have to say 'screw it, lets use text
8:16
irene-knapp
existentials are irrelevant with dependent types; what I'm writing out above is essentially what the type signature would look like with Haskell notation but dependent semantics
8:16
jfischoff left the room (quit: Quit: jfischoff).
8:16
irene-knapp
since any existential can be rewritten as
8:16
newsham
and if you want to compete with that world now yoru task is to stop focussing on all the cool langauge features of your system and start wasting your time making a world-class rev control feature set
8:16
shachaf
irene-knapp: No, you would still have to quantify a differently.
8:16
irene-knapp
((t :: Type), a :: t)
8:16
shachaf
"Haskell notation" has implicit forall; you have an implicit exists.
8:17
Peaker
newsham, well, it will be opensource, so third party contributions can cover that
8:17
centrinia [~exc@adsl-184-36-95-136.asm.bellsouth.net] entered the room.
8:17
newsham
or at least provide some sort of backdoor import/export functionality to let people play their darcs game
8:17
shachaf
Those mean completely different things -- you can't say they're irrelevant, in any notation.
8:17
irene-knapp
okay.  but is this a nitpick and you see what I was getting at, or is this genuine confusion?
hmm
8:17
newsham
peaker: but if i'm a dev lead, my choice isnt "use your system and write my own rev control OR use .hs and darcs" its just "ok, I cant use your system"
8:17
Peaker
newsham, import/export will be as complete as possible.. but I don't think it'd be workable as part of a workflow
8:17
irene-knapp
let me reread what I wrote with your last in mind
8:17
shachaf
irene-knapp: Anyway, if you have, in Haskell, class HTMLy a where htmlify :: a -> HTML; data HTMLThing = forall a. HTMLy a => HTMLThing a
8:17
newsham
until some 3rd party does what i need
8:17
shachaf
irene-knapp: Then you've gone wrong.
8:17
Peaker
newsham, unless it becomes entrenched and the advantages are too compelling
8:18
jfischoff [~jfischoff@c-67-169-45-161.hsd1.ca.comcast.net] entered the room.
8:18
irene-knapp
shachaf: how so?
8:18
shachaf
"HTMLThing" is nothing but an awkward way of writing "HTML".
8:18
Peaker
newsham, APIs that allow other projects to build rev control and such are certainly possible
8:18
irene-knapp
the difference is in how it's implemented.  let me share one other thing that's kinda relevant
8:18
newsham
anyway, sorry if this has had a bit of a downer tone.  your project sounds very cool and you should follow through with it and make what you want
and i guess if your system is compelling enough people will fix the rest
and if not, at least we'll see how far it goes and learn from it
8:19
irene-knapp
which is that by using a dictionary of functions to store the (a -> HTML) thing, instead of putting it out on its own, you can store arbitrarily many (a -> Foo) methods
8:19
`Jake`
Peaker: Maybe you should add in your lambdu tutorial that you need to have the ftgl c library installed?
*lamdu
8:19
Peaker
`Jake`, thanks
8:19
irene-knapp
so that your HTML can also have formatting annotations, comments, etc etc, used to edit it or to compile it to something else or whatever
while still being the same data
8:19
shachaf
irene-knapp: Yes. And you can also have a record with arbitrarily many values.
8:19
irene-knapp
the trick is fundamentally just packaging the function that compiles
with the data that it operates on
8:20
shachaf
data HTML = HTML { contents :: Blah, formatting :: Blah, ... }
8:20
irene-knapp
you're absolutely right that it doesn't need to be a typeclass proper
8:20
`Jake`
Peaker: I think, haven't been able to finish the installation yet
8:20
irene-knapp
and I don't really care if it is
8:20
jfischoff left the room (quit: Client Quit).
8:20
irene-knapp
but it does need to be at least a dictionary indexed by the return type
8:20
shachaf
This way has many advantages and a few disadvantages.
8:20
irene-knapp
because then it's arbitrarily extensible
8:20
shachaf
irene-knapp: No, this doesn't need to have anything to do with types.
8:20
jfischoff [~jfischoff@c-67-169-45-161.hsd1.ca.comcast.net] entered the room.
8:21
irene-knapp
no, because the point is, I don't want to force the user into ANY particular format
8:21
shachaf
irene-knapp: If you use a type class, it means that for every new behavior, you need to make up a new type.
8:21
irene-knapp
I have forward- and backward- compatibility in mind
how so?
hm
I guess, sure, but this isn't in Haskell at all
8:21
shachaf
If you just use a dictionary, you can make a hundred different values :: HTML with the same type.
8:21
irene-knapp
it will have a Haskell binding
8:21
`Jake`
Peaker: Yeah, installation successful with the library installed
8:21
shachaf
Now behaviors are values, i.e. first-class things that you can manipulate etc., rather than types.
8:21
Peaker
`Jake`, updated the TUTORIAL
8:21
irene-knapp
I have been thinking of them as typeclasses because that's how I conceived of the idea
8:21
jfischoff left the room (quit: Client Quit).
8:21
irene-knapp
oh!
8:21
`Jake`
Peaker: ok
8:22
irene-knapp
I see what you mean
you mean that it might be useful to have, say, an "end-user documentation" and an "internals documentation" in the same document
both of which are HTML in the end
8:22
shachaf
?
8:22
irene-knapp
so that the type is not the thing you want the dictionary to be keyed by?
8:22
`Jake`
Peaker: I didn't even install libftgl2, btw
8:22
Peaker
`Jake`, it probably got installed as an indirect dependency?
8:23
shachaf
I don't know what this means.
8:23
irene-knapp
with "end-user" and "internals" being two different examples of what I understand you to mean by "behavior"
8:23
shachaf
It seems a bit off-topic for this channel.
8:23
Peaker
newsham, thanks, if you try it out, tell me what you think
8:23
irene-knapp
shachaf: was that addressed to me?
8:23
`Jake`
Peaker: I will look through the installation log, wait a sec
8:23
shachaf
Yes. We've been talking about Haskell in here for a bit now. :-)
8:23
irene-knapp
lol
8:23
shachaf
irene-knapp: See also: http://www.haskell.org/haskellwiki/FAQ#I.27m_making_an_RPG._Should_I_define_a_type_for_each_kind_of_monster.2C_and_a_type_class_for_them.3F
8:23
irene-knapp
want to take this to some other venue?
8:24
`Jake`
Peaker: Yep, you're right
8:24
irene-knapp
okay
then I think that I understood your point correctly but we are coming from such different perspectives that I was unable to communicate that :)
8:24
shachaf
#haskell seems appropriate but you're not in there.
8:24
irene-knapp
I'm there now</Text>
        </Document>
        <Document ID="2531">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2186">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arcsine_float32 = 864</Text>
        </Document>
        <Document ID="1875">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3572">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_nat64 = 1326

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2532">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_nat8 = 1540</Text>
        </Document>
        <Document ID="780">
            <Title>cast_int32_int8</Title>
        </Document>
        <Document ID="2187">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1876">
            <Title>Parameters</Title>
        </Document>
        <Document ID="781">
            <Title>cast_int32_int16</Title>
        </Document>
        <Document ID="2533">
            <Title>Semantics</Title>
        </Document>
        <Document ID="782">
            <Title>cast_int32_int64</Title>
        </Document>
        <Document ID="2188">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_arcsine_float64 = 865</Text>
        </Document>
        <Document ID="1877">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1148">
            <Title>modern_node_type</Title>
        </Document>
        <Document ID="783">
            <Title>cast_int32_nat8</Title>
        </Document>
        <Document ID="2534">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_nat16 = 1541</Text>
        </Document>
        <Document ID="1470">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_named_value_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 struct modern_hash *name);</Text>
        </Document>
        <Document ID="784">
            <Title>cast_int32_nat16</Title>
        </Document>
        <Document ID="2189">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1878">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1149">
            <Title>Synopsis</Title>
            <Text>enum modern_node_type {
    …
};</Text>
        </Document>
        <Document ID="4231">
            <Title>Synopsis</Title>
            <Text>cast_float64_blob = 10321

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="785">
            <Title>cast_int32_nat32</Title>
        </Document>
        <Document ID="3575">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_nat64 = 1327

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2535">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1471">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_lambda_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="786">
            <Title>cast_int32_nat64</Title>
        </Document>
        <Document ID="1879">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3921">
            <Title>Synopsis</Title>
            <Text>get_sigma_field_value = 1984

Value type (abstract notation)
(a : universe 0)
-> (b : a -> universe 0)
-> sigma a b -> a

Value type (detailed notation)</Text>
        </Document>
        <Document ID="787">
            <Title>cast_int64_int8</Title>
        </Document>
        <Document ID="2536">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_nat32 = 1542</Text>
        </Document>
        <Document ID="1472">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_apply_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="788">
            <Title>cast_int64_int16</Title>
        </Document>
        <Document ID="4233">
            <Title>Predefined values</Title>
        </Document>
        <Document ID="540">
            <Title>tangent_float64</Title>
        </Document>
        <Document ID="789">
            <Title>cast_int64_int32</Title>
        </Document>
        <Document ID="2537">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1473">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_family_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint64_t n_items);</Text>
        </Document>
        <Document ID="11">
            <Title>Allocators</Title>
        </Document>
        <Document ID="541">
            <Title>arcsine_float32</Title>
        </Document>
        <Document ID="12">
            <Title>Callbacks</Title>
        </Document>
        <Document ID="2130">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3170">
            <Title>Synopsis</Title>
            <Text>absolute_value_float64 = 485

Value type (abstract notation)
float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="542">
            <Title>arcsine_float64</Title>
        </Document>
        <Document ID="13">
            <Title>Callbacks</Title>
        </Document>
        <Document ID="3578">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_float32 = 1328

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2538">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_nat64 = 1543</Text>
        </Document>
        <Document ID="1474">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_let_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint64_t n_items);</Text>
        </Document>
        <Document ID="14">
            <Title>modern_stream_initialize</Title>
        </Document>
        <Document ID="543">
            <Title>arccosine_float32</Title>
        </Document>
        <Document ID="15">
            <Title>modern_stream_start</Title>
        </Document>
        <Document ID="4235">
            <Title>modern_library_node_representation_get</Title>
        </Document>
        <Document ID="2131">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_float64 = 485</Text>
        </Document>
        <Document ID="3924">
            <Title>Synopsis</Title>
            <Text>get_sigma_successor = 2016

Value type (abstract notation)
(a : universe 0)
-> (b : a -> universe 0)
-> sigma a b -> b

Value type (detailed notation)</Text>
        </Document>
        <Document ID="16">
            <Title>modern_stream_type_magic_number</Title>
        </Document>
        <Document ID="1820">
            <Title>Parameters</Title>
        </Document>
        <Document ID="544">
            <Title>arccosine_float64</Title>
        </Document>
        <Document ID="17">
            <Title>modern_stream_name_definition</Title>
        </Document>
        <Document ID="2539">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1475">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_backreference_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint64_t index);</Text>
        </Document>
        <Document ID="545">
            <Title>arctangent_float32</Title>
        </Document>
        <Document ID="4236">
            <Title>Synopsis</Title>
            <Text>struct modern_node *
modern_library_node_representation_get
(modern_library *library);</Text>
        </Document>
        <Document ID="19">
            <Title>modern_stream_type_definition_int8</Title>
        </Document>
        <Document ID="2132">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1821">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2861">
            <Title>Synopsis</Title>
            <Text>or_bool = 64

Value type (abstract notation)
bool -> bool -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="546">
            <Title>arctangent_float64</Title>
        </Document>
        <Document ID="1476">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_builtin_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="547">
            <Title>arctangent_fraction_float32</Title>
        </Document>
        <Document ID="3173">
            <Title>Synopsis</Title>
            <Text>sign_int8 = 512

Value type (abstract notation)
int8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2133">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_int8 = 512</Text>
        </Document>
        <Document ID="4237">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1822">
            <Title>Parameters</Title>
        </Document>
        <Document ID="548">
            <Title>arctangent_fraction_float64</Title>
        </Document>
        <Document ID="1477">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_item_from_context_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 struct modern_hash *hash);</Text>
        </Document>
        <Document ID="300">
            <Title>Flattening</Title>
        </Document>
        <Document ID="549">
            <Title>hyperbolic_sine_float32</Title>
        </Document>
        <Document ID="4238">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2134">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1823">
            <Title>Semantics</Title>
        </Document>
        <Document ID="301">
            <Title>Scoping</Title>
            <Text>Importantly, a modern type must be in scope in the given context before a value of that type can be serialized or deserialized. The high-level “node-based” portion of the library will check whether a value’s type is in context when serializing, and emit additional instructions which bring it into context if it is not, mutating the context object which it is passed to make note of the fact.  Similarly, when deserializing, if a value’s type is not in context, an error is produced and processing halts.  (To avoid security holes caused by different implementations responding to errors in different ways, processing is specified to always halt immediately upon the first error encountered.)

The low-level “stream-based” portion of the library does no such checking, as it tracks very little internal state, leaving that task to the client code.  The client code is thus responsible for ensuring that types are in context before they are used, both when serializing and when deserializing.</Text>
        </Document>
        <Document ID="1478">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_end)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4560">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_representation_canonical_hash_set)
(modern_library *library,
 void *value,
 struct modern_hash hash);</Text>
        </Document>
        <Document ID="302">
            <Title>Evaluation</Title>
        </Document>
        <Document ID="2135">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_int16 = 513</Text>
        </Document>
        <Document ID="3928">
            <Title>Synopsis</Title>
            <Text>get_named_value = 2048

Value type (abstract notation)
(a : universe 0)
-> (b : name)
-> named b a -> a

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1824">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2864">
            <Title>Synopsis</Title>
            <Text>not_bool = 96

Value type (abstract notation)
bool -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="303">
            <Title>modern_evaluate</Title>
        </Document>
        <Document ID="4561">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3521">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_nat64 = 1295

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="304">
            <Title>Types</Title>
        </Document>
        <Document ID="3176">
            <Title>Synopsis</Title>
            <Text>sign_int16 = 513

Value type (abstract notation)
int16 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2136">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1825">
            <Title>Semantics</Title>
        </Document>
        <Document ID="305">
            <Title>modern_error_handler_universe_level_overflow</Title>
        </Document>
        <Document ID="4562">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_maybe_just_content_set)
(modern_library *library,
 void *value,
 void *content_value);</Text>
        </Document>
        <Document ID="306">
            <Title>modern_error_handler_buffer_index</Title>
        </Document>
        <Document ID="2137">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_int32 = 514</Text>
        </Document>
        <Document ID="1073">
            <Title>Synopsis</Title>
            <Text>void
modern_finalize
(modern_library *library,
 void *finalizable);</Text>
        </Document>
        <Document ID="1826">
            <Title>Parameters</Title>
        </Document>
        <Document ID="307">
            <Title>modern_error_handler_not_applicable</Title>
        </Document>
        <Document ID="4563">
            <Title>Semantics</Title>
        </Document>
        <Document ID="308">
            <Title>modern_error_handler_non_numeric_float</Title>
        </Document>
        <Document ID="2138">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1074">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1827">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4564">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_int8_set)
(modern_library *library,
 void *node,
 int8_t value);</Text>
        </Document>
        <Document ID="3524">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_float32 = 1296

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1420">
            <Title>Synopsis</Title>
            <Text>struct modern_processor *
modern_processor_input_make
(modern_library *library);</Text>
        </Document>
        <Document ID="2460">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3179">
            <Title>Synopsis</Title>
            <Text>sign_int32 = 514

Value type (abstract notation)
int32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2139">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sign_int64 = 515</Text>
        </Document>
        <Document ID="1075">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1828">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2868">
            <Title>Synopsis</Title>
            <Text>equal_to_bool = 128

Value type (abstract notation)
bool -> bool -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4565">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2461">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_int16 = 1409</Text>
        </Document>
        <Document ID="1421">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_stream_initialize)
();</Text>
        </Document>
        <Document ID="1076">
            <Title>modern_allocator</Title>
        </Document>
        <Document ID="1829">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4566">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_int16_set)
(modern_library *library,
 void *node,
 int16_t value);</Text>
        </Document>
        <Document ID="2462">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1422">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_finalize)
(void *stream_state);</Text>
        </Document>
        <Document ID="1077">
            <Title>Synopsis</Title>
            <Text>struct modern_allocator {
    …
};</Text>
        </Document>
        <Document ID="4567">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3527">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_float64 = 1297

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1423">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_start)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2463">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_int32 = 1410</Text>
        </Document>
        <Document ID="1078">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4568">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_int32_set)
(modern_library *library,
 void *node,
 int32_t value);</Text>
        </Document>
        <Document ID="2464">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1424">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_magic_number)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="3850">
            <Title>Synopsis</Title>
            <Text>bit_xor_nat32 = 1638

Value type (abstract notation)
nat32 -> nat32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2810">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_nat32 = 10308</Text>
        </Document>
        <Document ID="4569">
            <Title>Semantics</Title>
        </Document>
        <Document ID="260">
            <Title>Overview</Title>
            <Synopsis>TODO structural equality not type equality</Synopsis>
            <Text>In Modern Data, the fundamental in-memory datatype is the “modern node”, which is a representation of, loosely, either a value or a type.  If we wish to specify further, we may occasionally refer to a “modern type” or “modern value”, but these concepts do not map to actual host-language datatypes; only “modern node” does.

The operations on a modern node are serialization, deserialization, type-checking, evaluation, and traversal.  The concept of a “modern context” holding types and values is used by serialization, deserialization, type-checking, and evaluation.  The concept of a “modern cursor” describing a node and a path to reach it from the root is used by traversal.

Serialization is performed on a modern node in some modern context, and produces a stream of bytes.

Deserialization is performed on a stream of bytes in some modern context, and produces a modern node.

Evaluation is performed on a modern node, and produces another modern node.  Traversal is begun by creating a “modern cursor” from some modern node 

Although simple applications which merely wish to exchange and act on data need never use anything but the default context, it is nonetheless a concept worth understanding.  The context is internally a hash table of modern types (and occasionally modern values, used as parts of dependent types).  The hash key is determined in a way that captures the notion of type equality, by placing the modern node in a canonical form and computing a hash function of that.  Any modern node which is in the hash table is “in scope” in that context.

Modern Data includes a comprehensive set of primitive operations, which exist as “built-in values”, for the purpose of expressing arbitrary functions to be evaluated.  The motivation for this is to allow sigma types to be arbitrarily complicated; it is not meant as an interchange format for functions, or for that matter as a high-level programming language; the set of operations available is more akin to a purely-functional assembly language.  For interchange of functional values and for designing high-level programming languages, the recommendation is to create a Modern Data type representing an abstract syntax tree with whatever set of primitives are appropriate to the nature of the interchange.

In addition to and built on top of the built-in values, Modern Data also includes certain useful combinators in the initial context.  These include type-level functions for the definition of type-classes and type-class instances, and for aggregate structures: unions, arrays, and dependent records, all in terms of sigma types.  The use of these combinators is not mandatory, but is provided as a convenience, and is also advisable because it allows editor software to have more information about the nature of a type.
</Text>
        </Document>
        <Document ID="1425">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_name_definition)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint8_t *data,
 size_t length);</Text>
        </Document>
        <Document ID="2465">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_int64 = 1411</Text>
        </Document>
        <Document ID="990">
            <Title>modern_vfile_stdio_finalize</Title>
        </Document>
        <Document ID="4162">
            <Title>Synopsis</Title>
            <Text>cast_name_blob = 10298

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3122">
            <Title>Synopsis</Title>
            <Text>modulus_towards_negative_infinity_int64 = 419

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="261">
            <Title>modern_node_sigma_type_make</Title>
        </Document>
        <Document ID="2811">
            <Title>Semantics</Title>
        </Document>
        <Document ID="991">
            <Title>modern_vfile_fd_make</Title>
        </Document>
        <Document ID="262">
            <Title>modern_node_sigma_make</Title>
        </Document>
        <Document ID="1426">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_value_definition_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2466">
            <Title>Semantics</Title>
        </Document>
        <Document ID="992">
            <Title>modern_vfile_fd_initialize</Title>
        </Document>
        <Document ID="263">
            <Title>modern_node_universe_type_level_get</Title>
        </Document>
        <Document ID="2812">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_nat64 = 10309</Text>
        </Document>
        <Document ID="2467">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_nat8 = 1412</Text>
        </Document>
        <Document ID="993">
            <Title>modern_vfile_fd_finalize</Title>
        </Document>
        <Document ID="264">
            <Title>Library instances</Title>
        </Document>
        <Document ID="1427">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_bool)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="994">
            <Title>Memory managed by the client</Title>
        </Document>
        <Document ID="265">
            <Title>modern_library_initialize</Title>
        </Document>
        <Document ID="1020">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2060">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_negative_infinity_int32 = 322</Text>
        </Document>
        <Document ID="2813">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3853">
            <Title>Synopsis</Title>
            <Text>bit_xor_nat64 = 1639

Value type (abstract notation)
nat64 -> nat64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2468">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1428">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_ordering)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="995">
            <Title>Memory managed by the system</Title>
        </Document>
        <Document ID="4510">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_maybe_type_make)
(modern_library *library,
 void *content_type);</Text>
        </Document>
        <Document ID="266">
            <Title>modern_library_error_handler_get</Title>
        </Document>
        <Document ID="4165">
            <Title>Synopsis</Title>
            <Text>cast_blob_name = 10299

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2790">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_name_blob = 10298</Text>
        </Document>
        <Document ID="996">
            <Title>Stdio files</Title>
        </Document>
        <Document ID="1750">
            <Title>Parameters</Title>
        </Document>
        <Document ID="267">
            <Title>modern_library_allocator_get</Title>
        </Document>
        <Document ID="1021">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2061">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2814">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_float32 = 10310</Text>
        </Document>
        <Document ID="2469">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_nat16 = 1413</Text>
        </Document>
        <Document ID="1429">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_maybe_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="997">
            <Title>POSIX-style file descriptors</Title>
        </Document>
        <Document ID="4511">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2791">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1751">
            <Title>Semantics</Title>
        </Document>
        <Document ID="998">
            <Title>modern_stream_output_make</Title>
        </Document>
        <Document ID="269">
            <Title>modern_library_finalize</Title>
        </Document>
        <Document ID="1022">
            <Title>Synopsis</Title>
            <Text>void *
modern_library_client_state_get
(modern_library *library);</Text>
        </Document>
        <Document ID="2062">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_negative_infinity_int64 = 323</Text>
        </Document>
        <Document ID="2815">
            <Title>Semantics</Title>
        </Document>
        <Document ID="750">
            <Title>get_sigma_field_value</Title>
        </Document>
        <Document ID="4512">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="999">
            <Title>modern_stream</Title>
        </Document>
        <Document ID="2792">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_name = 10299</Text>
        </Document>
        <Document ID="751">
            <Title>get_sigma_successor</Title>
        </Document>
        <Document ID="1752">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1023">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2063">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2816">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_float64 = 10311</Text>
        </Document>
        <Document ID="3856">
            <Title>Synopsis</Title>
            <Text>bit_not_int8 = 1664

Value type (abstract notation)
int8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="752">
            <Title>get_named_value</Title>
        </Document>
        <Document ID="4513">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4168">
            <Title>Synopsis</Title>
            <Text>cast_float32_float64 = 10300

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2793">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1753">
            <Title>Semantics</Title>
        </Document>
        <Document ID="753">
            <Title>get_function_type_left</Title>
        </Document>
        <Document ID="1024">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2817">
            <Title>Semantics</Title>
        </Document>
        <Document ID="70">
            <Title>modern_node_type_int32_value</Title>
        </Document>
        <Document ID="4490">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat64_make)
(modern_library *library,
 uint64_t value);</Text>
        </Document>
        <Document ID="4514">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int16_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="754">
            <Title>get_function_type_right</Title>
        </Document>
        <Document ID="71">
            <Title>modern_node_type_int64_value</Title>
        </Document>
        <Document ID="2410">
            <Title>Semantics</Title>
        </Document>
        <Document ID="72">
            <Title>modern_node_type_nat8_value</Title>
        </Document>
        <Document ID="2794">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_float32_float64 = 10300</Text>
        </Document>
        <Document ID="1754">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1025">
            <Title>Synopsis</Title>
            <Text>void
modern_library_finalize
(modern_library *library);</Text>
        </Document>
        <Document ID="755">
            <Title>get_sigma_type_field_type</Title>
        </Document>
        <Document ID="73">
            <Title>modern_node_type_nat16_value</Title>
        </Document>
        <Document ID="2818">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_blob = 10312</Text>
        </Document>
        <Document ID="74">
            <Title>modern_node_type_nat32_value</Title>
        </Document>
        <Document ID="4491">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4515">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2411">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_int16 = 1346</Text>
        </Document>
        <Document ID="756">
            <Title>get_sigma_type_successor</Title>
        </Document>
        <Document ID="75">
            <Title>modern_node_type_nat64_value</Title>
        </Document>
        <Document ID="2795">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1755">
            <Title>Semantics</Title>
        </Document>
        <Document ID="76">
            <Title>modern_node_type_float32_value</Title>
        </Document>
        <Document ID="1026">
            <Title>Parameters</Title>
        </Document>
        <Document ID="757">
            <Title>get_named_type_content_type</Title>
        </Document>
        <Document ID="2819">
            <Title>Semantics</Title>
        </Document>
        <Document ID="77">
            <Title>modern_node_type_float64_value</Title>
        </Document>
        <Document ID="3859">
            <Title>Synopsis</Title>
            <Text>bit_not_int16 = 1665

Value type (abstract notation)
int16 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4492">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_float32_make)
(modern_library *library,
 float value);</Text>
        </Document>
        <Document ID="4516">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2412">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3452">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_nat16 = 1258

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="758">
            <Title>get_universe_type_level</Title>
        </Document>
        <Document ID="79">
            <Title>modern_node_type_utf8_value</Title>
        </Document>
        <Document ID="2796">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_float64_float32 = 10301</Text>
        </Document>
        <Document ID="1756">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1027">
            <Title>Semantics</Title>
        </Document>
        <Document ID="510">
            <Title>absolute_value_int16</Title>
        </Document>
        <Document ID="759">
            <Title>make_sigma</Title>
        </Document>
        <Document ID="4493">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4517">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2413">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_int16 = 1347</Text>
        </Document>
        <Document ID="511">
            <Title>absolute_value_int32</Title>
        </Document>
        <Document ID="2797">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1757">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1028">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_memory)
(void *client_state,
 size_t requested_size);</Text>
        </Document>
        <Document ID="512">
            <Title>absolute_value_int64</Title>
        </Document>
        <Document ID="4494">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_float64_make)
(modern_library *library,
 double value);</Text>
        </Document>
        <Document ID="2390">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1350">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_universe_type_make)
(modern_library *library,
 uint64_t level);</Text>
        </Document>
        <Document ID="4518">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="513">
            <Title>absolute_value_float32</Title>
        </Document>
        <Document ID="2414">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2798">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_int8 = 10302</Text>
        </Document>
        <Document ID="1758">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1029">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4111">
            <Title>Synopsis</Title>
            <Text>cast_nat16_nat64 = 10281

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="514">
            <Title>absolute_value_float64</Title>
        </Document>
        <Document ID="4495">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2391">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_nat16 = 1322</Text>
        </Document>
        <Document ID="1351">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_lambda_make)
(modern_library *library,
 modern *content);</Text>
        </Document>
        <Document ID="4519">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2415">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_int32 = 1348</Text>
        </Document>
        <Document ID="515">
            <Title>sign_int8</Title>
        </Document>
        <Document ID="3455">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_nat16 = 1259

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2799">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1759">
            <Title>Semantics</Title>
        </Document>
        <Document ID="516">
            <Title>sign_int16</Title>
        </Document>
        <Document ID="4496">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_utf8_make)
(modern_library *library,
 uint8_t *data);</Text>
        </Document>
        <Document ID="2392">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1352">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_apply_make)
(modern_library *library,
 modern *left,
 modern *right);</Text>
        </Document>
        <Document ID="2416">
            <Title>Semantics</Title>
        </Document>
        <Document ID="517">
            <Title>sign_int32</Title>
        </Document>
        <Document ID="3802">
            <Title>Synopsis</Title>
            <Text>bit_and_nat32 = 1574

Value type (abstract notation)
nat32 -> nat32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="518">
            <Title>sign_int64</Title>
        </Document>
        <Document ID="4497">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2393">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_nat16 = 1323</Text>
        </Document>
        <Document ID="1353">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_type_family_make)
(modern_library *library,
 uint64_t n_items,
 modern **types);</Text>
        </Document>
        <Document ID="2417">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_int32 = 1349</Text>
        </Document>
        <Document ID="519">
            <Title>sign_float32</Title>
        </Document>
        <Document ID="4090">
            <Title>Synopsis</Title>
            <Text>cast_nat8_nat64 = 10274

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4114">
            <Title>Synopsis</Title>
            <Text>cast_nat32_int8 = 10282

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2010">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_nat32 = 230</Text>
        </Document>
        <Document ID="3050">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_nat16 = 293

Value type (abstract notation)
nat16 -> nat16 -> maybe nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4498">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_blob_make)
(modern_library *library,
 uint8_t *data, size_t bytes);</Text>
        </Document>
        <Document ID="2394">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1354">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_let_make)
(modern_library *library,
 uint64_t n_items,
 modern **types,
 modern *content);</Text>
        </Document>
        <Document ID="2418">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3458">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_nat32 = 1260

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2740">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1700">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2011">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4499">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2395">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_nat32 = 1324</Text>
        </Document>
        <Document ID="1355">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_backreference_make)
(modern_library *library,
 uint64_t index);</Text>
        </Document>
        <Document ID="2419">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_int64 = 1350</Text>
        </Document>
        <Document ID="3781">
            <Title>Synopsis</Title>
            <Text>rotate_right_nat64 = 1543

Value type (abstract notation)
nat64 -> nat8 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3805">
            <Title>Synopsis</Title>
            <Text>bit_and_nat64 = 1575

Value type (abstract notation)
nat64 -> nat64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1701">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2741">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_nat64 = 10274</Text>
        </Document>
        <Document ID="2396">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1356">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_builtin_make)
(modern_library *library,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="4093">
            <Title>Synopsis</Title>
            <Text>cast_nat16_int8 = 10275

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4117">
            <Title>Synopsis</Title>
            <Text>cast_nat32_int16 = 10283

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2742">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1702">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2013">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3053">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_nat32 = 294

Value type (abstract notation)
nat32 -> nat32 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2397">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_nat32 = 1325</Text>
        </Document>
        <Document ID="1357">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_immutable_set)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2743">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_int8 = 10275</Text>
        </Document>
        <Document ID="1703">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2014">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_nat64 = 231</Text>
        </Document>
        <Document ID="2398">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1358">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_maybe_just_content_set)
(modern_library *library,
 modern *value,
 modern *content_value);</Text>
        </Document>
        <Document ID="4440">
            <Title>Synopsis</Title>
            <Text>uint64_t 
(*modern_node_representation_universe_type_level_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="470">
            <Title>divide_towards_zero_int16</Title>
        </Document>
        <Document ID="3784">
            <Title>Synopsis</Title>
            <Text>bit_and_int8 = 1568

Value type (abstract notation)
int8 -> int8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3808">
            <Title>Synopsis</Title>
            <Text>bit_or_int8 = 1600

Value type (abstract notation)
int8 -> int8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1704">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2744">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2015">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_float32 = 232</Text>
        </Document>
        <Document ID="471">
            <Title>divide_towards_zero_int32</Title>
        </Document>
        <Document ID="1680">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2399">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_nat64 = 1326</Text>
        </Document>
        <Document ID="1359">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_int8_set)
(modern_library *library,
 modern *node,
 int8_t value);</Text>
        </Document>
        <Document ID="4441">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3401">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_nat16 = 1227

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="472">
            <Title>divide_towards_zero_int64</Title>
        </Document>
        <Document ID="4096">
            <Title>Synopsis</Title>
            <Text>cast_nat16_int16 = 10276

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3056">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_nat64 = 295

Value type (abstract notation)
nat64 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2745">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_int16 = 10276</Text>
        </Document>
        <Document ID="1705">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2016">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1681">
            <Title>Parameters</Title>
        </Document>
        <Document ID="473">
            <Title>divide_towards_zero_nat8</Title>
        </Document>
        <Document ID="4442">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_lambda_content_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="474">
            <Title>divide_towards_zero_nat16</Title>
        </Document>
        <Document ID="1682">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1706">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2746">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2017">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_float64 = 233</Text>
        </Document>
        <Document ID="475">
            <Title>divide_towards_zero_nat32</Title>
        </Document>
        <Document ID="4443">
            <Title>Semantics</Title>
        </Document>
        <Document ID="476">
            <Title>divide_towards_zero_nat64</Title>
        </Document>
        <Document ID="3787">
            <Title>Synopsis</Title>
            <Text>bit_and_int16 = 1569

Value type (abstract notation)
int16 -> int16 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1683">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1707">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2747">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_int32 = 10277</Text>
        </Document>
        <Document ID="2018">
            <Title>Semantics</Title>
        </Document>
        <Document ID="477">
            <Title>divide_towards_negative_infinity_int8</Title>
        </Document>
        <Document ID="4444">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_apply_left_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="3404">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_nat32 = 1228

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1300">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_apply_left_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2340">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3380">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_int32 = 1220

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4099">
            <Title>Synopsis</Title>
            <Text>cast_nat16_int32 = 10277

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="478">
            <Title>divide_towards_negative_infinity_int16</Title>
        </Document>
        <Document ID="1684">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1708">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2748">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2019">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_int8 = 256</Text>
        </Document>
        <Document ID="3059">
            <Title>Synopsis</Title>
            <Text>divide_towards_negative_infinity_int8 = 320

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="479">
            <Title>divide_towards_negative_infinity_int32</Title>
        </Document>
        <Document ID="4445">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2341">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_int16 = 1283</Text>
        </Document>
        <Document ID="1301">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_apply_right_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="960">
            <Title>modern_node_type_ordering_value_equal</Title>
        </Document>
        <Document ID="1685">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1709">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2749">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat16_int64 = 10278</Text>
        </Document>
        <Document ID="961">
            <Title>modern_node_type_ordering_value_greater</Title>
        </Document>
        <Document ID="4446">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_apply_right_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2342">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1302">
            <Title>Synopsis</Title>
            <Text>uint64_t
(*modern_node_type_family_count_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="962">
            <Title>modern_node_type_ordering_type</Title>
        </Document>
        <Document ID="1686">
            <Title>Semantics</Title>
        </Document>
        <Document ID="234">
            <Title>modern_hash</Title>
        </Document>
        <Document ID="4447">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3407">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_nat32 = 1229

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1303">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_type_family_item_get)
(modern_library *library,
 modern *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="2343">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_int32 = 1284</Text>
        </Document>
        <Document ID="3383">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_int32 = 1221

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="963">
            <Title>modern_resolve_backreferences</Title>
        </Document>
        <Document ID="1687">
            <Title>Parameters</Title>
        </Document>
        <Document ID="235">
            <Title>modern_hash_compute</Title>
        </Document>
        <Document ID="964">
            <Title>Streaming model</Title>
        </Document>
        <Document ID="4448">
            <Title>Synopsis</Title>
            <Text>uint64_t 
(*modern_node_representation_type_family_count_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="236">
            <Title>modern_hash_child_compute</Title>
        </Document>
        <Document ID="1304">
            <Title>Synopsis</Title>
            <Text>uint64_t
(*modern_node_let_count_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2344">
            <Title>Semantics</Title>
        </Document>
        <Document ID="965">
            <Title>Deserialization</Title>
            <Text>To perform deserialization, client code first requests a processor from the system, then constructs a stream-callbacks structure.  It then asks the processor to run itself, using the stream callbacks.  To carry out the run, the processor will ask the client to initialize and eventually to finalize the stream, through the callbacks.  The processor will also invoke callbacks on the stream as it encounters events.  The below diagram shows the sequence of interactions and responsibilities.

￼

Note that the diagram also shows a vfile being obtained from the system.  This is not actually a requirement, as the vfile can equally well be one constructed by client code.  However, it is the normal case.</Text>
        </Document>
        <Document ID="1280">
            <Title>Synopsis</Title>
            <Text>uint64_t
(*modern_node_nat64_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1688">
            <Title>Semantics</Title>
        </Document>
        <Document ID="237">
            <Title>modern_hash_initial_namespace_compute</Title>
        </Document>
        <Document ID="3730">
            <Title>Synopsis</Title>
            <Text>shift_right_nat32 = 1478

Value type (abstract notation)
nat32 -> nat8 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4449">
            <Title>Semantics</Title>
        </Document>
        <Document ID="238">
            <Title>Predefined</Title>
        </Document>
        <Document ID="1305">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_let_item_get)
(modern_library *library,
 modern *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="2345">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_int32 = 1285</Text>
        </Document>
        <Document ID="967">
            <Title>Serialization</Title>
            <Text>To perform deserialization, client code first requests a stream from the system, then constructs a processor which will be passed to the stream with each event produced.  It then carries out the run, using the stream callbacks.  To do this, the client will ask the system to initialize and eventually to finalize the stream, through the callbacks.  The client will also invoke callbacks on the stream as it produces events.  The below diagram shows the sequence of interactions and responsibilities.

￼

Note that the diagram also shows a vfile being obtained from the system.  This is not actually a requirement, as the vfile can equally well be one constructed by client code.  However, it is the normal case.</Text>
        </Document>
        <Document ID="1281">
            <Title>Synopsis</Title>
            <Text>float
(*modern_node_float32_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1689">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4042">
            <Title>Synopsis</Title>
            <Text>cast_int32_nat16 = 10258

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3002">
            <Title>Synopsis</Title>
            <Text>subtract_float64 = 233

Value type (abstract notation)
float64 -> float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="968">
            <Title>modern_stream_sigma_is_next</Title>
        </Document>
        <Document ID="3386">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_int64 = 1222

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1282">
            <Title>Synopsis</Title>
            <Text>double
(*modern_node_float64_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1306">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_let_content_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2346">
            <Title>Semantics</Title>
        </Document>
        <Document ID="969">
            <Title>modern_processor_initialize</Title>
        </Document>
        <Document ID="720">
            <Title>bit_or_nat64</Title>
        </Document>
        <Document ID="721">
            <Title>bit_xor_int8</Title>
        </Document>
        <Document ID="1283">
            <Title>Synopsis</Title>
            <Text>size_t
(*modern_node_utf8_bytes_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1307">
            <Title>Synopsis</Title>
            <Text>uint64_t
(*modern_node_backreference_index_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2347">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_int64 = 1286</Text>
        </Document>
        <Document ID="722">
            <Title>bit_xor_int16</Title>
        </Document>
        <Document ID="723">
            <Title>bit_xor_int32</Title>
        </Document>
        <Document ID="3733">
            <Title>Synopsis</Title>
            <Text>shift_right_nat64 = 1479

Value type (abstract notation)
nat64 -> nat8 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1284">
            <Title>Synopsis</Title>
            <Text>uint8_t *
(*modern_node_utf8_data_piece_get)
(modern_library *library,
 modern *value,
 size_t offset,
 size_t bytes);</Text>
        </Document>
        <Document ID="1308">
            <Title>Synopsis</Title>
            <Text>uint16_t
(*modern_node_builtin_identifier_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2348">
            <Title>Semantics</Title>
        </Document>
        <Document ID="724">
            <Title>bit_xor_int64</Title>
        </Document>
        <Document ID="4045">
            <Title>Synopsis</Title>
            <Text>cast_int32_nat32 = 10259

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3005">
            <Title>Synopsis</Title>
            <Text>multiply_int8 = 256

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1630">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2670">
            <Title>Semantics</Title>
        </Document>
        <Document ID="725">
            <Title>bit_xor_nat8</Title>
        </Document>
        <Document ID="3389">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_int64 = 1223

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1285">
            <Title>Synopsis</Title>
            <Text>size_t
(*modern_node_blob_bytes_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1309">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_bool_false_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2349">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_int64 = 1287</Text>
        </Document>
        <Document ID="726">
            <Title>bit_xor_nat16</Title>
        </Document>
        <Document ID="2671">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_universe_type = 2464</Text>
        </Document>
        <Document ID="1631">
            <Title>Parameters</Title>
        </Document>
        <Document ID="727">
            <Title>bit_xor_nat32</Title>
        </Document>
        <Document ID="1286">
            <Title>Synopsis</Title>
            <Text>uint8_t *
(*modern_node_blob_data_piece_get)
(modern_library *library,
 modern *value,
 size_t offset,
 size_t bytes);</Text>
        </Document>
        <Document ID="728">
            <Title>bit_xor_nat64</Title>
        </Document>
        <Document ID="2672">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1632">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3736">
            <Title>Synopsis</Title>
            <Text>rotate_left_int8 = 1504

Value type (abstract notation)
int8 -> nat8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="729">
            <Title>bit_not_int8</Title>
        </Document>
        <Document ID="1287">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_field_value_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="191">
            <Title>modern_node_named_type_make</Title>
        </Document>
        <Document ID="4048">
            <Title>Synopsis</Title>
            <Text>cast_int32_nat64 = 10260

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3008">
            <Title>Synopsis</Title>
            <Text>multiply_int16 = 257

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1633">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2673">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_int16 = 10240</Text>
        </Document>
        <Document ID="192">
            <Title>modern_node_universe_type_make</Title>
        </Document>
        <Document ID="1288">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_successor_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4370">
            <Title>modern_node_representation_type_family_item_add </Title>
        </Document>
        <Document ID="193">
            <Title>modern_node_lambda_make</Title>
        </Document>
        <Document ID="2674">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1634">
            <Title>Semantics</Title>
        </Document>
        <Document ID="194">
            <Title>modern_node_apply_make</Title>
        </Document>
        <Document ID="1289">
            <Title>Synopsis</Title>
            <Text>struct modern_hash *
(*modern_node_name_value_hash_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4371">
            <Title>modern_node_representation_type_family_item_remove </Title>
        </Document>
        <Document ID="2675">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_int32 = 10241</Text>
        </Document>
        <Document ID="1635">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3739">
            <Title>Synopsis</Title>
            <Text>rotate_left_int16 = 1505

Value type (abstract notation)
int16 -> nat8 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="196">
            <Title>modern_node_type_family_make</Title>
        </Document>
        <Document ID="4372">
            <Title>modern_node_representation_let_item_add </Title>
        </Document>
        <Document ID="3332">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_int64 = 1190

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="197">
            <Title>Mutation</Title>
        </Document>
        <Document ID="2676">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1636">
            <Title>Semantics</Title>
        </Document>
        <Document ID="198">
            <Title>Values</Title>
        </Document>
        <Document ID="4373">
            <Title>modern_node_representation_let_item_remove </Title>
        </Document>
        <Document ID="199">
            <Title>modern_node_int8_set</Title>
        </Document>
        <Document ID="2677">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_int64 = 10242</Text>
        </Document>
        <Document ID="1637">
            <Title>Parameters</Title>
        </Document>
        <Document ID="680">
            <Title>shift_left_nat64</Title>
        </Document>
        <Document ID="4374">
            <Title>modern_node_representation_let_content_set </Title>
        </Document>
        <Document ID="2270">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_int32 = 1220</Text>
        </Document>
        <Document ID="1230">
            <Title>Semantics</Title>
        </Document>
        <Document ID="681">
            <Title>shift_right_int8</Title>
        </Document>
        <Document ID="2678">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1638">
            <Title>Semantics</Title>
        </Document>
        <Document ID="682">
            <Title>shift_right_int16</Title>
        </Document>
        <Document ID="4375">
            <Title>modern_node_representation_backreference_index_set </Title>
        </Document>
        <Document ID="2271">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1231">
            <Title>Semantics</Title>
        </Document>
        <Document ID="683">
            <Title>shift_right_int32</Title>
        </Document>
        <Document ID="3335">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_int64 = 1191

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1960">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_int16 = 161</Text>
        </Document>
        <Document ID="2679">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int8_nat8 = 10243</Text>
        </Document>
        <Document ID="1639">
            <Title>Parameters</Title>
        </Document>
        <Document ID="684">
            <Title>shift_right_int64</Title>
        </Document>
        <Document ID="4376">
            <Title>modern_node_representation_builtin_identifier_set </Title>
        </Document>
        <Document ID="2272">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_int32 = 1221</Text>
        </Document>
        <Document ID="1232">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1961">
            <Title>Semantics</Title>
        </Document>
        <Document ID="685">
            <Title>shift_right_nat8</Title>
        </Document>
        <Document ID="686">
            <Title>shift_right_nat16</Title>
        </Document>
        <Document ID="2273">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1233">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1962">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_int32 = 162</Text>
        </Document>
        <Document ID="687">
            <Title>shift_right_nat32</Title>
        </Document>
        <Document ID="688">
            <Title>shift_right_nat64</Title>
        </Document>
        <Document ID="4378">
            <Title>Synopsis</Title>
            <Text>enum modern_node_representation_type
(*modern_node_representation_node_type_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2274">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_int64 = 1222</Text>
        </Document>
        <Document ID="1234">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3338">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_nat8 = 1192

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="440">
            <Title>add_int16</Title>
        </Document>
        <Document ID="1963">
            <Title>Semantics</Title>
        </Document>
        <Document ID="689">
            <Title>rotate_left_int8</Title>
        </Document>
        <Document ID="3660">
            <Title>Synopsis</Title>
            <Text>minimum_bound_nat64 = 1383

Value type (abstract notation)
nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2620">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_data_piece_blob = 1889</Text>
        </Document>
        <Document ID="441">
            <Title>add_int32</Title>
        </Document>
        <Document ID="4379">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2275">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1235">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1964">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_int64 = 163</Text>
        </Document>
        <Document ID="442">
            <Title>add_int64</Title>
        </Document>
        <Document ID="2621">
            <Title>Semantics</Title>
        </Document>
        <Document ID="443">
            <Title>add_nat8</Title>
        </Document>
        <Document ID="2276">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_int64 = 1223</Text>
        </Document>
        <Document ID="1236">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1965">
            <Title>Semantics</Title>
        </Document>
        <Document ID="444">
            <Title>add_nat16</Title>
        </Document>
        <Document ID="2622">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_replace_data_piece_utf8 = 1920</Text>
        </Document>
        <Document ID="445">
            <Title>add_nat32</Title>
        </Document>
        <Document ID="2277">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1237">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1966">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_nat8 = 164</Text>
        </Document>
        <Document ID="446">
            <Title>add_nat64</Title>
        </Document>
        <Document ID="3663">
            <Title>Synopsis</Title>
            <Text>maximum_bound_int8 = 1408

Value type (abstract notation)
int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2623">
            <Title>Semantics</Title>
        </Document>
        <Document ID="447">
            <Title>add_float32</Title>
        </Document>
        <Document ID="2278">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_nat8 = 1224</Text>
        </Document>
        <Document ID="1238">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1967">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4320">
            <Title>modern_node_representation_int16_type_make </Title>
        </Document>
        <Document ID="448">
            <Title>add_float64</Title>
        </Document>
        <Document ID="2624">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_replace_data_piece_blob = 1921</Text>
        </Document>
        <Document ID="1560">
            <Title>Semantics</Title>
        </Document>
        <Document ID="200">
            <Title>modern_node_int16_set</Title>
        </Document>
        <Document ID="449">
            <Title>subtract_int8</Title>
        </Document>
        <Document ID="2279">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1239">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1968">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_nat16 = 165</Text>
        </Document>
        <Document ID="4321">
            <Title>modern_node_representation_int32_type_make </Title>
        </Document>
        <Document ID="201">
            <Title>modern_node_int32_set</Title>
        </Document>
        <Document ID="2625">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1561">
            <Title>Parameters</Title>
        </Document>
        <Document ID="202">
            <Title>modern_node_int64_set</Title>
        </Document>
        <Document ID="1969">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4322">
            <Title>modern_node_representation_int64_type_make </Title>
        </Document>
        <Document ID="203">
            <Title>modern_node_nat8_set</Title>
        </Document>
        <Document ID="3666">
            <Title>Synopsis</Title>
            <Text>maximum_bound_int16 = 1409

Value type (abstract notation)
int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2626">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_empty_utf8 = 1952</Text>
        </Document>
        <Document ID="1562">
            <Title>Semantics</Title>
        </Document>
        <Document ID="204">
            <Title>modern_node_nat16_set</Title>
        </Document>
        <Document ID="4323">
            <Title>modern_node_representation_nat8_type_make </Title>
        </Document>
        <Document ID="205">
            <Title>modern_node_nat32_set</Title>
        </Document>
        <Document ID="2627">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1563">
            <Title>Parameters</Title>
        </Document>
        <Document ID="206">
            <Title>modern_node_nat64_set</Title>
        </Document>
        <Document ID="4324">
            <Title>modern_node_representation_nat16_type_make </Title>
        </Document>
        <Document ID="2220">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arccosine_float64 = 1121</Text>
        </Document>
        <Document ID="207">
            <Title>modern_node_float32_set</Title>
        </Document>
        <Document ID="2628">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_empty_blob = 1953</Text>
        </Document>
        <Document ID="1564">
            <Title>Semantics</Title>
        </Document>
        <Document ID="208">
            <Title>modern_node_float64_set</Title>
        </Document>
        <Document ID="4325">
            <Title>modern_node_representation_nat32_type_make </Title>
        </Document>
        <Document ID="2221">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1910">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3669">
            <Title>Synopsis</Title>
            <Text>maximum_bound_int32 = 1410

Value type (abstract notation)
int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2629">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1565">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3991">
            <Title>Synopsis</Title>
            <Text>cast_int8_int32 = 10241

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2222">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arctangent_float32 = 1152</Text>
        </Document>
        <Document ID="3262">
            <Title>Synopsis</Title>
            <Text>arccosine_float64 = 897

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4326">
            <Title>modern_node_representation_nat64_type_make </Title>
        </Document>
        <Document ID="1911">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2951">
            <Title>Synopsis</Title>
            <Text>add_int32 = 194

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1566">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4327">
            <Title>modern_node_representation_float32_type_make </Title>
        </Document>
        <Document ID="2223">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1912">
            <Title>Synopsis</Title>
            <Text>enum modern_builtin_identifier {
    …
};</Text>
        </Document>
        <Document ID="1567">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4328">
            <Title>modern_node_representation_float64_type_make </Title>
        </Document>
        <Document ID="2224">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_hyperbolic_arctangent_float64 = 1153</Text>
        </Document>
        <Document ID="1160">
            <Title>Synopsis</Title>
            <Text>modern_node_type_int64_value = 11</Text>
        </Document>
        <Document ID="1568">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3994">
            <Title>Synopsis</Title>
            <Text>cast_int8_int64 = 10242

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2954">
            <Title>Synopsis</Title>
            <Text>add_int64 = 195

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2225">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3265">
            <Title>Synopsis</Title>
            <Text>arctangent_float32 = 928

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1890">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1161">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat8_value = 12</Text>
        </Document>
        <Document ID="4329">
            <Title>modern_node_representation_utf8_type_make </Title>
        </Document>
        <Document ID="1914">
            <Title>Semantics</Title>
            <Text>A modern_builtin_identifier is an enumerated value, as described in the nearby section Builtin identifiers - Overview.  The actual permissible values, the names that go with them, and their semantics are all detailed in the larger top-level section Builtin identifiers.</Text>
        </Document>
        <Document ID="1569">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3611">
            <Title>Synopsis</Title>
            <Text>floor_float64_nat8 = 1353

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2226">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_int8 = 1184</Text>
        </Document>
        <Document ID="1915">
            <Title>modern_node_canonical_hash_get</Title>
        </Document>
        <Document ID="1891">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1162">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat16_value = 13</Text>
        </Document>
        <Document ID="160">
            <Title>modern_node_nat32_make</Title>
        </Document>
        <Document ID="161">
            <Title>modern_node_nat64_make</Title>
        </Document>
        <Document ID="890">
            <Title>Logarithm and exponent</Title>
        </Document>
        <Document ID="2227">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1916">
            <Title>Synopsis</Title>
            <Text>struct modern_hash
(*modern_node_canonical_hash_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="1892">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1163">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat32_value = 14</Text>
        </Document>
        <Document ID="162">
            <Title>modern_node_float32_make</Title>
        </Document>
        <Document ID="891">
            <Title>Arithmetic</Title>
        </Document>
        <Document ID="3997">
            <Title>Synopsis</Title>
            <Text>cast_int8_nat8 = 10243

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2957">
            <Title>Synopsis</Title>
            <Text>add_nat8 = 196

Value type (abstract notation)
nat8 -> nat8 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1917">
            <Title>Parameters</Title>
        </Document>
        <Document ID="163">
            <Title>modern_node_float64_make</Title>
        </Document>
        <Document ID="2228">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_int8 = 1185</Text>
        </Document>
        <Document ID="3268">
            <Title>Synopsis</Title>
            <Text>arctangent_float64 = 929

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1893">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1164">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat64_value = 15</Text>
        </Document>
        <Document ID="893">
            <Title>Equality</Title>
        </Document>
        <Document ID="3590">
            <Title>Synopsis</Title>
            <Text>floor_float32_int16 = 1346

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3614">
            <Title>Synopsis</Title>
            <Text>floor_float32_nat16 = 1354

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1510">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2550">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_nat16 = 1573</Text>
        </Document>
        <Document ID="165">
            <Title>modern_node_utf8_make</Title>
        </Document>
        <Document ID="1918">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2229">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1894">
            <Title>Semantics</Title>
        </Document>
        <Document ID="894">
            <Title>Ordering</Title>
        </Document>
        <Document ID="1165">
            <Title>Synopsis</Title>
            <Text>modern_node_type_float32_value = 16</Text>
        </Document>
        <Document ID="166">
            <Title>modern_node_blob_make</Title>
        </Document>
        <Document ID="2551">
            <Title>Semantics</Title>
        </Document>
        <Document ID="20">
            <Title>modern_stream_type_definition_int16</Title>
        </Document>
        <Document ID="895">
            <Title>Logic</Title>
        </Document>
        <Document ID="1511">
            <Title>Parameters</Title>
        </Document>
        <Document ID="21">
            <Title>modern_stream_type_definition_int32</Title>
        </Document>
        <Document ID="1895">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1919">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_if_bool = 0</Text>
        </Document>
        <Document ID="22">
            <Title>modern_stream_type_definition_int64</Title>
        </Document>
        <Document ID="896">
            <Title>Flow control</Title>
        </Document>
        <Document ID="1166">
            <Title>Synopsis</Title>
            <Text>modern_node_type_float64_value = 17</Text>
        </Document>
        <Document ID="23">
            <Title>modern_stream_type_definition_nat8</Title>
        </Document>
        <Document ID="2552">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_nat32 = 1574</Text>
        </Document>
        <Document ID="897">
            <Title>Hashing</Title>
        </Document>
        <Document ID="24">
            <Title>modern_stream_type_definition_nat16</Title>
        </Document>
        <Document ID="1512">
            <Title>Semantics</Title>
        </Document>
        <Document ID="25">
            <Title>modern_stream_type_definition_nat32</Title>
        </Document>
        <Document ID="1896">
            <Title>Semantics</Title>
        </Document>
        <Document ID="898">
            <Title>modern_node_canonical_hash_set</Title>
        </Document>
        <Document ID="1167">
            <Title>Synopsis</Title>
            <Text>modern_node_type_utf8_value = 18</Text>
        </Document>
        <Document ID="26">
            <Title>modern_stream_type_definition_nat64</Title>
        </Document>
        <Document ID="3593">
            <Title>Synopsis</Title>
            <Text>floor_float64_int16 = 1347

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2553">
            <Title>Semantics</Title>
        </Document>
        <Document ID="27">
            <Title>modern_stream_type_definition_float32</Title>
        </Document>
        <Document ID="3617">
            <Title>Synopsis</Title>
            <Text>floor_float64_nat16 = 1355

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="899">
            <Title>modern_stream_maybe_nothing</Title>
        </Document>
        <Document ID="650">
            <Title>floor_float64_nat8</Title>
        </Document>
        <Document ID="28">
            <Title>modern_stream_type_definition_float64</Title>
        </Document>
        <Document ID="1513">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1897">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1168">
            <Title>Synopsis</Title>
            <Text>modern_node_type_blob_value = 19</Text>
        </Document>
        <Document ID="4250">
            <Title>Semantics</Title>
            <Text>A modern_node_representation structure contains callbacks which are used by the library for all operations on modern nodes - creating, accessing, and updating.  Its purpose is so that the authors of language bindings for Modern Data can produce node-representations which uses native types to do the storage.  For example, this allows modern nodes to be subject to garbage collection, in garbage-collected languages.</Text>
        </Document>
        <Document ID="3210">
            <Title>Synopsis</Title>
            <Text>e_to_the_x_float32 = 640

Value type (abstract notation)
float32 -> float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="651">
            <Title>floor_float32_nat16</Title>
        </Document>
        <Document ID="2554">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_and_nat64 = 1575</Text>
        </Document>
        <Document ID="1490">
            <Title>Semantics</Title>
        </Document>
        <Document ID="652">
            <Title>floor_float64_nat16</Title>
        </Document>
        <Document ID="1514">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1898">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1169">
            <Title>Synopsis</Title>
            <Text>modern_node_type_sigma_value = 20</Text>
        </Document>
        <Document ID="653">
            <Title>floor_float32_nat32</Title>
        </Document>
        <Document ID="2555">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1515">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1491">
            <Title>Parameters</Title>
        </Document>
        <Document ID="654">
            <Title>floor_float64_nat32</Title>
        </Document>
        <Document ID="1899">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4252">
            <Title>modern_node_representation_node_type_get</Title>
        </Document>
        <Document ID="655">
            <Title>floor_float32_nat64</Title>
        </Document>
        <Document ID="2901">
            <Title>Synopsis</Title>
            <Text>equal_to_name = 139

Value type (abstract notation)
name -> name -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3596">
            <Title>Synopsis</Title>
            <Text>floor_float32_int32 = 1348

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2556">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_int8 = 1600</Text>
        </Document>
        <Document ID="1516">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1492">
            <Title>Semantics</Title>
        </Document>
        <Document ID="656">
            <Title>floor_float64_nat64</Title>
        </Document>
        <Document ID="3942">
            <Title>Synopsis</Title>
            <Text>get_maybe_type_content_type = 2528

Value type (abstract notation)
universe 0 -> maybe (universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3213">
            <Title>Synopsis</Title>
            <Text>e_to_the_x_float64 = 641

Value type (abstract notation)
float64 -> float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="657">
            <Title>minimum_bound_int8</Title>
        </Document>
        <Document ID="2557">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1517">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1493">
            <Title>Parameters</Title>
        </Document>
        <Document ID="658">
            <Title>minimum_bound_int16</Title>
        </Document>
        <Document ID="4254">
            <Title>modern_node_representation_value_type_get</Title>
        </Document>
        <Document ID="410">
            <Title>modern_node_type_name_value</Title>
        </Document>
        <Document ID="1110">
            <Title>Synopsis</Title>
            <Text>struct modern_vfile *
modern_vfile_fd_make
(modern_library *library);</Text>
        </Document>
        <Document ID="659">
            <Title>minimum_bound_int32</Title>
        </Document>
        <Document ID="2150">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_square_root_float32 = 576</Text>
        </Document>
        <Document ID="2558">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_int16 = 1601</Text>
        </Document>
        <Document ID="1518">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1494">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4600">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_sigma_type_successor_set)
(modern_library *library,
 void *value,
 void *successor);</Text>
        </Document>
        <Document ID="411">
            <Title>modern_node_type_name_type</Title>
        </Document>
        <Document ID="4255">
            <Title>modern_node_representation_mutable_get</Title>
        </Document>
        <Document ID="2151">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2904">
            <Title>Synopsis</Title>
            <Text>equal_to_utf8 = 140

Value type (abstract notation)
utf8 -> uft8 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1840">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2880">
            <Title>Synopsis</Title>
            <Text>equal_to_int64 = 132

Value type (abstract notation)
int64 -> int64 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="412">
            <Title>modern_node_name_value_make</Title>
        </Document>
        <Document ID="1111">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3599">
            <Title>Synopsis</Title>
            <Text>floor_float64_int32 = 1349

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2559">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1519">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1495">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4601">
            <Title>Semantics</Title>
        </Document>
        <Document ID="413">
            <Title>modern_node_name_type_make</Title>
        </Document>
        <Document ID="3192">
            <Title>Synopsis</Title>
            <Text>pi_float32 = 544

Value type (abstract notation)
float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2152">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_square_root_float64 = 577</Text>
        </Document>
        <Document ID="3945">
            <Title>Synopsis</Title>
            <Text>get_function_type_left = 2080

Value type (abstract notation)
universe 0 -> maybe (universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3216">
            <Title>Synopsis</Title>
            <Text>two_to_the_x_float32 = 672

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4256">
            <Title>modern_node_representation_canonical_hash_get</Title>
        </Document>
        <Document ID="1841">
            <Title>Semantics</Title>
        </Document>
        <Document ID="414">
            <Title>and_bool</Title>
        </Document>
        <Document ID="1112">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1496">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4602">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_named_type_name_set)
(modern_library *library,
 void *value,
 struct modern_hash name);</Text>
        </Document>
        <Document ID="415">
            <Title>or_bool</Title>
        </Document>
        <Document ID="4257">
            <Title>modern_node_representation_maybe_just_content_get</Title>
        </Document>
        <Document ID="2153">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1842">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1113">
            <Title>Synopsis</Title>
            <Text>void modern_vfile_stdio_finalize
(modern_library *library,
 void *vfile_state);</Text>
        </Document>
        <Document ID="416">
            <Title>not_bool</Title>
        </Document>
        <Document ID="1497">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4603">
            <Title>Semantics</Title>
        </Document>
        <Document ID="417">
            <Title>equal_to_bool</Title>
        </Document>
        <Document ID="4258">
            <Title>modern_node_representation_int8_get </Title>
        </Document>
        <Document ID="2154">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_natural_logarithm_float32 = 608</Text>
        </Document>
        <Document ID="1114">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2907">
            <Title>Synopsis</Title>
            <Text>equal_to_blob = 150

Value type (abstract notation)
blob -> blob -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1090">
            <Title>Synopsis</Title>
            <Text>struct modern_error_handler {
    …
};</Text>
        </Document>
        <Document ID="1843">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2883">
            <Title>Synopsis</Title>
            <Text>equal_to_nat8 = 133

Value type (abstract notation)
nat8 -> nat8 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="418">
            <Title>equal_to_int8</Title>
        </Document>
        <Document ID="1498">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4580">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_float32_set)
(modern_library *library,
 void *node,
 float value);</Text>
        </Document>
        <Document ID="4604">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_named_type_content_type_set)
(modern_library *library,
 void *value,
 void *content_type);</Text>
        </Document>
        <Document ID="2500">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_nat8 = 1476</Text>
        </Document>
        <Document ID="419">
            <Title>equal_to_int16</Title>
        </Document>
        <Document ID="3195">
            <Title>Synopsis</Title>
            <Text>pi_float64 = 545

Value type (abstract notation)
float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2155">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1115">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3948">
            <Title>Synopsis</Title>
            <Text>get_function_type_right = 2112

Value type (abstract notation)
universe 0 -> maybe (universe 0)

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1091">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3219">
            <Title>Synopsis</Title>
            <Text>two_to_the_x_float64 = 673

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4259">
            <Title>modern_node_representation_int16_get </Title>
        </Document>
        <Document ID="900">
            <Title>modern_stream_maybe_just_is_next</Title>
        </Document>
        <Document ID="1499">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1844">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4581">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4605">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2501">
            <Title>Semantics</Title>
        </Document>
        <Document ID="901">
            <Title>modern_stream_type_definition_maybe_is_next</Title>
        </Document>
        <Document ID="2156">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_natural_logarithm_float64 = 609</Text>
        </Document>
        <Document ID="1116">
            <Title>Synopsis</Title>
            <Text>void *
modern_vfile_stdio_initialize
(modern_library *library,
 FILE *stream);</Text>
        </Document>
        <Document ID="1845">
            <Title>Semantics</Title>
        </Document>
        <Document ID="902">
            <Title>modern_node_type_maybe_value_nothing</Title>
        </Document>
        <Document ID="4582">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_float64_set)
(modern_library *library,
 void *node,
 double value);</Text>
        </Document>
        <Document ID="3542">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_int32 = 1316

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2502">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_nat16 = 1477</Text>
        </Document>
        <Document ID="4606">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_universe_type_level_set)
(modern_library *library,
 void *value,
 uint64_t level);</Text>
        </Document>
        <Document ID="903">
            <Title>modern_node_type_maybe_value_just</Title>
        </Document>
        <Document ID="2157">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1117">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1846">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2886">
            <Title>Synopsis</Title>
            <Text>equal_to_nat16 = 134

Value type (abstract notation)
nat16 -> nat16 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="904">
            <Title>modern_node_type_maybe_type</Title>
        </Document>
        <Document ID="4583">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4607">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2503">
            <Title>Semantics</Title>
        </Document>
        <Document ID="905">
            <Title>modern_node_maybe_nothing_make</Title>
        </Document>
        <Document ID="3198">
            <Title>Synopsis</Title>
            <Text>square_root_float32 = 576

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2158">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_e_to_the_x_float32 = 640</Text>
        </Document>
        <Document ID="1118">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1094">
            <Title>modern_vfile</Title>
        </Document>
        <Document ID="1847">
            <Title>Semantics</Title>
        </Document>
        <Document ID="906">
            <Title>modern_node_maybe_just_make</Title>
        </Document>
        <Document ID="4584">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_utf8_data_piece_set)
(modern_library *library,
 void *value,
 uint8_t *data,
 size_t offset,
 size_t old_bytes,
 size_t new_bytes);</Text>
        </Document>
        <Document ID="2480">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2504">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_nat32 = 1478</Text>
        </Document>
        <Document ID="1440">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_utf8)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4608">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_lambda_content_set)
(modern_library *library,
 void *value,
 void *content);</Text>
        </Document>
        <Document ID="907">
            <Title>modern_node_maybe_type_make</Title>
        </Document>
        <Document ID="2159">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1119">
            <Title>Synopsis</Title>
            <Text>struct modern_vfile *
modern_vfile_stdio_make
(modern_library *library);</Text>
        </Document>
        <Document ID="1095">
            <Title>Synopsis</Title>
            <Text>struct modern_vfile {
    …
};</Text>
        </Document>
        <Document ID="1848">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4201">
            <Title>Synopsis</Title>
            <Text>cast_blob_float64 = 10311

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="908">
            <Title>modern_node_maybe_just_content_get</Title>
        </Document>
        <Document ID="4585">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3545">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_int32 = 1317

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2505">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1441">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_blob)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="370">
            <Title>modern_node_backreference_make</Title>
        </Document>
        <Document ID="2481">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_int64 = 1443</Text>
        </Document>
        <Document ID="4609">
            <Title>Semantics</Title>
        </Document>
        <Document ID="909">
            <Title>modern_node_maybe_type_content_type_get</Title>
        </Document>
        <Document ID="1096">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1849">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2889">
            <Title>Synopsis</Title>
            <Text>equal_to_nat32 = 135

Value type (abstract notation)
nat32 -> nat32 -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="371">
            <Title>modern_node_builtin_make</Title>
        </Document>
        <Document ID="4586">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_blob_data_piece_set)
(modern_library *library,
 void *value,
 uint8_t *data,
 size_t offset,
 size_t old_bytes,
 size_t new_bytes);</Text>
        </Document>
        <Document ID="2482">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2506">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_right_nat64 = 1479</Text>
        </Document>
        <Document ID="1442">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_function_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="372">
            <Title>modern_stream_item_from_context_is_next</Title>
        </Document>
        <Document ID="4587">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2483">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_nat8 = 1444</Text>
        </Document>
        <Document ID="2507">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1443">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_sigma_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state
 struct modern_hash *a,
 struct modern_hash *b);</Text>
        </Document>
        <Document ID="374">
            <Title>Combinators</Title>
        </Document>
        <Document ID="1098">
            <Title>Synopsis</Title>
            <Text>ssize_t
(*modern_vfile_read)
(void *vfile_state,
 uint8_t *buffer,
 size_t length);</Text>
        </Document>
        <Document ID="4180">
            <Title>Synopsis</Title>
            <Text>cast_blob_int32 = 10304

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3140">
            <Title>Synopsis</Title>
            <Text>negate_int16 = 449

Value type (abstract notation)
int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4204">
            <Title>Synopsis</Title>
            <Text>cast_int8_blob = 10312

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="375">
            <Title>modern_node_utf8_data_piece_set</Title>
        </Document>
        <Document ID="4588">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_sigma_set)
(modern_library *library,
 void *value,
 void *field_value,
 void *successor);</Text>
        </Document>
        <Document ID="3548">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_int64 = 1318

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2508">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_int8 = 1504</Text>
        </Document>
        <Document ID="1444">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_named_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 struct modern_hash *name);</Text>
        </Document>
        <Document ID="2484">
            <Title>Semantics</Title>
        </Document>
        <Document ID="376">
            <Title>modern_node_blob_data_piece_set</Title>
        </Document>
        <Document ID="1099">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2830">
            <Title>Semantics</Title>
        </Document>
        <Document ID="377">
            <Title>modern_node_sigma_set</Title>
        </Document>
        <Document ID="4589">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2485">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_nat16 = 1445</Text>
        </Document>
        <Document ID="2509">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1445">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_type_definition_universe)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="3871">
            <Title>Synopsis</Title>
            <Text>bit_not_nat16 = 1669

Value type (abstract notation)
nat16 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2831">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_blob = 10318</Text>
        </Document>
        <Document ID="130">
            <Title>modern_node_int8_get</Title>
        </Document>
        <Document ID="80">
            <Title>modern_node_type_blob_value</Title>
        </Document>
        <Document ID="379">
            <Title>modern_node_function_type_left_set</Title>
        </Document>
        <Document ID="2486">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1446">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_bool_false)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="81">
            <Title>modern_node_type_sigma_value</Title>
        </Document>
        <Document ID="860">
            <Title>cast_nat8_blob</Title>
        </Document>
        <Document ID="131">
            <Title>modern_node_int16_get</Title>
        </Document>
        <Document ID="82">
            <Title>modern_node_type_named_value</Title>
        </Document>
        <Document ID="4183">
            <Title>Synopsis</Title>
            <Text>cast_blob_int64 = 10305

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3143">
            <Title>Synopsis</Title>
            <Text>negate_int32 = 450

Value type (abstract notation)
int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4207">
            <Title>Synopsis</Title>
            <Text>cast_int16_blob = 10313

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2832">
            <Title>Semantics</Title>
        </Document>
        <Document ID="83">
            <Title>modern_node_type_int8_type</Title>
        </Document>
        <Document ID="861">
            <Title>cast_nat16_blob</Title>
        </Document>
        <Document ID="132">
            <Title>modern_node_int32_get</Title>
        </Document>
        <Document ID="2487">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_nat32 = 1456</Text>
        </Document>
        <Document ID="1447">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_bool_true)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="84">
            <Title>modern_node_type_int16_type</Title>
        </Document>
        <Document ID="85">
            <Title>modern_node_type_int32_type</Title>
        </Document>
        <Document ID="862">
            <Title>cast_nat32_blob</Title>
        </Document>
        <Document ID="133">
            <Title>modern_node_int64_get</Title>
        </Document>
        <Document ID="2080">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_int32 = 386</Text>
        </Document>
        <Document ID="86">
            <Title>modern_node_type_int64_type</Title>
        </Document>
        <Document ID="1040">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_type_mismatch)
(void *client_state,
 modern *expected,
 modern *actual);</Text>
        </Document>
        <Document ID="2833">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_blob = 10319</Text>
        </Document>
        <Document ID="87">
            <Title>modern_node_type_nat8_type</Title>
        </Document>
        <Document ID="863">
            <Title>cast_nat64_blob</Title>
        </Document>
        <Document ID="1448">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_ordering_less)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2488">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4530">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_float64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="88">
            <Title>modern_node_type_nat16_type</Title>
        </Document>
        <Document ID="134">
            <Title>modern_node_nat8_get</Title>
        </Document>
        <Document ID="864">
            <Title>cast_float32_blob</Title>
        </Document>
        <Document ID="89">
            <Title>modern_node_type_nat32_type</Title>
        </Document>
        <Document ID="2081">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1770">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1041">
            <Title>Parameters</Title>
        </Document>
        <Document ID="135">
            <Title>modern_node_nat16_get</Title>
        </Document>
        <Document ID="2834">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3874">
            <Title>Synopsis</Title>
            <Text>bit_not_nat32 = 1670

Value type (abstract notation)
nat32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="865">
            <Title>cast_float64_blob</Title>
        </Document>
        <Document ID="1449">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_ordering_equal)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2489">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_shift_left_nat64 = 1457</Text>
        </Document>
        <Document ID="4531">
            <Title>Semantics</Title>
        </Document>
        <Document ID="136">
            <Title>modern_node_nat32_get</Title>
        </Document>
        <Document ID="4186">
            <Title>Synopsis</Title>
            <Text>cast_blob_nat8 = 10306

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3146">
            <Title>Synopsis</Title>
            <Text>negate_int64 = 451

Value type (abstract notation)
int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="866">
            <Title>round_towards_zero_float32_float32</Title>
        </Document>
        <Document ID="1771">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1042">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2082">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_int64 = 387</Text>
        </Document>
        <Document ID="137">
            <Title>modern_node_nat64_get</Title>
        </Document>
        <Document ID="2835">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_float32_blob = 10320</Text>
        </Document>
        <Document ID="867">
            <Title>round_towards_zero_float64_float64</Title>
        </Document>
        <Document ID="138">
            <Title>modern_node_float32_get</Title>
        </Document>
        <Document ID="4532">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_utf8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="868">
            <Title>round_away_from_zero_float32_float32</Title>
        </Document>
        <Document ID="1772">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1043">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_universe_level_overflow)
(void *client_state);</Text>
        </Document>
        <Document ID="2083">
            <Title>Semantics</Title>
        </Document>
        <Document ID="139">
            <Title>modern_node_float64_get</Title>
        </Document>
        <Document ID="2836">
            <Title>Semantics</Title>
        </Document>
        <Document ID="620">
            <Title>round_towards_odd_float64_nat16</Title>
        </Document>
        <Document ID="869">
            <Title>round_away_from_zero_float64_float64</Title>
        </Document>
        <Document ID="4533">
            <Title>Semantics</Title>
        </Document>
        <Document ID="621">
            <Title>round_towards_odd_float32_nat32</Title>
        </Document>
        <Document ID="2084">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_nat8 = 388</Text>
        </Document>
        <Document ID="2108">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_negate_int8 = 448</Text>
        </Document>
        <Document ID="1773">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1044">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2837">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_float64_blob = 10321</Text>
        </Document>
        <Document ID="3877">
            <Title>Synopsis</Title>
            <Text>bit_not_nat64 = 1671

Value type (abstract notation)
nat64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="622">
            <Title>round_towards_odd_float64_nat32</Title>
        </Document>
        <Document ID="4534">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_blob_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2430">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3470">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_float32 = 1264

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4189">
            <Title>Synopsis</Title>
            <Text>cast_blob_nat16 = 10307

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3149">
            <Title>Synopsis</Title>
            <Text>negate_float32 = 452

Value type (abstract notation)
float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2109">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1774">
            <Title>Parameters</Title>
        </Document>
        <Document ID="623">
            <Title>round_towards_odd_float32_nat64</Title>
        </Document>
        <Document ID="1045">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2085">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2838">
            <Title>Semantics</Title>
        </Document>
        <Document ID="624">
            <Title>round_towards_odd_float64_nat64</Title>
        </Document>
        <Document ID="4535">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2431">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_nat32 = 1356</Text>
        </Document>
        <Document ID="2086">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_nat16 = 389</Text>
        </Document>
        <Document ID="1775">
            <Title>Semantics</Title>
        </Document>
        <Document ID="625">
            <Title>ceiling_float32_int8</Title>
        </Document>
        <Document ID="1046">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_buffer_index)
(void *client_state);</Text>
        </Document>
        <Document ID="2839">
            <Title>Overview</Title>
        </Document>
        <Document ID="626">
            <Title>ceiling_float64_int8</Title>
        </Document>
        <Document ID="4536">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_function_type_make)
(modern_library *library,
 void *left, void *right);</Text>
        </Document>
        <Document ID="2432">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2087">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1776">
            <Title>Parameters</Title>
        </Document>
        <Document ID="627">
            <Title>ceiling_float32_int16</Title>
        </Document>
        <Document ID="1047">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4537">
            <Title>Semantics</Title>
        </Document>
        <Document ID="628">
            <Title>ceiling_float64_int16</Title>
        </Document>
        <Document ID="2433">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_nat32 = 1357</Text>
        </Document>
        <Document ID="3473">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_float64 = 1265

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2088">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_modulus_towards_zero_nat32 = 390</Text>
        </Document>
        <Document ID="1777">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1048">
            <Title>Semantics</Title>
        </Document>
        <Document ID="629">
            <Title>ceiling_float32_int32</Title>
        </Document>
        <Document ID="4538">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_type_make)
(modern_library *library,
 void *field_type, void *successor);</Text>
        </Document>
        <Document ID="1370">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_blob_data_piece_set)
(modern_library *library,
 modern *value,
 uint8_t *data,
 size_t offset,
 size_t old_bytes,
 size_t new_bytes);</Text>
        </Document>
        <Document ID="2434">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2089">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1778">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1049">
            <Title>Synopsis</Title>
            <Text>void
(*modern_error_handler_not_applicable)
(void *client_state);</Text>
        </Document>
        <Document ID="3820">
            <Title>Synopsis</Title>
            <Text>bit_or_nat8 = 1604

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4539">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1371">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_sigma_set)
(modern_library *library,
 modern *value,
 modern *field_value,
 modern *successor);</Text>
        </Document>
        <Document ID="2435">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_nat64 = 1358</Text>
        </Document>
        <Document ID="1779">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4132">
            <Title>Synopsis</Title>
            <Text>cast_nat32_nat64 = 10288

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3476">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_int8 = 1280

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1372">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_named_value_set)
(modern_library *library,
 modern *node,
 modern *type,
 modern *value);</Text>
        </Document>
        <Document ID="2436">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1373">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_maybe_type_content_type_set)
(modern_library *library,
 modern *value,
 modern *content_type);</Text>
        </Document>
        <Document ID="2437">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_nat64 = 1359</Text>
        </Document>
        <Document ID="3823">
            <Title>Synopsis</Title>
            <Text>bit_or_nat16 = 1605

Value type (abstract notation)
nat16 -> nat16 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2030">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1374">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_function_type_left_set)
(modern_library *library,
 modern *value,
 modern *left);</Text>
        </Document>
        <Document ID="2438">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4135">
            <Title>Synopsis</Title>
            <Text>cast_nat64_int8 = 10289

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2760">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_int16 = 10283</Text>
        </Document>
        <Document ID="1720">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2031">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_nat32 = 262</Text>
        </Document>
        <Document ID="580">
            <Title>round_away_from_zero_float64_int16</Title>
        </Document>
        <Document ID="3479">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_int8 = 1281

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1375">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_function_type_right_set)
(modern_library *library,
 modern *value,
 modern *right);</Text>
        </Document>
        <Document ID="2439">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_float32 = 1360</Text>
        </Document>
        <Document ID="581">
            <Title>round_away_from_zero_float32_int32</Title>
        </Document>
        <Document ID="2761">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1721">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2032">
            <Title>Semantics</Title>
        </Document>
        <Document ID="582">
            <Title>round_away_from_zero_float64_int32</Title>
        </Document>
        <Document ID="1376">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_sigma_type_field_type_set)
(modern_library *library,
 modern *value,
 modern *field_type);</Text>
        </Document>
        <Document ID="583">
            <Title>round_away_from_zero_float32_int64</Title>
        </Document>
        <Document ID="3826">
            <Title>Synopsis</Title>
            <Text>bit_or_nat32 = 1606

Value type (abstract notation)
nat32 -> nat32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1722">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2762">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_int32 = 10284</Text>
        </Document>
        <Document ID="2033">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_nat64 = 263</Text>
        </Document>
        <Document ID="584">
            <Title>round_away_from_zero_float64_int64</Title>
        </Document>
        <Document ID="1377">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_sigma_type_successor_set)
(modern_library *library,
 modern *value,
 modern *successor);</Text>
        </Document>
        <Document ID="585">
            <Title>round_away_from_zero_float32_nat8</Title>
        </Document>
        <Document ID="4138">
            <Title>Synopsis</Title>
            <Text>cast_nat64_int16 = 10290

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2763">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1723">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2034">
            <Title>Semantics</Title>
        </Document>
        <Document ID="586">
            <Title>round_away_from_zero_float64_nat8</Title>
        </Document>
        <Document ID="1378">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_named_type_name_set)
(modern_library *library,
 modern *value,
 struct modern_hash *name);</Text>
        </Document>
        <Document ID="4460">
            <Title>Synopsis</Title>
            <Text>uint16_t 
(*modern_node_representation_builtin_identifier_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="587">
            <Title>round_away_from_zero_float32_nat16</Title>
        </Document>
        <Document ID="2764">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_int64 = 10285</Text>
        </Document>
        <Document ID="1724">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2035">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_float32 = 264</Text>
        </Document>
        <Document ID="588">
            <Title>round_away_from_zero_float64_nat16</Title>
        </Document>
        <Document ID="1379">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_named_type_content_type_set)
(modern_library *library,
 modern *value,
 modern *content_type);</Text>
        </Document>
        <Document ID="4461">
            <Title>Semantics</Title>
        </Document>
        <Document ID="589">
            <Title>round_away_from_zero_float32_nat32</Title>
        </Document>
        <Document ID="3829">
            <Title>Synopsis</Title>
            <Text>bit_or_nat64 = 1607

Value type (abstract notation)
nat64 -> nat64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1725">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2765">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2036">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4462">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_bool_false_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="3422">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_int8 = 1248

Value type (abstract notation)
float32 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2766">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_nat8 = 10286</Text>
        </Document>
        <Document ID="1726">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2037">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_multiply_float64 = 265</Text>
        </Document>
        <Document ID="4463">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2767">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1727">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2038">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4464">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_bool_true_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2360">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1320">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat8_make)
(modern_library *library,
 uint8_t value);</Text>
        </Document>
        <Document ID="2768">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat32_nat16 = 10287</Text>
        </Document>
        <Document ID="1728">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2039">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_int8 = 288</Text>
        </Document>
        <Document ID="4465">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3425">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_int8 = 1249

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1321">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat16_make)
(modern_library *library,
 uint16_t value);</Text>
        </Document>
        <Document ID="2361">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_nat32 = 1293</Text>
        </Document>
        <Document ID="2769">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1729">
            <Title>Parameters</Title>
        </Document>
        <Document ID="100">
            <Title>modern_node_type_apply</Title>
        </Document>
        <Document ID="4466">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_ordering_less_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2362">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1322">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat32_make)
(modern_library *library,
 uint32_t value);</Text>
        </Document>
        <Document ID="101">
            <Title>Memory management</Title>
        </Document>
        <Document ID="4467">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2363">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_nat64 = 1294</Text>
        </Document>
        <Document ID="1323">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat64_make)
(modern_library *library,
 uint64_t value);</Text>
        </Document>
        <Document ID="4060">
            <Title>Synopsis</Title>
            <Text>cast_int64_nat8 = 10264

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3020">
            <Title>Synopsis</Title>
            <Text>multiply_nat16 = 261

Value type (abstract notation)
nat16 -> nat16 -> maybe nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4468">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_ordering_equal_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="3428">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_int16 = 1250

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1324">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_float32_make)
(modern_library *library,
 float value);</Text>
        </Document>
        <Document ID="2364">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2710">
            <Title>Semantics</Title>
        </Document>
        <Document ID="106">
            <Title>modern_finalize</Title>
        </Document>
        <Document ID="4469">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2365">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_nat64 = 1295</Text>
        </Document>
        <Document ID="1325">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_float64_make)
(modern_library *library,
 double value);</Text>
        </Document>
        <Document ID="3751">
            <Title>Synopsis</Title>
            <Text>rotate_left_nat16 = 1509

Value type (abstract notation)
nat16 -> nat8 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2711">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_nat32 = 10259</Text>
        </Document>
        <Document ID="108">
            <Title>Contexts</Title>
        </Document>
        <Document ID="2366">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1326">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_utf8_make)
(modern_library *library,
 uint8_t *data);</Text>
        </Document>
        <Document ID="109">
            <Title>modern_initial_context_make</Title>
        </Document>
        <Document ID="4063">
            <Title>Synopsis</Title>
            <Text>cast_int64_nat16 = 10265

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3023">
            <Title>Synopsis</Title>
            <Text>multiply_nat32 = 262

Value type (abstract notation)
nat32 -> nat32 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2712">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2367">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_float32 = 1296</Text>
        </Document>
        <Document ID="1327">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_blob_make)
(modern_library *library,
 uint8_t *data,
 size_t bytes);</Text>
        </Document>
        <Document ID="2713">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int32_nat64 = 10260</Text>
        </Document>
        <Document ID="2368">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1328">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_make)
(modern_library *library,
 modern *type,
 modern *field_value,
 modern *successor_value);</Text>
        </Document>
        <Document ID="4410">
            <Title>Synopsis</Title>
            <Text>size_t 
(*modern_node_representation_utf8_bytes_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2690">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1650">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2714">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3754">
            <Title>Synopsis</Title>
            <Text>rotate_left_nat32 = 1510

Value type (abstract notation)
nat32 -> nat8 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2369">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_float64 = 1297</Text>
        </Document>
        <Document ID="1329">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_name_value_make)
(modern_library *library,
 struct modern_hash *name);</Text>
        </Document>
        <Document ID="4411">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4066">
            <Title>Synopsis</Title>
            <Text>cast_int64_nat32 = 10266

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3026">
            <Title>Synopsis</Title>
            <Text>multiply_nat64 = 263

Value type (abstract notation)
nat64 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1651">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2691">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_int64 = 10249</Text>
        </Document>
        <Document ID="2715">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_int8 = 10261</Text>
        </Document>
        <Document ID="4412">
            <Title>Synopsis</Title>
            <Text>uint8_t *
(*modern_node_representation_utf8_data_piece_get)
(modern_library *library,
 void *value, size_t offset, size_t bytes);</Text>
        </Document>
        <Document ID="2692">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1652">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2716">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4413">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2693">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_nat8 = 10250</Text>
        </Document>
        <Document ID="1653">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2717">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_int16 = 10262</Text>
        </Document>
        <Document ID="3757">
            <Title>Synopsis</Title>
            <Text>rotate_left_nat64 = 1511

Value type (abstract notation)
nat64 -> nat8 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="790">
            <Title>cast_int64_nat8</Title>
        </Document>
        <Document ID="4390">
            <Title>Synopsis</Title>
            <Text>int8_t 
(*modern_node_representation_int8_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="4414">
            <Title>Synopsis</Title>
            <Text>size_t 
(*modern_node_representation_blob_bytes_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2310">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_int64 = 1254</Text>
        </Document>
        <Document ID="3350">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_nat32 = 1196

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="791">
            <Title>cast_int64_nat16</Title>
        </Document>
        <Document ID="4069">
            <Title>Synopsis</Title>
            <Text>cast_int64_nat64 = 10267

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3029">
            <Title>Synopsis</Title>
            <Text>multiply_float32 = 264

Value type (abstract notation)
float32 -> float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1654">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2694">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2718">
            <Title>Semantics</Title>
        </Document>
        <Document ID="792">
            <Title>cast_int64_nat32</Title>
        </Document>
        <Document ID="4391">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4415">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2311">
            <Title>Semantics</Title>
        </Document>
        <Document ID="793">
            <Title>cast_int64_nat64</Title>
        </Document>
        <Document ID="2695">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_nat16 = 10251</Text>
        </Document>
        <Document ID="1655">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2719">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int64_int32 = 10263</Text>
        </Document>
        <Document ID="794">
            <Title>cast_nat8_int8</Title>
        </Document>
        <Document ID="4392">
            <Title>Synopsis</Title>
            <Text>int16_t 
(*modern_node_representation_int16_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="4416">
            <Title>Synopsis</Title>
            <Text>uint8_t *
(*modern_node_representation_blob_data_piece_get)
(modern_library *library,
 void *value, size_t offset, size_t bytes);</Text>
        </Document>
        <Document ID="2312">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_int64 = 1255</Text>
        </Document>
        <Document ID="2696">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1656">
            <Title>Semantics</Title>
        </Document>
        <Document ID="795">
            <Title>cast_nat8_int16</Title>
        </Document>
        <Document ID="796">
            <Title>cast_nat8_int32</Title>
        </Document>
        <Document ID="4417">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2313">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3353">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_nat32 = 1197

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4393">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2697">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_nat32 = 10252</Text>
        </Document>
        <Document ID="1657">
            <Title>Parameters</Title>
        </Document>
        <Document ID="797">
            <Title>cast_nat8_int64</Title>
        </Document>
        <Document ID="4394">
            <Title>Synopsis</Title>
            <Text>int32_t 
(*modern_node_representation_int32_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2290">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_nat64 = 1230</Text>
        </Document>
        <Document ID="1250">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4418">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_field_value_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="798">
            <Title>cast_nat8_nat16</Title>
        </Document>
        <Document ID="2314">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_nat8 = 1256</Text>
        </Document>
        <Document ID="2698">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1658">
            <Title>Semantics</Title>
        </Document>
        <Document ID="799">
            <Title>cast_nat8_nat32</Title>
        </Document>
        <Document ID="550">
            <Title>hyperbolic_sine_float64</Title>
        </Document>
        <Document ID="3700">
            <Title>Synopsis</Title>
            <Text>shift_left_nat8 = 1444

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="551">
            <Title>hyperbolic_cosine_float32</Title>
        </Document>
        <Document ID="2291">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4419">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2315">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4395">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1980">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_int16 = 193</Text>
        </Document>
        <Document ID="2699">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_int16_nat64 = 10253</Text>
        </Document>
        <Document ID="1659">
            <Title>Parameters</Title>
        </Document>
        <Document ID="552">
            <Title>hyperbolic_cosine_float64</Title>
        </Document>
        <Document ID="4012">
            <Title>Synopsis</Title>
            <Text>cast_int16_int32 = 10248

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4396">
            <Title>Synopsis</Title>
            <Text>int64_t 
(*modern_node_representation_int64_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2292">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_nat64 = 1231</Text>
        </Document>
        <Document ID="553">
            <Title>hyperbolic_tangent_float32</Title>
        </Document>
        <Document ID="2316">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_nat8 = 1257</Text>
        </Document>
        <Document ID="3356">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_nat64 = 1198

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1981">
            <Title>Semantics</Title>
        </Document>
        <Document ID="554">
            <Title>hyperbolic_tangent_float64</Title>
        </Document>
        <Document ID="4397">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2293">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1253">
            <Title>Predefined</Title>
        </Document>
        <Document ID="555">
            <Title>hyperbolic_arcsine_float32</Title>
        </Document>
        <Document ID="2317">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1982">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_int32 = 194</Text>
        </Document>
        <Document ID="556">
            <Title>hyperbolic_arcsine_float64</Title>
        </Document>
        <Document ID="3703">
            <Title>Synopsis</Title>
            <Text>shift_left_nat16 = 1445

Value type (abstract notation)
nat16 -> nat8 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4398">
            <Title>Synopsis</Title>
            <Text>uint8_t 
(*modern_node_representation_nat8_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2294">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_float32 = 1232</Text>
        </Document>
        <Document ID="1254">
            <Title>modern_node_default_make</Title>
        </Document>
        <Document ID="557">
            <Title>hyperbolic_arccosine_float32</Title>
        </Document>
        <Document ID="2318">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_nat16 = 1258</Text>
        </Document>
        <Document ID="1983">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4015">
            <Title>Synopsis</Title>
            <Text>cast_int16_int64 = 10249

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2640">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_from_maybe = 2624</Text>
        </Document>
        <Document ID="1600">
            <Title>Semantics</Title>
        </Document>
        <Document ID="558">
            <Title>hyperbolic_arccosine_float64</Title>
        </Document>
        <Document ID="4399">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2295">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1255">
            <Title>Synopsis</Title>
            <Text>struct modern_node *
modern_node_default_make
(struct modern_allocator *allocator,
 void *client_state);</Text>
        </Document>
        <Document ID="310">
            <Title>modern_stream_let_is_next</Title>
        </Document>
        <Document ID="559">
            <Title>hyperbolic_arctangent_float32</Title>
        </Document>
        <Document ID="2319">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3359">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_nat64 = 1199

Value type (abstract notation)
float64 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1984">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_int64 = 195</Text>
        </Document>
        <Document ID="3681">
            <Title>Synopsis</Title>
            <Text>maximum_bound_nat32 = 1414

Value type (abstract notation)
nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2641">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1601">
            <Title>Parameters</Title>
        </Document>
        <Document ID="311">
            <Title>modern_stream_backreference_is_next</Title>
        </Document>
        <Document ID="2296">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_float64 = 1233</Text>
        </Document>
        <Document ID="1256">
            <Title>Parameters</Title>
        </Document>
        <Document ID="312">
            <Title>modern_stream_builtin_is_next</Title>
        </Document>
        <Document ID="1985">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2642">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_maybe_type_content_type = 2528</Text>
        </Document>
        <Document ID="1602">
            <Title>Semantics</Title>
        </Document>
        <Document ID="313">
            <Title>modern_node_type_function_type</Title>
        </Document>
        <Document ID="3706">
            <Title>Synopsis</Title>
            <Text>shift_left_nat32 = 1456

Value type (abstract notation)
nat32 -> nat8 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2297">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1257">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1986">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_nat8 = 196</Text>
        </Document>
        <Document ID="314">
            <Title>modern_node_type_type_family</Title>
        </Document>
        <Document ID="4018">
            <Title>Synopsis</Title>
            <Text>cast_int16_nat8 = 10250

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2643">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1603">
            <Title>Parameters</Title>
        </Document>
        <Document ID="315">
            <Title>modern_node_type_let</Title>
        </Document>
        <Document ID="2298">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_int8 = 1248</Text>
        </Document>
        <Document ID="1258">
            <Title>Overview</Title>
            <Text>The node-based object model is an abstraction which presents a view on a Modern Data document and schema allowing them to be navigated by traversing links from containers to their contents, and from values to their types.  Users familiar with the HTML document-object model (DOM) will be at home here; the major difference to note is that in Modern Data, nodes comprise an arbitrary directed graph rather than a strict tree.  That is, a node may be shared among multiple parents, and cyclic structures are possible.  Also, because of the tree structure, in the DOM it makes sense to navigate from a node to its sole parent; in Modern Data, it does not, so this navigation is not possible.

Ordinarily one will use the system-provided implementation of nodes; a structure containing pointers to the necessary callback functions can be obtained by a one-time call to modern_node_default_make().  Nodes themselves are then represented as void pointers, and created, inspected, and mutated using these callbacks.

It is also possible to provide one’s own implementation of nodes.  This is appropriate, for example, when authoring a binding to a new programming language and wishing to use that language’s native data structures to represent node values, without the memory-management complications of wrapping them around C objects.  To do this one “merely” needs to implement the hundred or so callbacks in the modern_node structure.  It is a nontrivial undertaking, but it is expected that it only needs to be done once for any given programming language.</Text>
        </Document>
        <Document ID="1987">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4340">
            <Title>modern_node_representation_backreference_make </Title>
        </Document>
        <Document ID="316">
            <Title>modern_node_type_backreference</Title>
        </Document>
        <Document ID="3684">
            <Title>Synopsis</Title>
            <Text>maximum_bound_nat64 = 1415

Value type (abstract notation)
nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1580">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1604">
            <Title>Semantics</Title>
        </Document>
        <Document ID="317">
            <Title>modern_node_type_builtin</Title>
        </Document>
        <Document ID="2299">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1259">
            <Title>modern_error_handler_usage</Title>
        </Document>
        <Document ID="1988">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_add_nat16 = 197</Text>
        </Document>
        <Document ID="4341">
            <Title>modern_node_representation_builtin_make </Title>
        </Document>
        <Document ID="3301">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arccosine_float32 = 1120

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="318">
            <Title>Builtin identifiers</Title>
        </Document>
        <Document ID="2645">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_function_type_left = 2080</Text>
        </Document>
        <Document ID="1605">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1581">
            <Title>Parameters</Title>
        </Document>
        <Document ID="319">
            <Title>if_bool</Title>
        </Document>
        <Document ID="3709">
            <Title>Synopsis</Title>
            <Text>shift_left_nat64 = 1457

Value type (abstract notation)
nat64 -> nat8 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1989">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4342">
            <Title>modern_node_representation_immutable_set </Title>
        </Document>
        <Document ID="800">
            <Title>cast_nat8_nat64</Title>
        </Document>
        <Document ID="2646">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1606">
            <Title>Semantics</Title>
        </Document>
        <Document ID="801">
            <Title>cast_nat16_int8</Title>
        </Document>
        <Document ID="1582">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4343">
            <Title>modern_node_representation_canonical_hash_set </Title>
        </Document>
        <Document ID="802">
            <Title>cast_nat16_int16</Title>
        </Document>
        <Document ID="2647">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_function_type_right = 2112</Text>
        </Document>
        <Document ID="1607">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1583">
            <Title>Parameters</Title>
        </Document>
        <Document ID="803">
            <Title>cast_nat16_int32</Title>
        </Document>
        <Document ID="3280">
            <Title>Synopsis</Title>
            <Text>hyperbolic_sine_float64 = 993

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2240">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_int64 = 1191</Text>
        </Document>
        <Document ID="1200">
            <Title>Semantics</Title>
        </Document>
        <Document ID="804">
            <Title>cast_nat16_int64</Title>
        </Document>
        <Document ID="3304">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arccosine_float64 = 1121

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4344">
            <Title>modern_node_representation_maybe_just_content_set </Title>
        </Document>
        <Document ID="3688">
            <Title>Synopsis</Title>
            <Text>shift_left_int8 = 1440

Value type (abstract notation)
int8 -> nat8 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2648">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1608">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1584">
            <Title>Semantics</Title>
        </Document>
        <Document ID="805">
            <Title>cast_nat16_nat8</Title>
        </Document>
        <Document ID="4345">
            <Title>modern_node_representation_int8_set </Title>
        </Document>
        <Document ID="2241">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1201">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1930">
            <Title>Semantics</Title>
        </Document>
        <Document ID="806">
            <Title>cast_nat16_nat32</Title>
        </Document>
        <Document ID="2649">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_sigma_type_field_type = 2144</Text>
        </Document>
        <Document ID="1609">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1585">
            <Title>Parameters</Title>
        </Document>
        <Document ID="807">
            <Title>cast_nat16_nat64</Title>
        </Document>
        <Document ID="4346">
            <Title>modern_node_representation_int16_set </Title>
        </Document>
        <Document ID="2242">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_nat8 = 1192</Text>
        </Document>
        <Document ID="1202">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1931">
            <Title>Synopsis</Title>
            <Text>equal_to_int16 = 130</Text>
        </Document>
        <Document ID="808">
            <Title>cast_nat32_int8</Title>
        </Document>
        <Document ID="1586">
            <Title>Semantics</Title>
        </Document>
        <Document ID="270">
            <Title>Error handlers</Title>
        </Document>
        <Document ID="809">
            <Title>cast_nat32_int16</Title>
        </Document>
        <Document ID="3283">
            <Title>Synopsis</Title>
            <Text>hyperbolic_cosine_float32 = 1024

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2243">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1203">
            <Title>Semantics</Title>
        </Document>
        <Document ID="271">
            <Title>modern_error_handler_memory</Title>
        </Document>
        <Document ID="3307">
            <Title>Synopsis</Title>
            <Text>hyperbolic_arctangent_float32 = 1152

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4347">
            <Title>modern_node_representation_int32_set </Title>
        </Document>
        <Document ID="1932">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2972">
            <Title>Synopsis</Title>
            <Text>add_float64 = 201

Value type (abstract notation)
float64 -> float64 -> maybe float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1587">
            <Title>Parameters</Title>
        </Document>
        <Document ID="30">
            <Title>modern_stream_type_definition_utf8</Title>
        </Document>
        <Document ID="272">
            <Title>modern_error_handler_retain_count_overflow</Title>
        </Document>
        <Document ID="31">
            <Title>modern_stream_type_definition_blob</Title>
        </Document>
        <Document ID="4348">
            <Title>modern_node_representation_int64_set </Title>
        </Document>
        <Document ID="2244">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_nat8 = 1193</Text>
        </Document>
        <Document ID="1204">
            <Title>Semantics</Title>
        </Document>
        <Document ID="32">
            <Title>modern_stream_type_definition_function_is_next</Title>
        </Document>
        <Document ID="273">
            <Title>modern_error_handler_retain_count_underflow</Title>
        </Document>
        <Document ID="1180">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat16_type = 31</Text>
        </Document>
        <Document ID="1933">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_int32 = 131</Text>
        </Document>
        <Document ID="33">
            <Title>modern_stream_type_definition_sigma_is_next</Title>
        </Document>
        <Document ID="1588">
            <Title>Parameters</Title>
        </Document>
        <Document ID="274">
            <Title>modern_error_handler_double_autorelease</Title>
        </Document>
        <Document ID="34">
            <Title>modern_stream_type_definition_named_is_next</Title>
        </Document>
        <Document ID="4349">
            <Title>modern_node_representation_nat8_set </Title>
        </Document>
        <Document ID="2245">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1205">
            <Title>Semantics</Title>
        </Document>
        <Document ID="35">
            <Title>modern_stream_type_definition_universe</Title>
        </Document>
        <Document ID="1181">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat32_type = 32</Text>
        </Document>
        <Document ID="275">
            <Title>modern_error_handler_type_mismatch</Title>
        </Document>
        <Document ID="1934">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1589">
            <Title>Semantics</Title>
        </Document>
        <Document ID="37">
            <Title>modern_stream_int8</Title>
        </Document>
        <Document ID="38">
            <Title>modern_stream_int16</Title>
        </Document>
        <Document ID="3286">
            <Title>Synopsis</Title>
            <Text>hyperbolic_cosine_float64 = 1025

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2246">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float32_nat16 = 1194</Text>
        </Document>
        <Document ID="1206">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1182">
            <Title>Synopsis</Title>
            <Text>modern_node_type_nat64_type = 33</Text>
        </Document>
        <Document ID="39">
            <Title>modern_stream_int32</Title>
        </Document>
        <Document ID="1935">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_int64 = 132</Text>
        </Document>
        <Document ID="2975">
            <Title>Synopsis</Title>
            <Text>subtract_int8 = 224

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3632">
            <Title>Synopsis</Title>
            <Text>floor_float32_float32 = 1360

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="278">
            <Title>modern_node_named_value_get</Title>
        </Document>
        <Document ID="2247">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1207">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1183">
            <Title>Synopsis</Title>
            <Text>modern_node_type_float32_type = 34</Text>
        </Document>
        <Document ID="1936">
            <Title>Semantics</Title>
        </Document>
        <Document ID="760">
            <Title>make_name</Title>
        </Document>
        <Document ID="2248">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_nat16 = 1195</Text>
        </Document>
        <Document ID="1208">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1184">
            <Title>Synopsis</Title>
            <Text>modern_node_type_float64_type = 35</Text>
        </Document>
        <Document ID="1937">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_nat8 = 133</Text>
        </Document>
        <Document ID="761">
            <Title>make_named_value</Title>
        </Document>
        <Document ID="2570">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_or_nat64 = 1607</Text>
        </Document>
        <Document ID="1530">
            <Title>Semantics</Title>
        </Document>
        <Document ID="762">
            <Title>make_function_type</Title>
        </Document>
        <Document ID="3289">
            <Title>Synopsis</Title>
            <Text>hyperbolic_tangent_float32 = 1056

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2249">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1209">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1185">
            <Title>Synopsis</Title>
            <Text>modern_node_type_utf8_type = 36</Text>
        </Document>
        <Document ID="1938">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2978">
            <Title>Synopsis</Title>
            <Text>subtract_int16 = 225

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="763">
            <Title>make_sigma_type</Title>
        </Document>
        <Document ID="3635">
            <Title>Synopsis</Title>
            <Text>floor_float64_float64 = 1361

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1531">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2571">
            <Title>Semantics</Title>
        </Document>
        <Document ID="764">
            <Title>make_named_type</Title>
        </Document>
        <Document ID="1186">
            <Title>Synopsis</Title>
            <Text>modern_node_type_blob_type = 37</Text>
        </Document>
        <Document ID="1939">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_nat16 = 134</Text>
        </Document>
        <Document ID="765">
            <Title>make_universe_type</Title>
        </Document>
        <Document ID="2572">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_int8 = 1632</Text>
        </Document>
        <Document ID="1532">
            <Title>Semantics</Title>
        </Document>
        <Document ID="766">
            <Title>cast_int8_int16</Title>
        </Document>
        <Document ID="1187">
            <Title>Synopsis</Title>
            <Text>modern_node_type_function_type = 38</Text>
        </Document>
        <Document ID="767">
            <Title>cast_int8_int32</Title>
        </Document>
        <Document ID="2573">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1533">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1188">
            <Title>Synopsis</Title>
            <Text>modern_node_type_sigma_type = 39</Text>
        </Document>
        <Document ID="768">
            <Title>cast_int8_int64</Title>
        </Document>
        <Document ID="4270">
            <Title>modern_node_representation_blob_bytes_get </Title>
        </Document>
        <Document ID="520">
            <Title>sign_float64</Title>
        </Document>
        <Document ID="769">
            <Title>cast_int8_nat8</Title>
        </Document>
        <Document ID="2574">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_int16 = 1633</Text>
        </Document>
        <Document ID="1534">
            <Title>Semantics</Title>
        </Document>
        <Document ID="521">
            <Title>pi_float32</Title>
        </Document>
        <Document ID="1189">
            <Title>Synopsis</Title>
            <Text>modern_node_type_name_type = 40</Text>
        </Document>
        <Document ID="4271">
            <Title>modern_node_representation_blob_data_piece_get </Title>
        </Document>
        <Document ID="3231">
            <Title>Synopsis</Title>
            <Text>logarithm_base_x_float64 = 737

Value type (abstract notation)
float64 -> float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2920">
            <Title>Synopsis</Title>
            <Text>compare_int32 = 162

Value type (abstract notation)
int32 -> int32 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3960">
            <Title>Synopsis</Title>
            <Text>get_universe_type_level = 2240

Value type (abstract notation)
universe 0 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="522">
            <Title>pi_float64</Title>
        </Document>
        <Document ID="3639">
            <Title>Synopsis</Title>
            <Text>minimum_bound_int8 = 1376

Value type (abstract notation)
int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1535">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2575">
            <Title>Semantics</Title>
        </Document>
        <Document ID="523">
            <Title>square_root_float32</Title>
        </Document>
        <Document ID="4272">
            <Title>modern_node_representation_sigma_field_value_get </Title>
        </Document>
        <Document ID="524">
            <Title>square_root_float64</Title>
        </Document>
        <Document ID="2576">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_int32 = 1634</Text>
        </Document>
        <Document ID="1536">
            <Title>Semantics</Title>
        </Document>
        <Document ID="525">
            <Title>natural_logarithm_float32</Title>
        </Document>
        <Document ID="4273">
            <Title>modern_node_representation_sigma_successor_get </Title>
        </Document>
        <Document ID="526">
            <Title>natural_logarithm_float64</Title>
        </Document>
        <Document ID="1537">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2577">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4274">
            <Title>modern_node_representation_name_value_hash_get </Title>
        </Document>
        <Document ID="527">
            <Title>e_to_the_x_float32</Title>
        </Document>
        <Document ID="2923">
            <Title>Synopsis</Title>
            <Text>compare_int64 = 163

Value type (abstract notation)
int64 -> int64 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1130">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2170">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_logarithm_base_x_float32 = 736</Text>
        </Document>
        <Document ID="3963">
            <Title>Synopsis</Title>
            <Synopsis>TODO this function probably comes out, doesn’t it?</Synopsis>
            <Text>make_sigma = 2272

Value type (abstract notation)
(a : universe 0)
-> (b : a -> universe 0)
-> universe 0
TODO this probably comes out, doesn’t it?

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2578">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_xor_int64 = 1635</Text>
        </Document>
        <Document ID="528">
            <Title>e_to_the_x_float64</Title>
        </Document>
        <Document ID="1538">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4620">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_let_item_remove)
(modern_library *library,
 void *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="4275">
            <Title>modern_node_representation_named_value_get </Title>
        </Document>
        <Document ID="3235">
            <Title>Synopsis</Title>
            <Text>sine_float32 = 768

Value type (abstract notation)
float32 -> float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1860">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1131">
            <Title>Synopsis</Title>
            <Text>void *
modern_vfile_memory_allocating_initialize
(modern_library *library);</Text>
        </Document>
        <Document ID="529">
            <Title>two_to_the_x_float32</Title>
        </Document>
        <Document ID="2171">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2579">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1539">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4621">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4276">
            <Title>modern_node_representation_maybe_type_content_type_get</Title>
        </Document>
        <Document ID="2172">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_logarithm_base_x_float64 = 737</Text>
        </Document>
        <Document ID="1861">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1132">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4622">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_let_content_set)
(modern_library *library,
 void *value,
 void *content);</Text>
        </Document>
        <Document ID="4277">
            <Title>modern_node_representation_function_type_left_get </Title>
        </Document>
        <Document ID="2173">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2926">
            <Title>Synopsis</Title>
            <Text>compare_nat8 = 164

Value type (abstract notation)
nat8 -> nat8 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1862">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1133">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3966">
            <Title>Synopsis</Title>
            <Synopsis>TODO what does this function do?</Synopsis>
            <Text>make_name = 2304

Value type (abstract notation)
universe 0 -> maybe (universe 0) TODO … ???

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4623">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4278">
            <Title>modern_node_representation_function_type_right_get </Title>
        </Document>
        <Document ID="3238">
            <Title>Synopsis</Title>
            <Text>sine_float64 = 769

Value type (abstract notation)
float64 -> float64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1863">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1134">
            <Title>Synopsis</Title>
            <Text>struct modern_vfile *
modern_vfile_memory_allocating_make
(modern_library *library);</Text>
        </Document>
        <Document ID="2174">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sine_float32 = 768</Text>
        </Document>
        <Document ID="3560">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_nat16 = 1322

Value type (abstract notation)
float32 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4624">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_backreference_index_set)
(modern_library *library,
 void *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="2520">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_nat32 = 1510</Text>
        </Document>
        <Document ID="4279">
            <Title>modern_node_representation_sigma_type_field_type_get </Title>
        </Document>
        <Document ID="2175">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1864">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1135">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4625">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2521">
            <Title>Semantics</Title>
        </Document>
        <Document ID="480">
            <Title>divide_towards_negative_infinity_int64</Title>
        </Document>
        <Document ID="2929">
            <Title>Synopsis</Title>
            <Text>compare_nat16 = 165

Value type (abstract notation)
nat16 -> nat16 -> ordering

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1865">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1136">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2176">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_sine_float64 = 769</Text>
        </Document>
        <Document ID="3969">
            <Title>Synopsis</Title>
            <Text>make_maybe_type = 2496

Value type (abstract notation)
universe 0 -> universe 0

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4626">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_builtin_identifier_set)
(modern_library *library,
 void *value,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="2522">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_left_nat64 = 1511</Text>
        </Document>
        <Document ID="2177">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1866">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1137">
            <Title>Synopsis</Title>
            <Text>void
modern_vfile_memory_buffer_finalize
(modern_library *library,
 void *vfile_state);</Text>
        </Document>
        <Document ID="3563">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_nat16 = 1323

Value type (abstract notation)
float64 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4627">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2523">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2178">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cosine_float32 = 800</Text>
        </Document>
        <Document ID="1867">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1138">
            <Title>Parameters</Title>
        </Document>
        <Document ID="90">
            <Title>modern_node_type_nat64_type</Title>
        </Document>
        <Document ID="4628">
            <Title>RFC 3629 (UTF-8)</Title>
        </Document>
        <Document ID="485">
            <Title>divide_float32</Title>
        </Document>
        <Document ID="1460">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_nat64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint64_t value);</Text>
        </Document>
        <Document ID="91">
            <Title>modern_node_type_float32_type</Title>
        </Document>
        <Document ID="2524">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_int8 = 1536</Text>
        </Document>
        <Document ID="2179">
            <Title>Semantics</Title>
        </Document>
        <Document ID="92">
            <Title>modern_node_type_float64_type</Title>
        </Document>
        <Document ID="1868">
            <Title>Parameters</Title>
        </Document>
        <Document ID="486">
            <Title>divide_float64</Title>
        </Document>
        <Document ID="1139">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4629">
            <Title>Untitled</Title>
        </Document>
        <Document ID="94">
            <Title>modern_node_type_utf8_type</Title>
        </Document>
        <Document ID="487">
            <Title>modulus_towards_zero_int8</Title>
        </Document>
        <Document ID="1461">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_float32)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 float value);</Text>
        </Document>
        <Document ID="2525">
            <Title>Semantics</Title>
        </Document>
        <Document ID="95">
            <Title>modern_node_type_blob_type</Title>
        </Document>
        <Document ID="1869">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4222">
            <Title>Synopsis</Title>
            <Text>cast_nat32_blob = 10318

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="96">
            <Title>modern_node_type_sigma_type</Title>
        </Document>
        <Document ID="488">
            <Title>modulus_towards_zero_int16</Title>
        </Document>
        <Document ID="3911">
            <Title>Synopsis</Title>
            <Text>replace_data_piece_blob = 1921

Value type (abstract notation)
blob -> nat64 -> nat64 -> blob -> maybe blob

Value type (detailed notation)</Text>
        </Document>
        <Document ID="97">
            <Title>modern_node_type_named_type</Title>
        </Document>
        <Document ID="3566">
            <Title>Synopsis</Title>
            <Text>ceiling_float32_nat32 = 1324

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1462">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_float64)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 double value);</Text>
        </Document>
        <Document ID="2526">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_int16 = 1537</Text>
        </Document>
        <Document ID="489">
            <Title>modulus_towards_zero_int32</Title>
        </Document>
        <Document ID="98">
            <Title>modern_node_type_universe_type</Title>
        </Document>
        <Document ID="99">
            <Title>modern_node_type_lambda</Title>
        </Document>
        <Document ID="970">
            <Title>modern_processor_finalize</Title>
        </Document>
        <Document ID="1463">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_utf8_start)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="971">
            <Title>modern_processor_input_make</Title>
        </Document>
        <Document ID="2527">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2120">
            <Title>Semantics</Title>
        </Document>
        <Document ID="972">
            <Title>Predefined</Title>
        </Document>
        <Document ID="243">
            <Title>Predefined</Title>
        </Document>
        <Document ID="1464">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_utf8_data)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint8_t *data,
 size_t length);</Text>
        </Document>
        <Document ID="2528">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_rotate_right_int32 = 1538</Text>
        </Document>
        <Document ID="973">
            <Title>Virtual files</Title>
        </Document>
        <Document ID="244">
            <Title>modern_stream_explicatory_make</Title>
        </Document>
        <Document ID="3161">
            <Title>Synopsis</Title>
            <Text>absolute_value_int32 = 482

Value type (abstract notation)
int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2121">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_int8 = 480</Text>
        </Document>
        <Document ID="974">
            <Title>Processors</Title>
        </Document>
        <Document ID="245">
            <Title>modern_stream_documentation_make</Title>
        </Document>
        <Document ID="1810">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3890">
            <Title>Synopsis</Title>
            <Text>length_bytes_utf8 = 1792

Value type (abstract notation)
utf8 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3914">
            <Title>Synopsis</Title>
            <Text>empty_utf8 = 1952

Value type (abstract notation)
utf8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3569">
            <Title>Synopsis</Title>
            <Text>ceiling_float64_nat32 = 1325

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1465">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_utf8_end)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="2529">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4225">
            <Title>Synopsis</Title>
            <Text>cast_nat64_blob = 10319

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="975">
            <Title>Streams</Title>
        </Document>
        <Document ID="2122">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1811">
            <Title>Semantics</Title>
        </Document>
        <Document ID="976">
            <Title>modern_processor_step</Title>
        </Document>
        <Document ID="1466">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_blob_start)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="977">
            <Title>modern_processor_run</Title>
        </Document>
        <Document ID="248">
            <Title>modern_allocator_alloc</Title>
        </Document>
        <Document ID="2123">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_int16 = 481</Text>
        </Document>
        <Document ID="1812">
            <Title>Parameters</Title>
        </Document>
        <Document ID="978">
            <Title>General</Title>
        </Document>
        <Document ID="249">
            <Title>modern_allocator_free</Title>
        </Document>
        <Document ID="1467">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_blob_data)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 uint8_t *data,
 size_t length);</Text>
        </Document>
        <Document ID="730">
            <Title>bit_not_int16</Title>
        </Document>
        <Document ID="979">
            <Title>Hashing</Title>
        </Document>
        <Document ID="3164">
            <Title>Synopsis</Title>
            <Text>absolute_value_int64 = 483

Value type (abstract notation)
int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2124">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1060">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1813">
            <Title>Semantics</Title>
        </Document>
        <Document ID="731">
            <Title>bit_not_int32</Title>
        </Document>
        <Document ID="3893">
            <Title>Synopsis</Title>
            <Text>length_bytes_blob = 1793

Value type (abstract notation)
blob -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3917">
            <Title>Synopsis</Title>
            <Text>empty_blob = 1953

Value type (abstract notation)
blob

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4228">
            <Title>Synopsis</Title>
            <Text>cast_float32_blob = 10320

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1468">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_blob_end)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state);</Text>
        </Document>
        <Document ID="4550">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_type_family_make)
(modern_library *library,
 uint64_t n_items, void **types);</Text>
        </Document>
        <Document ID="732">
            <Title>bit_not_int64</Title>
        </Document>
        <Document ID="2125">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_int32 = 482</Text>
        </Document>
        <Document ID="1790">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1061">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_allocator_realloc)
(void *client_state,
 void *memory,
 size_t size);</Text>
        </Document>
        <Document ID="1814">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2854">
            <Title>Synopsis</Title>
            <Text>if_bool = 0

Value type (abstract notation)
a : universe 0 -> bool -> a -> a -> a

Value type
(lambda
  (function
    (backreference 0)
    (function
      bool
      (function
        (backreference 0)
        (Backreference 0)))))</Text>
        </Document>
        <Document ID="733">
            <Title>bit_not_nat8</Title>
        </Document>
        <Document ID="1469">
            <Title>Synopsis</Title>
            <Text>void
(*modern_stream_sigma_is_next)
(struct modern_processor *processor,
 void *processor_state,
 void *stream_state,
 struct modern_hash *type);</Text>
        </Document>
        <Document ID="4551">
            <Title>Semantics</Title>
        </Document>
        <Document ID="734">
            <Title>bit_not_nat16</Title>
        </Document>
        <Document ID="2126">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1791">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1062">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1815">
            <Title>Semantics</Title>
        </Document>
        <Document ID="735">
            <Title>bit_not_nat32</Title>
        </Document>
        <Document ID="4552">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_let_make)
(modern_library *library,
 uint64_t n_items, void **values, void *content);</Text>
        </Document>
        <Document ID="3512">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_nat32 = 1292

Value type (abstract notation)
float32 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="736">
            <Title>bit_not_nat64</Title>
        </Document>
        <Document ID="3167">
            <Title>Synopsis</Title>
            <Text>absolute_value_float32 = 484

Value type (abstract notation)
float32 -> maybe float32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2127">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_int64 = 483</Text>
        </Document>
        <Document ID="1792">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1063">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1816">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3896">
            <Title>Synopsis</Title>
            <Text>get_byte_blob = 1824

Value type (abstract notation)
blob -> nat64 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="737">
            <Title>decode_utf8</Title>
        </Document>
        <Document ID="4553">
            <Title>Semantics</Title>
        </Document>
        <Document ID="738">
            <Title>encode_utf8</Title>
        </Document>
        <Document ID="2128">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1793">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1064">
            <Title>Synopsis</Title>
            <Text>void
(*modern_allocator_free)
(void *client_state,
 void *memory);</Text>
        </Document>
        <Document ID="1817">
            <Title>Semantics</Title>
        </Document>
        <Document ID="739">
            <Title>character_offset_to_byte_offset_utf8</Title>
        </Document>
        <Document ID="4554">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_backreference_make)
(modern_library *library,
 uint64_t index);</Text>
        </Document>
        <Document ID="2450">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1410">
            <Title>Synopsis</Title>
            <Text>void
modern_serialize_fd
(modern_library *library,
 modern *value,
 modern_context *context,
 int fd);</Text>
        </Document>
        <Document ID="2129">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_absolute_value_float32 = 484</Text>
        </Document>
        <Document ID="1794">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1065">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1818">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2858">
            <Title>Synopsis</Title>
            <Text>and_bool = 32

Value type (abstract notation)
bool -> bool -> bool

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4555">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3515">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_nat32 = 1293

Value type (abstract notation)
float64 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1411">
            <Title>Synopsis</Title>
            <Text>void
modern_serialize_vfile
(modern_library *library,
 modern *value,
 modern_context *context,
 struct modern_vfile *vfile,
 void *vfile_state);</Text>
        </Document>
        <Document ID="2451">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_nat8 = 1380</Text>
        </Document>
        <Document ID="3491">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_int32 = 1285

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3899">
            <Title>Synopsis</Title>
            <Text>replace_byte_blob = 1856

Value type (abstract notation)
blob -> nat64 -> nat8 -> maybe blob

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1795">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1066">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1819">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4556">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_builtin_make)
(modern_library *library,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="2452">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1412">
            <Title>Synopsis</Title>
            <Text>modern *
modern_serialize_output_stream
(modern_library *library,
 modern *value,
 modern_context *context,
 struct modern_stream *stream);</Text>
        </Document>
        <Document ID="1796">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1067">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_allocator_alloc)
(void *client_state,
 size_t size);</Text>
        </Document>
        <Document ID="4557">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2453">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_nat16 = 1381</Text>
        </Document>
        <Document ID="1413">
            <Title>Synopsis</Title>
            <Text>struct modern_processor {
    …
};</Text>
        </Document>
        <Document ID="1797">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1068">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4150">
            <Title>Synopsis</Title>
            <Text>cast_nat64_nat16 = 10294

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3110">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_nat64 = 391

Value type (abstract notation)
nat64 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4558">
            <Title>Synopsis</Title>
            <Text>void 
(*modern_node_representation_immutable_set)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="1390">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_backreference_index_set)
(modern_library *library,
 modern *value,
 uint64_t index);</Text>
        </Document>
        <Document ID="3518">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_nat64 = 1294

Value type (abstract notation)
float32 -> nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1414">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_processor_initialize)
();</Text>
        </Document>
        <Document ID="2454">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3494">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float32_int64 = 1286

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1798">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1069">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2800">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_int16 = 10303</Text>
        </Document>
        <Document ID="690">
            <Title>rotate_left_int16</Title>
        </Document>
        <Document ID="4559">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1391">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_builtin_identifier_set)
(modern_library *library,
 modern *value,
 uint16_t identifier);</Text>
        </Document>
        <Document ID="1415">
            <Title>Synopsis</Title>
            <Text>void
(*modern_processor_finalize)
(void *processor_state);</Text>
        </Document>
        <Document ID="2455">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_nat32 = 1382</Text>
        </Document>
        <Document ID="691">
            <Title>rotate_left_int32</Title>
        </Document>
        <Document ID="1799">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3841">
            <Title>Synopsis</Title>
            <Text>bit_xor_int64 = 1635

Value type (abstract notation)
int64 -> int64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2801">
            <Title>Semantics</Title>
        </Document>
        <Document ID="692">
            <Title>rotate_left_int64</Title>
        </Document>
        <Document ID="1392">
            <Title>Synopsis</Title>
            <Text>int
modern_node_canonical_hash_compute
(modern_library *library,
 modern *value,
 struct modern_hash *out);</Text>
        </Document>
        <Document ID="1416">
            <Title>Synopsis</Title>
            <Text>void
(*modern_processor_step)
(void *processor_state,
 struct modern_stream *stream,
 void *stream_state,
 struct modern_vfile *vfile,
 void *vfile_state);</Text>
        </Document>
        <Document ID="2456">
            <Title>Semantics</Title>
        </Document>
        <Document ID="693">
            <Title>rotate_left_nat8</Title>
        </Document>
        <Document ID="4153">
            <Title>Synopsis</Title>
            <Text>cast_nat64_nat32 = 10295

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3113">
            <Title>Synopsis</Title>
            <Text>modulus_towards_negative_infinity_int8 = 416

Value type (abstract notation)
int8 -> int8 -> maybe int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2802">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_int32 = 10304</Text>
        </Document>
        <Document ID="694">
            <Title>rotate_left_nat16</Title>
        </Document>
        <Document ID="3497">
            <Title>Synopsis</Title>
            <Text>round_towards_odd_float64_int64 = 1287

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1393">
            <Title>Synopsis</Title>
            <Text>typedef void modern_context;</Text>
        </Document>
        <Document ID="1417">
            <Title>Synopsis</Title>
            <Text>void
(*modern_processor_run)
(void *processor_state,
 struct modern_stream *stream,
 void *stream_state,
 struct modern_vfile *vfile,
 void *vfile_state);</Text>
        </Document>
        <Document ID="2457">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_minimum_bound_nat64 = 1383</Text>
        </Document>
        <Document ID="695">
            <Title>rotate_left_nat32</Title>
        </Document>
        <Document ID="2050">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2803">
            <Title>Semantics</Title>
        </Document>
        <Document ID="696">
            <Title>rotate_left_nat64</Title>
        </Document>
        <Document ID="1394">
            <Title>Synopsis</Title>
            <Text>modern_context *
modern_initial_context_make
(modern_library *library);</Text>
        </Document>
        <Document ID="1418">
            <Title>Synopsis</Title>
            <Text>void
(*modern_processor_abort)
(void *processor_state);</Text>
        </Document>
        <Document ID="2458">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4500">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_make)
(modern_library *library,
 void *type, void *field_value, void *successor_value);</Text>
        </Document>
        <Document ID="697">
            <Title>rotate_right_int8</Title>
        </Document>
        <Document ID="2051">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_nat32 = 294</Text>
        </Document>
        <Document ID="1740">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1011">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3844">
            <Title>Synopsis</Title>
            <Text>bit_xor_nat8 = 1636

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2780">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_nat8 = 10293</Text>
        </Document>
        <Document ID="2804">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_int64 = 10305</Text>
        </Document>
        <Document ID="1395">
            <Title>Synopsis</Title>
            <Text>modern_context *
modern_copy_context
(modern_library *library,
 modern_context *context);</Text>
        </Document>
        <Document ID="1419">
            <Title>Synopsis</Title>
            <Text>void (*modern_processor_flush)
  (void *processor_state);</Text>
        </Document>
        <Document ID="2459">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_maximum_bound_int8 = 1408</Text>
        </Document>
        <Document ID="4501">
            <Title>Semantics</Title>
        </Document>
        <Document ID="698">
            <Title>rotate_right_int16</Title>
        </Document>
        <Document ID="450">
            <Title>subtract_int16</Title>
        </Document>
        <Document ID="3092">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_int16 = 385

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3116">
            <Title>Synopsis</Title>
            <Text>modulus_towards_negative_infinity_int16 = 417

Value type (abstract notation)
int16 -> int16 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1741">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2052">
            <Title>Semantics</Title>
        </Document>
        <Document ID="699">
            <Title>rotate_right_int32</Title>
        </Document>
        <Document ID="2781">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4156">
            <Title>Synopsis</Title>
            <Text>cast_utf8_blob = 10296

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="451">
            <Title>subtract_int32</Title>
        </Document>
        <Document ID="1396">
            <Title>Synopsis</Title>
            <Text>int
modern_in_context_get
(modern_library *library,
 modern_context *context,
 modern *node);</Text>
        </Document>
        <Document ID="2805">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4502">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_name_value_make)
(modern_library *library,
 struct modern_hash name);</Text>
        </Document>
        <Document ID="452">
            <Title>subtract_int64</Title>
        </Document>
        <Document ID="2053">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_zero_nat64 = 295</Text>
        </Document>
        <Document ID="1742">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2782">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_nat16 = 10294</Text>
        </Document>
        <Document ID="2806">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_nat8 = 10306</Text>
        </Document>
        <Document ID="453">
            <Title>subtract_nat8</Title>
        </Document>
        <Document ID="4503">
            <Title>Semantics</Title>
        </Document>
        <Document ID="454">
            <Title>subtract_nat16</Title>
        </Document>
        <Document ID="2054">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1743">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3847">
            <Title>Synopsis</Title>
            <Text>bit_xor_nat16 = 1637

Value type (abstract notation)
nat16 -> nat16 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2783">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2807">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1398">
            <Title>Synopsis</Title>
            <Text>void
modern_to_context_add
(modern_library *library,
 modern_context *context,
 modern *node);</Text>
        </Document>
        <Document ID="455">
            <Title>subtract_nat32</Title>
        </Document>
        <Document ID="4480">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int32_make)
(modern_library *library,
 int32_t value);</Text>
        </Document>
        <Document ID="4504">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_named_value_make)
(modern_library *library,
 void *type, void *value);</Text>
        </Document>
        <Document ID="2400">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3440">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_int64 = 1254

Value type (abstract notation)
float32 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3095">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_int32 = 386

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="456">
            <Title>subtract_nat64</Title>
        </Document>
        <Document ID="3119">
            <Title>Synopsis</Title>
            <Text>modulus_towards_negative_infinity_int32 = 418

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1744">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2055">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_negative_infinity_int8 = 320</Text>
        </Document>
        <Document ID="2784">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat64_nat32 = 10295</Text>
        </Document>
        <Document ID="4159">
            <Title>Synopsis</Title>
            <Text>cast_blob_utf8 = 10297

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2808">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_nat16 = 10307</Text>
        </Document>
        <Document ID="1399">
            <Title>Synopsis</Title>
            <Text>modern *
modern_from_context_get
(modern_library *library,
 modern_context *context,
 struct modern_hash *hash);</Text>
        </Document>
        <Document ID="457">
            <Title>subtract_float32</Title>
        </Document>
        <Document ID="4505">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2401">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_nat64 = 1327</Text>
        </Document>
        <Document ID="4481">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2056">
            <Title>Semantics</Title>
        </Document>
        <Document ID="458">
            <Title>subtract_float64</Title>
        </Document>
        <Document ID="1745">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1016">
            <Title>Synopsis</Title>
            <Text>struct modern_error_handler *
modern_library_error_handler_get
(modern_library *library);</Text>
        </Document>
        <Document ID="2785">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2809">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4482">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_int64_make)
(modern_library *library,
 int64_t value);</Text>
        </Document>
        <Document ID="459">
            <Title>multiply_int8</Title>
        </Document>
        <Document ID="4506">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_bool_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2402">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2786">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_utf8_blob = 10296</Text>
        </Document>
        <Document ID="1746">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1017">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4483">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4507">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2403">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_float32 = 1328</Text>
        </Document>
        <Document ID="3443">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_int64 = 1255

Value type (abstract notation)
float64 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3098">
            <Title>Synopsis</Title>
            <Text>modulus_towards_zero_int64 = 387

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2058">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_divide_towards_negative_infinity_int16 = 321</Text>
        </Document>
        <Document ID="1747">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1018">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2787">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4484">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat8_make)
(modern_library *library,
 uint8_t value);</Text>
        </Document>
        <Document ID="2380">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1340">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="4508">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_ordering_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2404">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2059">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1748">
            <Title>Parameters</Title>
        </Document>
        <Document ID="215">
            <Title>modern_node_named_value_set</Title>
        </Document>
        <Document ID="1019">
            <Title>Synopsis</Title>
            <Text>struct modern_allocator *
modern_library_allocator_get
(modern_library *library);</Text>
        </Document>
        <Document ID="2788">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_blob_utf8 = 10297</Text>
        </Document>
        <Document ID="4485">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2381">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_int32 = 1317</Text>
        </Document>
        <Document ID="1341">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_nat64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="4509">
            <Title>Semantics</Title>
        </Document>
        <Document ID="945">
            <Title>modern_error_handler_builtin_identifier</Title>
        </Document>
        <Document ID="2405">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_float64 = 1329</Text>
        </Document>
        <Document ID="2789">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1749">
            <Title>Semantics</Title>
        </Document>
        <Document ID="946">
            <Title>modern_node_name_value_hash_get</Title>
        </Document>
        <Document ID="4102">
            <Title>Synopsis</Title>
            <Text>cast_nat16_int64 = 10278

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4486">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat16_make)
(modern_library *library,
 uint16_t value);</Text>
        </Document>
        <Document ID="2382">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1342">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_float32_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="947">
            <Title>Cyclic structures</Title>
            <Text>Cyclic structures, both at the type level and at the value level, can be created with inductive families and recursive lets - these two mechanisms are similar to each other, with the one being for types and the other for values.  The details of how this is done are left to a later chapter.  It is enough to know that the details of how these mechanisms are used do in fact become part of a modern node’s identity.  That is, they affect how types are canonicalized, which means that you have a different type if you insert the inductive family into the structure at a different place.  Canonicalization does not apply to values (except for values which are part of types), so the fact that the details of a recursive let also affect the node’s identity is not important in most situations.

It would be conceivable for nodes 
As with the scope issue, the node-based portion of the library hides the issue of flattening cyclic structures from the client code, while the stream-based portion exposes it and places the burden on the client.  However, this hiding cannot be complete, so it is important to be aware of its semantics.

Cycles will be automatically broken by introducing the appropriate constructs at the time that they need to be serialized, if they have not already been; cycle-breaking can also be introduced manually.  Thus users can build up cyclic structures through mutation and expect serialization and deserialization of them to “just work”, or they can use inductive families and recursive lets directly, and that will also work.

It’s worth noting in passing that it is bad style but technically possible in some situations to use an inductive family in defining values, and to use a recursive let in defining types.  This is not actually a necessary consequence of the ability to use types and values interchangeably in other situations, but it is certainly consistent with that design and makes more sense in that light.</Text>
        </Document>
        <Document ID="2406">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3446">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float32_nat8 = 1256

Value type (abstract notation)
float32 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="948">
            <Title>Mutation</Title>
            <Text>Although many functional languages are additionally "purely functional", meaning that their variables are immutable, nodes can be mutated in memory in some languages.  This is to make it easier to create cyclic structures, which could not otherwise be done in languages without recursive binding.  The semantics of mutation are that all references to the old node become references to the new node.  Mutation is possible on all nodes, with the provision that nodes being modified have never been in scope in any context.  In other words, once a node has become part of a schema of types and and thus potentially has extant nodes which are values of it, it can no longer be modified.  This is, of course, to avoid the scenario of a value node being inconsistent in structure with the type node that corresponds to it.  Naturally, it is always possible to construct a copy of a node and modify the copy.

Of course, it is expected that sets of types for some particular purpose will be constructed in most situations not through imperative code but through the use of an interactive editor having Modern Data as its native format.  The ease with which what would be called a schema in other systems can be serialized and deserialized obviates the need to construct one by hand, most of the time.  As such, the details discussed above should seldom be an issue.</Text>
        </Document>
        <Document ID="4487">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2383">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_int64 = 1318</Text>
        </Document>
        <Document ID="1343">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_float64_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2407">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float32_int8 = 1344</Text>
        </Document>
        <Document ID="949">
            <Title>Evaluation</Title>
            <Text>It has been mentioned that Modern Data’s type system is dependent; that is, the type of a value that comes later on is allowed to depend upon the actual value of an earlier one.  It is necessary for the infrastructure to know what these dependent types evaluate to, which means that there must be an evaluator - a means of actually executing the function that computes each dependent type and determining its results.

The evaluation algorithm is given here as two mutually-recursive functions, and is a part of this specification: Evaluation must always proceed in this fashion.  This is because, in limited-memory scenarios, the workings of the algorithm are observable to clients of the library (though not to the evaluated functions), inasmuch as the evaluation and hence the requested operation can fail in the event of an out-of-memory condition, and the only way to predict whether sufficient memory is available is to understand the algorithm.

Given elsewhere in this specification are descriptions of the functions performed by every possible builtin node, and their “static arities”.  Loosely, the static arities are the number of parameters they take, but in the event of a function returning a function, the precise meaning of this becomes unclear.  The meaning of the static arity is simply that it is a parameter of the algorithm below, and is no greater than the maximum number of parameters which the builtin can be successively applied to.  A static arity of zero is permitted, and denotes a computed value returned immediately rather than a function (the algorithm below is still used to compute this).

Initially, a node is the only thing given and we invoke the first of the functions given below, using an empty target stack.


To evaluate a node, given a target stack:

1) If it is a backreference node with zero-based index N, return the Nth item from the end of the target stack.  Proceed to step 2.

2) If it is an application node, return the result of applying its left field, with the target stack given and a parameter stack containing solely the right field.  Otherwise, proceed to step 3.

3) Return the node unchanged.


To apply a node (also called the left node), given a target stack and a parameter stack:

1) Initialize the intermediate result to the left node, and the remaining-parameter stack to a copy of the parameter stack.  Proceed to step 2.

2) If the intermediate result is a lambda node and the remaining-parameter stack is nonempty, go to step 8.  Otherwise, proceed to step 3.

3) If the intermediate result is an apply node, go to step 9.  Otherwise, proceed to step 4.

4) If the intermediate result is not a builtin node, go to step 6.  Otherwise, proceed to step 5.

5) If the intermediate result, which is a builtin node, has static arity N, and there are at least N items on the parameter stack, go to step 10.  Otherwise, proceed to step 6.

6) If the parameter stack is empty, return the intermediate result.  Otherwise, proceed to step 7.

7) Pop a value from the remaining-parameter stack.  Replace the intermediate result with an application node with the former value of the intermediate result as its left field, and the popped value as its right field.  Go to step 6.

8) The intermediate result is a lambda node.  Pop a node from the remaining-parameter stack; compute the result of evaluating it with the current target stack, and call this result the “right node”.  Construct a copy of the target stack.  Onto this copy, push the right node.  Compute the result of evaluating the left node, with the copied target stack.  Replace the intermediate result with the result of this computation.  Go to step 2.

9) The intermediate result is an apply node.  Push the intermediate result onto the remaining-parameter stack.  Replace the intermediate result with its left field.  Go to step 2.

10) The intermediate result is a builtin node.  Let the builtin be the function or computed value denoted by its value, and N be its static arity.  Pop N nodes from the parameter stack, and perform the builtin on these parameters, giving them in order starting with the one which was at the end of the parameter stack.  Replace the intermediate result with the node produced by performing the builtin.  Go to step 2.
</Text>
        </Document>
        <Document ID="700">
            <Title>rotate_right_int64</Title>
        </Document>
        <Document ID="701">
            <Title>rotate_right_nat8</Title>
        </Document>
        <Document ID="2000">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_int16 = 225</Text>
        </Document>
        <Document ID="4488">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_nat32_make)
(modern_library *library,
 uint32_t value);</Text>
        </Document>
        <Document ID="2384">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1344">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_utf8_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2408">
            <Title>Semantics</Title>
        </Document>
        <Document ID="702">
            <Title>rotate_right_nat16</Title>
        </Document>
        <Document ID="4081">
            <Title>Synopsis</Title>
            <Text>cast_nat8_int64 = 10271

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3041">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_int32 = 290

Value type (abstract notation)
int32 -> int32 -> maybe int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2001">
            <Title>Semantics</Title>
        </Document>
        <Document ID="703">
            <Title>rotate_right_nat32</Title>
        </Document>
        <Document ID="2730">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4105">
            <Title>Synopsis</Title>
            <Text>cast_nat16_nat8 = 10279

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="4489">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2385">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_int64 = 1319</Text>
        </Document>
        <Document ID="1345">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_blob_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="2409">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_floor_float64_int8 = 1345</Text>
        </Document>
        <Document ID="3449">
            <Title>Synopsis</Title>
            <Text>round_towards_even_float64_nat8 = 1257

Value type (abstract notation)
float64 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="704">
            <Title>rotate_right_nat64</Title>
        </Document>
        <Document ID="2002">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_int32 = 226</Text>
        </Document>
        <Document ID="705">
            <Title>bit_and_int8</Title>
        </Document>
        <Document ID="2731">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_int16 = 10269</Text>
        </Document>
        <Document ID="2386">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1346">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_function_type_make)
(modern_library *library,
 modern *left,
 modern *right);</Text>
        </Document>
        <Document ID="706">
            <Title>bit_and_int16</Title>
        </Document>
        <Document ID="3772">
            <Title>Synopsis</Title>
            <Text>rotate_right_nat8 = 1540

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2003">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2732">
            <Title>Semantics</Title>
        </Document>
        <Document ID="707">
            <Title>bit_and_int32</Title>
        </Document>
        <Document ID="2387">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float32_nat8 = 1320</Text>
        </Document>
        <Document ID="1347">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_sigma_type_make)
(modern_library *library,
 modern *field_type, modern *successor);</Text>
        </Document>
        <Document ID="708">
            <Title>bit_and_int64</Title>
        </Document>
        <Document ID="4084">
            <Title>Synopsis</Title>
            <Text>cast_nat8_nat16 = 10272

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3044">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_int64 = 291

Value type (abstract notation)
int64 -> int64 -> maybe int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="170">
            <Title>modern_node_named_value_make</Title>
        </Document>
        <Document ID="2004">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_int64 = 227</Text>
        </Document>
        <Document ID="2733">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_int32 = 10270</Text>
        </Document>
        <Document ID="709">
            <Title>bit_and_nat8</Title>
        </Document>
        <Document ID="4108">
            <Title>Synopsis</Title>
            <Text>cast_nat16_nat32 = 10280

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2388">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1348">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_name_type_make)
(modern_library *library);</Text>
        </Document>
        <Document ID="4430">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_function_type_right_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="171">
            <Title>Types</Title>
        </Document>
        <Document ID="1670">
            <Title>Semantics</Title>
        </Document>
        <Document ID="172">
            <Title>modern_node_int8_type_make</Title>
        </Document>
        <Document ID="2005">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2734">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2389">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_ceiling_float64_nat8 = 1321</Text>
        </Document>
        <Document ID="1349">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_named_type_make)
(modern_library *library,
 struct modern_hash *name,
 modern *content_type);</Text>
        </Document>
        <Document ID="4431">
            <Title>Semantics</Title>
        </Document>
        <Document ID="173">
            <Title>Values</Title>
        </Document>
        <Document ID="3775">
            <Title>Synopsis</Title>
            <Text>rotate_right_nat16 = 1541

Value type (abstract notation)
nat16 -> nat8 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1671">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2006">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_nat8 = 228</Text>
        </Document>
        <Document ID="174">
            <Title>Values</Title>
        </Document>
        <Document ID="2735">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_int64 = 10271</Text>
        </Document>
        <Document ID="4432">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_type_field_type_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="4087">
            <Title>Synopsis</Title>
            <Text>cast_nat8_nat32 = 10273

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="3047">
            <Title>Synopsis</Title>
            <Text>divide_towards_zero_nat8 = 292

Value type (abstract notation)
nat8 -> nat8 -> maybe nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1672">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2007">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2736">
            <Title>Semantics</Title>
        </Document>
        <Document ID="176">
            <Title>modern_node_int16_type_make</Title>
        </Document>
        <Document ID="4433">
            <Title>Semantics</Title>
        </Document>
        <Document ID="177">
            <Title>modern_node_int32_type_make</Title>
        </Document>
        <Document ID="1673">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2008">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_subtract_nat16 = 229</Text>
        </Document>
        <Document ID="2737">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_nat16 = 10272</Text>
        </Document>
        <Document ID="178">
            <Title>modern_node_int64_type_make</Title>
        </Document>
        <Document ID="4434">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_sigma_type_successor_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2330">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float32_float32 = 1264</Text>
        </Document>
        <Document ID="179">
            <Title>modern_node_nat8_type_make</Title>
        </Document>
        <Document ID="3778">
            <Title>Synopsis</Title>
            <Text>rotate_right_nat32 = 1542

Value type (abstract notation)
nat32 -> nat8 -> nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1674">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2009">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2738">
            <Title>Semantics</Title>
        </Document>
        <Document ID="660">
            <Title>minimum_bound_int64</Title>
        </Document>
        <Document ID="4435">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2331">
            <Title>Semantics</Title>
        </Document>
        <Document ID="3371">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_int8 = 1217

Value type (abstract notation)
float64 -> int8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="661">
            <Title>minimum_bound_nat8</Title>
        </Document>
        <Document ID="1675">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2739">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_cast_nat8_nat32 = 10273</Text>
        </Document>
        <Document ID="662">
            <Title>minimum_bound_nat16</Title>
        </Document>
        <Document ID="4436">
            <Title>Synopsis</Title>
            <Text>struct modern_hash
(*modern_node_representation_named_type_name_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="2332">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_even_float64_float64 = 1265</Text>
        </Document>
        <Document ID="663">
            <Title>minimum_bound_nat32</Title>
        </Document>
        <Document ID="1676">
            <Title>Semantics</Title>
        </Document>
        <Document ID="664">
            <Title>minimum_bound_nat64</Title>
        </Document>
        <Document ID="4437">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2333">
            <Title>Semantics</Title>
        </Document>
        <Document ID="665">
            <Title>maximum_bound_int8</Title>
        </Document>
        <Document ID="1677">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4030">
            <Title>Synopsis</Title>
            <Text>cast_int32_int8 = 10254

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="666">
            <Title>maximum_bound_int16</Title>
        </Document>
        <Document ID="4438">
            <Title>Synopsis</Title>
            <Text>void *
(*modern_node_representation_named_type_content_type_get)
(modern_library *library,
 void *value);</Text>
        </Document>
        <Document ID="1270">
            <Title>Synopsis</Title>
            <Text>int
(*modern_node_mutable_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="3374">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float32_int16 = 1218

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="667">
            <Title>maximum_bound_int32</Title>
        </Document>
        <Document ID="1678">
            <Title>Semantics</Title>
        </Document>
        <Document ID="668">
            <Title>maximum_bound_int64</Title>
        </Document>
        <Document ID="4439">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1271">
            <Title>Synopsis</Title>
            <Text>void
(*modern_node_canonical_hash_set)
(modern_library *library,
 void *value,
 struct modern_hash hash);</Text>
        </Document>
        <Document ID="2335">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_int8 = 1280</Text>
        </Document>
        <Document ID="420">
            <Title>equal_to_int32</Title>
        </Document>
        <Document ID="669">
            <Title>maximum_bound_nat8</Title>
        </Document>
        <Document ID="1679">
            <Title>Parameters</Title>
        </Document>
        <Document ID="3721">
            <Title>Synopsis</Title>
            <Text>shift_right_int64 = 1475

Value type (abstract notation)
int64 -> nat8 -> int64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="421">
            <Title>equal_to_int64</Title>
        </Document>
        <Document ID="1272">
            <Title>Synopsis</Title>
            <Text>modern *
(*modern_node_maybe_just_content_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2336">
            <Title>Semantics</Title>
        </Document>
        <Document ID="422">
            <Title>equal_to_nat8</Title>
        </Document>
        <Document ID="4033">
            <Title>Synopsis</Title>
            <Text>cast_int32_int16 = 10255

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="423">
            <Title>equal_to_nat16</Title>
        </Document>
        <Document ID="3377">
            <Title>Synopsis</Title>
            <Text>round_away_from_zero_float64_int16 = 1219

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1273">
            <Title>Synopsis</Title>
            <Text>int8_t
(*modern_node_int8_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2337">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float64_int8 = 1281</Text>
        </Document>
        <Document ID="424">
            <Title>equal_to_nat32</Title>
        </Document>
        <Document ID="425">
            <Title>equal_to_nat64</Title>
        </Document>
        <Document ID="1274">
            <Title>Synopsis</Title>
            <Text>int16_t
(*modern_node_int16_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2338">
            <Title>Semantics</Title>
        </Document>
        <Document ID="426">
            <Title>equal_to_float32</Title>
        </Document>
        <Document ID="3724">
            <Title>Synopsis</Title>
            <Text>shift_right_nat8 = 1476

Value type (abstract notation)
nat8 -> nat8 -> nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1620">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2660">
            <Title>Semantics</Title>
        </Document>
        <Document ID="427">
            <Title>equal_to_float64</Title>
        </Document>
        <Document ID="1275">
            <Title>Synopsis</Title>
            <Text>int32_t
(*modern_node_int32_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="2339">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_odd_float32_int16 = 1282</Text>
        </Document>
        <Document ID="428">
            <Title>equal_to_name</Title>
        </Document>
        <Document ID="4036">
            <Title>Synopsis</Title>
            <Text>cast_int32_int64 = 10256

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2661">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_maybe_type = 2496</Text>
        </Document>
        <Document ID="1621">
            <Title>Parameters</Title>
        </Document>
        <Document ID="1276">
            <Title>Synopsis</Title>
            <Text>int64_t
(*modern_node_int64_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="429">
            <Title>compare_int8</Title>
        </Document>
        <Document ID="2662">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1622">
            <Title>Semantics</Title>
        </Document>
        <Document ID="911">
            <Title>modern_node_maybe_just_content_set</Title>
        </Document>
        <Document ID="1277">
            <Title>Synopsis</Title>
            <Text>uint8_t
(*modern_node_nat8_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="912">
            <Title>modern_node_maybe_type_content_type_set</Title>
        </Document>
        <Document ID="3727">
            <Title>Synopsis</Title>
            <Text>shift_right_nat16 = 1477

Value type (abstract notation)
nat16 -> nat8 -> nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1623">
            <Title>Parameters</Title>
        </Document>
        <Document ID="2663">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_function_type = 2368</Text>
        </Document>
        <Document ID="1278">
            <Title>Synopsis</Title>
            <Text>uint16_t
(*modern_node_nat16_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="4360">
            <Title>modern_node_representation_function_type_left_set </Title>
        </Document>
        <Document ID="3320">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_int16 = 1186

Value type (abstract notation)
float32 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="914">
            <Title>Maybe value</Title>
        </Document>
        <Document ID="2664">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1624">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4039">
            <Title>Synopsis</Title>
            <Text>cast_int32_nat8 = 10257

Value type (abstract notation)
int8 -> maybe int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1279">
            <Title>Synopsis</Title>
            <Text>uint32_t
(*modern_node_nat32_get)
(modern_library *library,
 modern *value);</Text>
        </Document>
        <Document ID="915">
            <Title>make_maybe_type</Title>
        </Document>
        <Document ID="4361">
            <Title>modern_node_representation_function_type_right_set </Title>
        </Document>
        <Document ID="916">
            <Title>get_maybe_type_content_type</Title>
        </Document>
        <Document ID="1625">
            <Title>Parameters</Title>
        </Document>
        <Document ID="40">
            <Title>modern_stream_int64</Title>
        </Document>
        <Document ID="2665">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_named_value = 2336</Text>
        </Document>
        <Document ID="41">
            <Title>modern_stream_nat8</Title>
        </Document>
        <Document ID="4362">
            <Title>modern_node_representation_sigma_type_field_type_set </Title>
        </Document>
        <Document ID="917">
            <Title>maybe_is_just</Title>
        </Document>
        <Document ID="42">
            <Title>modern_stream_float32</Title>
        </Document>
        <Document ID="43">
            <Title>modern_stream_float64</Title>
        </Document>
        <Document ID="1626">
            <Title>Semantics</Title>
        </Document>
        <Document ID="918">
            <Title>fmap_maybe</Title>
        </Document>
        <Document ID="2666">
            <Title>Semantics</Title>
        </Document>
        <Document ID="380">
            <Title>modern_node_function_type_right_set</Title>
        </Document>
        <Document ID="4363">
            <Title>modern_node_representation_sigma_type_successor_set </Title>
        </Document>
        <Document ID="3323">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_int16 = 1187

Value type (abstract notation)
float64 -> int16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="45">
            <Title>modern_stream_utf8_start</Title>
        </Document>
        <Document ID="919">
            <Title>from_maybe</Title>
        </Document>
        <Document ID="46">
            <Title>modern_stream_utf8_data</Title>
        </Document>
        <Document ID="381">
            <Title>modern_node_sigma_type_field_type_set</Title>
        </Document>
        <Document ID="2667">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_sigma_type = 2400</Text>
        </Document>
        <Document ID="1627">
            <Title>Parameters</Title>
        </Document>
        <Document ID="47">
            <Title>modern_stream_utf8_end</Title>
        </Document>
        <Document ID="382">
            <Title>modern_node_sigma_type_successor_set</Title>
        </Document>
        <Document ID="4364">
            <Title>modern_node_representation_named_type_name_set </Title>
        </Document>
        <Document ID="2260">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_towards_zero_float64_float64 = 1201</Text>
        </Document>
        <Document ID="1220">
            <Title>Semantics</Title>
        </Document>
        <Document ID="48">
            <Title>modern_stream_blob_start</Title>
        </Document>
        <Document ID="49">
            <Title>modern_stream_blob_data</Title>
        </Document>
        <Document ID="383">
            <Title>modern_node_named_type_name_set</Title>
        </Document>
        <Document ID="1628">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2668">
            <Title>Semantics</Title>
        </Document>
        <Document ID="384">
            <Title>modern_node_named_type_content_type_set</Title>
        </Document>
        <Document ID="2261">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1221">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4365">
            <Title>modern_node_representation_named_type_content_type_set</Title>
        </Document>
        <Document ID="1950">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2990">
            <Title>Synopsis</Title>
            <Text>subtract_nat16 = 229

Value type (abstract notation)
nat16 -> nat16 -> maybe nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2669">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_make_named_type = 2432</Text>
        </Document>
        <Document ID="385">
            <Title>modern_node_universe_type_level_set</Title>
        </Document>
        <Document ID="1629">
            <Title>Parameters</Title>
        </Document>
        <Document ID="4366">
            <Title>modern_node_representation_universe_type_level_set </Title>
        </Document>
        <Document ID="386">
            <Title>modern_node_lambda_content_set</Title>
        </Document>
        <Document ID="1222">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2262">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_int8 = 1216</Text>
        </Document>
        <Document ID="3326">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float32_int32 = 1188

Value type (abstract notation)
float32 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1951">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_utf8 = 140</Text>
        </Document>
        <Document ID="387">
            <Title>modern_node_apply_left_set</Title>
        </Document>
        <Document ID="4367">
            <Title>modern_node_representation_lambda_content_set </Title>
        </Document>
        <Document ID="2263">
            <Title>Semantics</Title>
        </Document>
        <Document ID="388">
            <Title>modern_node_apply_right_set</Title>
        </Document>
        <Document ID="1223">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1952">
            <Title>Semantics</Title>
        </Document>
        <Document ID="389">
            <Title>modern_node_set_type_family_item_remove</Title>
        </Document>
        <Document ID="4368">
            <Title>modern_node_representation_apply_left_set </Title>
        </Document>
        <Document ID="141">
            <Title>modern_node_utf8_bytes_get</Title>
        </Document>
        <Document ID="1224">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2264">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_int8 = 1217</Text>
        </Document>
        <Document ID="870">
            <Title>round_towards_even_float32_float32</Title>
        </Document>
        <Document ID="1953">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_blob = 150</Text>
        </Document>
        <Document ID="2993">
            <Title>Synopsis</Title>
            <Text>subtract_nat32 = 230

Value type (abstract notation)
nat32 -> nat32 -> maybe nat32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="142">
            <Title>modern_node_utf8_data_piece_get</Title>
        </Document>
        <Document ID="871">
            <Title>round_towards_even_float64_float64</Title>
        </Document>
        <Document ID="2610">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_length_bytes_utf8 = 1792</Text>
        </Document>
        <Document ID="4369">
            <Title>modern_node_representation_apply_right_set </Title>
        </Document>
        <Document ID="2265">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1225">
            <Title>Semantics</Title>
        </Document>
        <Document ID="143">
            <Title>modern_node_blob_bytes_get</Title>
        </Document>
        <Document ID="872">
            <Title>round_towards_odd_float32_float32</Title>
        </Document>
        <Document ID="3329">
            <Title>Synopsis</Title>
            <Text>round_towards_zero_float64_int32 = 1189

Value type (abstract notation)
float64 -> int32

Value type (detailed notation)</Text>
        </Document>
        <Document ID="1954">
            <Title>Semantics</Title>
        </Document>
        <Document ID="144">
            <Title>modern_node_blob_data_piece_get</Title>
        </Document>
        <Document ID="3651">
            <Title>Synopsis</Title>
            <Text>minimum_bound_nat8 = 1380

Value type (abstract notation)
nat8

Value type (detailed notation)</Text>
        </Document>
        <Document ID="873">
            <Title>round_towards_odd_float64_float64</Title>
        </Document>
        <Document ID="2611">
            <Title>Semantics</Title>
        </Document>
        <Document ID="2266">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float32_int16 = 1218</Text>
        </Document>
        <Document ID="1226">
            <Title>Semantics</Title>
        </Document>
        <Document ID="145">
            <Title>Types</Title>
        </Document>
        <Document ID="874">
            <Title>ceiling_float32_float32</Title>
        </Document>
        <Document ID="1955">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_equal_to_ordering = 151</Text>
        </Document>
        <Document ID="146">
            <Title>modern_node_sigma_field_value_get</Title>
        </Document>
        <Document ID="875">
            <Title>ceiling_float64_float64</Title>
        </Document>
        <Document ID="2612">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_length_bytes_blob = 1793</Text>
        </Document>
        <Document ID="2267">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1227">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1956">
            <Title>Semantics</Title>
        </Document>
        <Document ID="147">
            <Title>modern_node_sigma_successor_get</Title>
        </Document>
        <Document ID="876">
            <Title>floor_float32_float32</Title>
        </Document>
        <Document ID="2996">
            <Title>Synopsis</Title>
            <Text>subtract_nat64 = 231

Value type (abstract notation)
nat64 -> nat64 -> maybe nat64

Value type (detailed notation)</Text>
        </Document>
        <Document ID="2613">
            <Title>Semantics</Title>
        </Document>
        <Document ID="148">
            <Title>modern_node_named_type_name_get</Title>
        </Document>
        <Document ID="877">
            <Title>floor_float64_float64</Title>
        </Document>
        <Document ID="2268">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_round_away_from_zero_float64_int16 = 1219</Text>
        </Document>
        <Document ID="1228">
            <Title>Semantics</Title>
        </Document>
        <Document ID="4310">
            <Title>modern_node_representation_float64_make </Title>
        </Document>
        <Document ID="149">
            <Title>modern_node_named_type_content_type_get</Title>
        </Document>
        <Document ID="878">
            <Title>equal_to_utf8</Title>
        </Document>
        <Document ID="3654">
            <Title>Synopsis</Title>
            <Text>minimum_bound_nat16 = 1381

Value type (abstract notation)
nat16

Value type (detailed notation)</Text>
        </Document>
        <Document ID="630">
            <Title>ceiling_float64_int32</Title>
        </Document>
        <Document ID="1550">
            <Title>Semantics</Title>
        </Document>
        <Document ID="879">
            <Title>equal_to_blob</Title>
        </Document>
        <Document ID="2590">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_bit_not_int16 = 1665</Text>
        </Document>
        <Document ID="2614">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_get_byte_blob = 1824</Text>
        </Document>
        <Document ID="2269">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1229">
            <Title>Semantics</Title>
        </Document>
        <Document ID="1958">
            <Title>Synopsis</Title>
            <Text>modern_builtin_identifier_compare_int8 = 160</Text>
        </Document>
        <Document ID="631">
            <Title>ceiling_float32_int64</Title>
        </Document>
    </Documents>
</SearchIndexes>