{"toc":"3a51625c","sections":{"38ca891f":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_nat16 = 1227"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_nat16 = 1227"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_nat16"]]},"d0db2421":{"title":"1.3. Semantics ∙ Cyclic structures | Modern Data the Reference","body":[["paragraph","Cyclic structures, both at the type level and at the value level, can be created with inductive families and recursive lets - these two mechanisms are similar to each other, with the one being for types and the other for values.  The details of how this is done are left to a later chapter.  It is enough to know that the details of how these mechanisms are used do in fact become part of a modern nodes identity.  That is, they affect how types are canonicalized, which means that you have a different type if you insert the inductive family into the structure at a different place.  Canonicalization does not apply to values (except for values which are part of types), so the fact that the details of a recursive let also affect the nodes identity is not important in most situations."],["paragraph","It would be conceivable for nodes As with the scope issue, the node-based portion of the library hides the issue of flattening cyclic structures from the client code, while the stream-based portion exposes it and places the burden on the client.  However, this hiding cannot be complete, so it is important to be aware of its semantics."],["paragraph","Cycles will be automatically broken by introducing the appropriate constructs at the time that they need to be serialized, if they have not already been; cycle-breaking can also be introduced manually.  Thus users can build up cyclic structures through mutation and expect serialization and deserialization of them to just work, or they can use inductive families and recursive lets directly, and that will also work."],["paragraph","Its worth noting in passing that it is bad style but technically possible in some situations to use an inductive family in defining values, and to use a recursive let in defining types.  This is not actually a necessary consequence of the ability to use types and values interchangeably in other situations, but it is certainly consistent with that design and makes more sense in that light."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.3."," ",["link","fcb65d5c","Semantics"]," ∙ ","Cyclic structures"]]},"cc77148b":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_int32 = 10270"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_int32 = 10270"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_int32"]]},"caeacd8f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_maybe_type_content_type_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_maybe_type_content_type_get"]]},"7e260054":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","decode_utf8 = 1696"],["paragraph","\n\nValue type (abstract notation)\n\nutf8 -\u003e maybe nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_decode_utf8 = 1696"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["decode_utf8"]]},"126a6c7a":{"title":"2.5.6. C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header",["link","e980ac8e","modern_deserialize_memory"]],["header",["link","8c7ad2c1","modern_deserialize_file"]],["header",["link","5a87b5db","modern_deserialize_fd"]],["header",["link","941013b0","modern_deserialize_vfile"]],["header",["link","38c69090","moden_deserialize_input_stream"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Deserialization"]]},"5e339cfc":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int16_make)(modern_library *library, int16_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int16_make "]]},"cfa53f7d":{"title":"C library ∙ Builtin identifiers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","enum modern_builtin_identifier     ;"],["header","Semantics"],["paragraph","A \nmodern_builtin_identifier\n is an enumerated value, as described in the nearby section Builtin identifiers - Overview.  The actual permissible values, the names that go with them, and their semantics are all detailed in the larger top-level section Builtin identifiers."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.8."," ",["link","3f34774e","C library"]," ∙ ",["link","3828cfb0","Builtin identifiers"]],["modern_builtin_identifier"]]},"555b1e48":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_int64 = 1190"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_int64 = 1190"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_int64"]]},"d9284040":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_blob_start)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_blob_start"]]},"9b90177d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_maybe_type_content_type_set)(modern_library *library, void *value, void *content_type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_maybe_type_content_type_set"]]},"bfa7b17a":{"title":"3.5. Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header",["link","86ef7e65","add_int8"]],["header",["link","bdfb3134","add_int16"]],["header",["link","a7f3a547","add_int32"]],["header",["link","beb9a0b0","add_int64"]],["header",["link","a7bf1d12","add_nat8"]],["header",["link","6c62dfd2","add_nat16"]],["header",["link","93dbabb0","add_nat32"]],["header",["link","736a87a6","add_nat64"]],["header",["link","447dc0bd","add_float32"]],["header",["link","f58c5097","add_float64"]],["header",["link","92266d10","subtract_int8"]],["header",["link","8b82dcb9","subtract_int16"]],["header",["link","8823bc27","subtract_int32"]],["header",["link","ba90b6e5","subtract_int64"]],["header",["link","21203c40","subtract_nat8"]],["header",["link","e75e1452","subtract_nat16"]],["header",["link","489889d3","subtract_nat32"]],["header",["link","f758e6cc","subtract_nat64"]],["header",["link","a958cbec","subtract_float32"]],["header",["link","fe92537d","subtract_float64"]],["header",["link","821fc2bd","multiply_int8"]],["header",["link","1942b990","multiply_int16"]],["header",["link","89ccd01a","multiply_int32"]],["header",["link","23c02190","multiply_int64"]],["header",["link","8e987f3b","multiply_nat8"]],["header",["link","265ee3d5","multiply_nat16"]],["header",["link","7d89b742","multiply_nat32"]],["header",["link","883fed14","multiply_nat64"]],["header",["link","3752a9f5","multiply_float32"]],["header",["link","cdbdc470","multiply_float64"]],["header",["link","fe3ef0eb","divide_towards_zero_int8"]],["header",["link","74716475","divide_towards_zero_int16"]],["header",["link","6528e54e","divide_towards_zero_int32"]],["header",["link","1fcd54cf","divide_towards_zero_int64"]],["header",["link","885c4a42","divide_towards_zero_nat8"]],["header",["link","ccc88296","divide_towards_zero_nat16"]],["header",["link","d519b17b","divide_towards_zero_nat32"]],["header",["link","62dd6d54","divide_towards_zero_nat64"]],["header",["link","5df46d3d","divide_towards_negative_infinity_int8"]],["header",["link","731d9a97","divide_towards_negative_infinity_int16"]],["header",["link","de7edd11","divide_towards_negative_infinity_int32"]],["header",["link","83c0cb3c","divide_towards_negative_infinity_int64"]],["header",["link","e168d7b0","divide_float32"]],["header",["link","f0cb83c4","divide_float64"]],["header",["link","c580ef87","modulus_towards_zero_int8"]],["header",["link","8a6a79c5","modulus_towards_zero_int16"]],["header",["link","99ca9dcf","modulus_towards_zero_int32"]],["header",["link","e734a9e2","modulus_towards_zero_int64"]],["header",["link","97cdcf28","modulus_towards_zero_nat8"]],["header",["link","f0dc7ea4","modulus_towards_zero_nat16"]],["header",["link","38ec2f70","modulus_towards_zero_nat32"]],["header",["link","e5543423","modulus_towards_zero_nat64"]],["header",["link","c036701d","modulus_towards_negative_infinity_int8"]],["header",["link","c1b6aeff","modulus_towards_negative_infinity_int16"]],["header",["link","e0f9ff60","modulus_towards_negative_infinity_int32"]],["header",["link","b0acb26c","modulus_towards_negative_infinity_int64"]],["header",["link","58bf455f","negate_int8"]],["header",["link","3c558971","negate_int16"]],["header",["link","69a9169d","negate_int32"]],["header",["link","3a1a837a","negate_int64"]],["header",["link","8b22e178","negate_float32"]],["header",["link","83e06a32","negate_float64"]],["header",["link","a8004948","absolute_value_int8"]],["header",["link","c7e5be9c","absolute_value_int16"]],["header",["link","10d57940","absolute_value_int32"]],["header",["link","cac572e9","absolute_value_int64"]],["header",["link","e7e6a681","absolute_value_float32"]],["header",["link","c4f096eb","absolute_value_float64"]],["header",["link","82b43d5e","sign_int8"]],["header",["link","801ef55c","sign_int16"]],["header",["link","b3bc16fa","sign_int32"]],["header",["link","3daf5544","sign_int64"]],["header",["link","dcdaf262","sign_float32"]],["header",["link","1ec83dcb","sign_float64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Arithmetic"]]},"772cd129":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_nat64 = 1457"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat8 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_nat64 = 1457"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_nat64"]]},"5d1aeba0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint8_t(*modern_node_nat8_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_nat8_get"]]},"d6c35bfd":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sine_float32 = 768"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sine_float32 = 768"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["sine_float32"]]},"373bf4b2":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_function_type_right_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_function_type_right_get "]]},"18cf45a3":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_nat32 = 1261"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_nat32 = 1261"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_nat32"]]},"e347f581":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int64_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_int64_type_make"]]},"db2226e8":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_nat32 = 1292"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_nat32 = 1292"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_nat32"]]},"271dd27f":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_int64 = 1411"],["paragraph","\n\nValue type (abstract notation)\n\nint64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_int64 = 1411"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_int64"]]},"e7e6a681":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_float32 = 484"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_float32 = 484"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_float32"]]},"731d9a97":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_negative_infinity_int16 = 321"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_negative_infinity_int16 = 321"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_negative_infinity_int16"]]},"1d69d955":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_nat16 = 1323"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_nat16 = 1323"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_nat16"]]},"6a5daa90":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_int16 = 1315"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_int16 = 1315"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_int16"]]},"9485b148":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_bool_true)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_bool_true"]]},"7e5377c0":{"title":"2.1.2. C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header",["link","d39e3e15","modern_error_handler"]],["header",["link","6224d3e1","modern_error_handler_memory"]],["header",["link","b740bc16","modern_error_handler_type_mismatch"]],["header",["link","c115107a","modern_error_handler_universe_level_overflow"]],["header",["link","876c25a7","modern_error_handler_buffer_index"]],["header",["link","f3a244bd","modern_error_handler_not_applicable"]],["header",["link","bfdf36e8","modern_error_handler_non_numeric_float"]],["header",["link","badbedf9","modern_error_handler_immutable"]],["header",["link","8684ebcc","modern_error_handler_builtin_identifier"]],["header",["link","b7fb81a4","modern_error_handler_usage"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ","Error handlers"]]},"fca3a56b":{"title":"A.1. Normative references ∙ IEEE 754-2008 (floating-point) | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["A.1."," ",["link","f3ce60a7","Normative references"]," ∙ ","IEEE 754-2008 (floating-point)"]]},"693ffc22":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","e_to_the_x_float64 = 641"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_e_to_the_x_float64 = 641"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["e_to_the_x_float64"]]},"5f308fa0":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_nat8)(struct modern_processor *processor, void *processor_state, void *stream_state, uint8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_nat8"]]},"d2e017b0":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_int16 = 1473"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e nat8 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_int16 = 1473"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_int16"]]},"dbcc93ef":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_nat64_set)(modern_library *library, void *node, uint64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_nat64_set"]]},"acf486d5":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_sigma_set)(modern_library *library, void *value, void *field_value, void *successor);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_set "]]},"e33dfa18":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_nat16)(struct modern_processor *processor, void *processor_state, void *stream_state, uint16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_nat16"]]},"a530bcb3":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_nat8 = 1352"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_nat8 = 1352"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_nat8"]]},"361f5e8e":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_node_representation_canonical_hash_set)(modern_library *library, void *value, struct modern_hash hash);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_canonical_hash_set "]]},"d022bc46":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_function_type_left_set)(modern_library *library, void *value, void *left);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_function_type_left_set "]]},"6da4b471":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_int8 = 10268"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_int8 = 10268"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_int8"]]},"48f7d053":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_nat32 = 10252"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_nat64 = 10253"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_nat64"]]},"8efd7d21":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint64_t(*modern_node_nat64_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_nat64_get"]]},"bdfb3134":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_int16 = 193"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_int16 = 193"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_int16"]]},"f758e6cc":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_nat64 = 231"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_nat64 = 231"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_nat64"]]},"cfb6f4d8":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nmodern_library *modern_library_initialize(struct modern_error_handler *error_handler, struct modern_allocator *allocator, struct modern_node_representation *node, void (*finalizer)(void *client_state), void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_initialize"]]},"29769590":{"title":"2.6.1. C library ∙ Streaming model ∙ Processors | Modern Data the Reference","body":[["header",["link","b038c785","2.6.1.1."," ","Callbacks"]],["header",["link","fa53f24a","2.6.1.2."," ","Predefined"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ","Processors"]]},"5140e2dd":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_maybe_nothing_make)(modern_library *library, void *type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_maybe_nothing_make"]]},"591e003d":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_universe_type_make)(modern_library *library, uint64_t level);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_universe_type_make "]]},"d0f2c11d":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_nat64 = 10288"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_nat64 = 10288"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_nat64"]]},"3a1a837a":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_int64 = 451"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_int64 = 451"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_int64"]]},"e16860d7":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_int16 = 1505"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e nat8 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_int16 = 1505"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_int16"]]},"32b774b2":{"title":"3.15. Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header",["link","9044cdb7","get_maybe_type_content_type"]],["header",["link","da408632","get_function_type_parameter"]],["header",["link","9f3b3bf0","get_function_type_result"]],["header",["link","283b38d4","get_sigma_type_field_type"]],["header",["link","83b7c45b","get_sigma_type_successor"]],["header",["link","36887636","get_named_type_content_type"]],["header",["link","709cdfcd","get_universe_type_level"]],["header",["link","cc46c9c1","get_satisfies_type_supertype"]],["header",["link","c4d768e7","get_satisfies_type_predicate"]],["header",["link","38e570e1","make_sigma"]],["header",["link","9b30dd92","make_name"]],["header",["link","f3c0d0f3","make_maybe_type"]],["header",["link","c59daf62","make_function_type"]],["header",["link","20c9f0ba","make_named_value"]],["header",["link","f8a99d88","make_sigma_type"]],["header",["link","415baff0","make_named_type"]],["header",["link","e393251b","make_universe_type"]],["header",["link","20705b23","make_satisfies_type"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Type manipulation"]]},"1ea5b951":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_make)(modern_library *library, void *type, void *field_value, void *successor_value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_make "]]},"367a4000":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_int16 = 1346"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_int16 = 1346"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_int16"]]},"3e48e1e4":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_named_value_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, struct modern_hash *name);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_named_value_is_next"]]},"d74e3349":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_ordering_value_equal = 4"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_ordering_value_equal"]]},"5a6a6c98":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_int8 = 1376"],["paragraph","\n\nValue type (abstract notation)\n\nint8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_int8 = 1376"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_int8"]]},"305c53a5":{"title":"2.6.2.2. C library ∙ Streaming model ∙ Processes ∙ Predefined | Modern Data the Reference","body":[["header",["link","5eb1c812","modern_processor_input_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ","Predefined"]]},"b7a6b89f":{"title":"2.5.2.3.2. C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header",["link","b1185cdd","modern_node_bool_type_make"]],["header",["link","3939cc59","modern_node_ordering_type_make"]],["header",["link","5c2e60ca","modern_node_maybe_type_make"]],["header",["link","5e928996","modern_node_int8_type_make"]],["header",["link","88eac0c8","modern_node_int16_type_make"]],["header",["link","6f717aea","modern_node_int32_type_make"]],["header",["link","e347f581","modern_node_int64_type_make"]],["header",["link","74409529","modern_node_nat8_type_make"]],["header",["link","dd7aa0a2","modern_node_nat16_type_make"]],["header",["link","79daae90","modern_node_nat32_type_make"]],["header",["link","1f52e94f","modern_node_nat64_type_make"]],["header",["link","73eb606b","modern_node_float32_type_make"]],["header",["link","7c72e3b9","modern_node_float64_type_make"]],["header",["link","c067d1f1","modern_node_utf8_type_make"]],["header",["link","bdf65098","modern_node_blob_type_make"]],["header",["link","4c649e3e","modern_node_function_type_make"]],["header",["link","7dfdc5c0","modern_node_sigma_type_make"]],["header",["link","5fcf74fc","modern_node_name_type_make"]],["header",["link","10a172b4","modern_node_named_type_make"]],["header",["link","ecd15a5a","modern_node_universe_type_make"]],["header",["link","7dec10eb","modern_node_satisfies_type_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ","Types"]]},"beb9a0b0":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_int64 = 195"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_int64 = 195"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_int64"]]},"d0b38749":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_backreference_index_set)(modern_library *library, void *value, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_backreference_index_set "]]},"62b0ea3f":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_let_item_add)(modern_library *library, void *value, void *item, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_item_add "]]},"4f9dbc18":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_sigma_type_field_type_set)(modern_library *library, void *value, void *field_type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_type_field_type_set "]]},"6ae3d08b":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_nat16 = 1381"],["paragraph","\n\nValue type (abstract notation)\n\nnat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_nat16 = 1381"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_nat16"]]},"caaec47a":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_int8)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_int8"]]},"138860c0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_int16_set)(modern_library *library, void *node, int16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_int16_set"]]},"e06df0a7":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_serialize_output_stream(modern_library *library, modern *value, modern_context *context, struct modern_stream *stream);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_output_stream"]]},"bc53eb96":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_utf8_type = 36"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_utf8_type"]]},"5ee2eda0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nsize_t (*modern_node_representation_utf8_bytes_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_utf8_bytes_get "]]},"9f2bb03b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_maybe_type_content_type_set)(modern_library *library, void *value, void *content_type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_type_content_type_set"]]},"e38bec2d":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_bool_false)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_bool_false"]]},"516bc0e2":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_nat16)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_nat16"]]},"30d0e3d9":{"title":"2.5.2.3. C library ∙ Node-based object model ∙ Callbacks ∙ Construction | Modern Data the Reference","body":[["header",["link","bf492e42","2.5.2.3.1."," ","Values"]],["header",["link","b7a6b89f","2.5.2.3.2."," ","Types"]],["header",["link","51cd2052","2.5.2.3.3."," ","Combinators"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ","Construction"]]},"a78f265e":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_ordering = 151"],["paragraph","\nValue type (abstract notation)\nordering -\u003e ordering -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_ordering = 151"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_ordering"]]},"9b75ef86":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_backreference_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_backreference_is_next"]]},"fb148e11":{"title":"2.4. C library ∙ Virtual files | Modern Data the Reference","body":[["paragraph","Virtual files, often abbreviated to vfiles herein, are a type of object which represents an abstract stream of bytes which can be read from and/or written to.  They have a transparent part, which is a structure containing pointers to callback functions, and an opaque part, which is represented as a void pointer.  In typical usage, client code will obtain a virtual file from the system appropriate to the task it wishes to perform, then pass this virtual file into the .  It is also possible for client code to construct its own virtual file and have the system use it, for special-purpose cases.  For example, a Modern Data document might be embedded in a container format such as zip or tar; a special-purpose virtual file could enable deserializing it in-place, without first unpacking the container."],["paragraph","There are just two callbacks in the vfile structure.  To obtain data, use modern_vfile_read().  To produce it, use modern_vfile_write().  A vfile which is only to be used for input need only implement the read function, and similarly for output."],["paragraph","Unlike some of the other object types in Modern Data, such as the node and stream abstractions, the initialization and finaliziation methods are not part of the callback structure.  This is because different vfile types require different parameters upon initialization.  It is the responsibility of the code providing a vfile to also provide a mechanism to initialize and finalize it.  For example, modern_vfile_memory_buffer_initialize() is the function to initialize one particular kind of vfile, which is backed by a buffer of memory managed by the client.  Its parameters are different from those of modern_vfile_stdio_initialize(), which is specific to a vfile backed by a file pointer created by the standard C library."],["header",["link","952df493","2.4.1."," ","Callbacks"]],["header",["link","cd55e7b6","2.4.2."," ","Predefined"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4."," ",["link","3f34774e","C library"]," ∙ ","Virtual files"]]},"204122e6":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","natural_logarithm_float32 = 608"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_natural_logarithm_float32 = 608"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["natural_logarithm_float32"]]},"85a08cfe":{"title":"3.9. Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header",["link","5a6a6c98","minimum_bound_int8"]],["header",["link","b890738e","minimum_bound_int16"]],["header",["link","b7d3384f","minimum_bound_int32"]],["header",["link","2daa42b2","minimum_bound_int64"]],["header",["link","60249b44","minimum_bound_nat8"]],["header",["link","6ae3d08b","minimum_bound_nat16"]],["header",["link","cfd81c5c","minimum_bound_nat32"]],["header",["link","bbc3edfc","minimum_bound_nat64"]],["header",["link","ba61e558","maximum_bound_int8"]],["header",["link","f6fd2928","maximum_bound_int16"]],["header",["link","62affcc9","maximum_bound_int32"]],["header",["link","271dd27f","maximum_bound_int64"]],["header",["link","3d6754f7","maximum_bound_nat8"]],["header",["link","3c5258f5","maximum_bound_nat16"]],["header",["link","00423d8d","maximum_bound_nat32"]],["header",["link","6b99fd99","maximum_bound_nat64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Boundary value"]]},"4c4c4686":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","pi_float64 = 545"],["paragraph","\nValue type (abstract notation)\nfloat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_pi_float64 = 545"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["pi_float64"]]},"bf1336af":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_bool_false_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_bool_false_make "]]},"a68b3ef1":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_lambda_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_lambda_is_next"]]},"353e5089":{"title":"1.1. Semantics ∙ Overview | Modern Data the Reference","body":[["paragraph","In Modern Data, the fundamental in-memory datatype is the modern node, which is a representation of, loosely, either a value or a type.  If we wish to specify further, we may occasionally refer to a modern type or modern value, but these concepts do not map to actual host-language datatypes; only modern node does."],["paragraph","The operations on a modern node are serialization, deserialization, type-checking, evaluation, and traversal.  The concept of a modern context holding types and values is used by serialization, deserialization, type-checking, and evaluation.  The concept of a modern cursor describing a node and a path to reach it from the root is used by traversal."],["paragraph","Serialization is performed on a modern node in some modern context, and produces a stream of bytes."],["paragraph","Deserialization is performed on a stream of bytes in some modern context, and produces a modern node."],["paragraph","Evaluation is performed on a modern node, and produces another modern node.  Traversal is begun by creating a modern cursor from some modern node "],["paragraph","Although simple applications which merely wish to exchange and act on data need never use anything but the default context, it is nonetheless a concept worth understanding.  The context is internally a hash table of modern types (and occasionally modern values, used as parts of dependent types).  The hash key is determined in a way that captures the notion of type equality, by placing the modern node in a canonical form and computing a hash function of that.  Any modern node which is in the hash table is in scope in that context."],["paragraph","Modern Data includes a comprehensive set of primitive operations, which exist as built-in values, for the purpose of expressing arbitrary functions to be evaluated.  The motivation for this is to allow sigma types to be arbitrarily complicated; it is not meant as an interchange format for functions, or for that matter as a high-level programming language; the set of operations available is more akin to a purely-functional assembly language.  For interchange of functional values and for designing high-level programming languages, the recommendation is to create a Modern Data type representing an abstract syntax tree with whatever set of primitives are appropriate to the nature of the interchange."],["paragraph","In addition to and built on top of the built-in values, Modern Data also includes certain useful combinators in the initial context.  These include type-level functions for the definition of type-classes and type-class instances, and for aggregate structures: unions, arrays, and dependent records, all in terms of sigma types.  The use of these combinators is not mandatory, but is provided as a convenience, and is also advisable because it allows editor software to have more information about the nature of a type."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.1."," ",["link","fcb65d5c","Semantics"]," ∙ ","Overview"]]},"1bbc36e6":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_nat8 = 133"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_nat8 = 133"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_nat8"]]},"6e29bfb2":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_name_value = 21"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_name_value"]]},"18742325":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_nat16 = 1194"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_nat16 = 1194"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_nat16"]]},"2d2c593d":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_backreference_make)(modern_library *library, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_backreference_make "]]},"45c3c710":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","enum modern_node_type(*modern_node_node_type_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","48d4fe32","General"]],["modern_node_node_type_get"]]},"790073f0":{"title":"1.4. Semantics ∙ Mutation | Modern Data the Reference","body":[["paragraph","Although many functional languages are additionally \"purely functional\", meaning that their variables are immutable, nodes can be mutated in memory in some languages.  This is to make it easier to create cyclic structures, which could not otherwise be done in languages without recursive binding.  The semantics of mutation are that all references to the old node become references to the new node.  Mutation is possible on all nodes, with the provision that nodes being modified have never been in scope in any context.  In other words, once a node has become part of a schema of types and and thus potentially has extant nodes which are values of it, it can no longer be modified.  This is, of course, to avoid the scenario of a value node being inconsistent in structure with the type node that corresponds to it.  Naturally, it is always possible to construct a copy of a node and modify the copy."],["paragraph","Of course, it is expected that sets of types for some particular purpose will be constructed in most situations not through imperative code but through the use of an interactive editor having Modern Data as its native format.  The ease with which what would be called a schema in other systems can be serialized and deserialized obviates the need to construct one by hand, most of the time.  As such, the details discussed above should seldom be an issue."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.4."," ",["link","fcb65d5c","Semantics"]," ∙ ","Mutation"]]},"1942b990":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_int16 = 257"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_int16 = 257"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_int16"]]},"c0129577":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_immutable_set)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_immutable_set "]]},"a7bf1d12":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_nat8 = 196"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e maybe nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_nat8 = 196"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_nat8"]]},"92266d10":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_int8 = 224"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_int8 = 224"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_int8"]]},"71bda8e8":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_nat32 = 1357"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_nat32 = 1357"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_nat32"]]},"859b94f1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_hash(*modern_node_canonical_hash_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","48d4fe32","General"]],["modern_node_canonical_hash_get"]]},"8aa0fce4":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *modern_vfile_memory_allocating_initialize(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","42ce4736","Memory managed by the system"]],["modern_vfile_memory_allocating_initialize"]]},"d633cb70":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_nat32 = 10266"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_nat32 = 10266"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_nat32"]]},"e484c0b0":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_value_definition_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_value_definition_is_next"]]},"304ea676":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_function_type_parameter_set)(modern_library *library, void *value, void *parameter);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_function_type_parameter_set"]]},"79df7160":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arctangent_float32 = 1152"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arctangent_float32 = 1152"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arctangent_float32"]]},"d21990c0":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_int8 = 10275"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_int8 = 10275"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_int8"]]},"b7a34ab4":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_ordering_greater)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_ordering_greater"]]},"80a04fcd":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_float64_blob = 10321"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_float64_blob = 10321"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_float64_blob"]]},"8b82dcb9":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_int16 = 225"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_int16 = 225"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_int16"]]},"8df31dee":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_int64)(struct modern_processor *processor, void *processor_state, void *stream_state, int64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_int64"]]},"eddc5997":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_int16_set)(modern_library *library, void *node, int16_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int16_set "]]},"6a96742e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_nat64 = 10246"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_nat64 = 10246"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_nat64"]]},"8c48144b":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_int16 = 10262"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_int16 = 10262"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_int16"]]},"3939cc59":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_ordering_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_ordering_type_make"]]},"487aa8cd":{"title":"C library ∙ Streaming model ∙ Streams ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_stream *modern_stream_explicatory_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d78e7459","Predefined"]],["modern_stream_explicatory_make"]]},"7dfdc5c0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_type_make)(modern_library *library, void *field_type, void *successor);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_sigma_type_make"]]},"dd7aa0a2":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat16_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_nat16_type_make"]]},"e8815c17":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_value_type_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","48d4fe32","General"]],["modern_node_value_type_get"]]},"ea585198":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_int8 = 10302"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_int8 = 10302"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_int8"]]},"c15c4286":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_function_type = 38"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_function_type"]]},"724c93bf":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_float32_set)(modern_library *library, void *node, float value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_float32_set"]]},"3b2ab590":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_nat8 = 1668"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_nat8 = 1668"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_nat8"]]},"49e9d2f5":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_float32 = 1360"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_float32 = 1360"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_float32"]]},"e6fab0b0":{"title":"2.6.3. C library ∙ Streaming model ∙ Streams | Modern Data the Reference","body":[["header",["link","d3c7bf1f","2.6.3.1."," ","Callbacks"]],["header",["link","d78e7459","2.6.3.2."," ","Predefined"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ","Streams"]]},"373ffaa3":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_int32_set)(modern_library *library, void *node, int32_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int32_set "]]},"ce6e6fb3":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_let_make)(modern_library *library, uint64_t n_items, void **types, void *content);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_let_make"]]},"4498ce74":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat32_value = 14"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat32_value"]]},"2e36bae8":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_stream_sigma_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, struct modern_hash *type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_sigma_is_next"]]},"a2f82685":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_nat16 = 1355"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_nat16 = 1355"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_nat16"]]},"fc7f32ed":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_nat16 = 1354"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_nat16 = 1354"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_nat16"]]},"5418409a":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_int32 = 1252"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_int32 = 1252"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_int32"]]},"245c68c1":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_nat16 = 1322"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_nat16 = 1322"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_nat16"]]},"f9ecbf10":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_nat16 = 1669"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_nat16 = 1669"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_nat16"]]},"a48fc6b0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nint(*modern_node_representation_mutable_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_mutable_get"]]},"b1185cdd":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_bool_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_bool_type_make"]]},"7865b23c":{"title":"C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_processor_finalize)(void *processor_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","b038c785","Callbacks"]],["modern_processor_finalize"]]},"98ec6036":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","int8_t(*modern_node_int8_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_int8_get"]]},"13ebbef8":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_int32 = 10241"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_int32 = 10241"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_int32"]]},"4ee2303b":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_named_type_name_set)(modern_library *library, void *value, struct modern_hash *name);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_named_type_name_set"]]},"b1d9f5d5":{"title":"2.5.2.4.3. C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header",["link","9b90177d","modern_node_maybe_type_content_type_set"]],["header",["link","304ea676","modern_node_function_type_parameter_set"]],["header",["link","d432ef82","modern_node_function_type_result_set"]],["header",["link","b0dfb6f2","modern_node_sigma_type_field_type_set"]],["header",["link","9433253d","modern_node_sigma_type_successor_set"]],["header",["link","4ee2303b","modern_node_named_type_name_set"]],["header",["link","494982e2","modern_node_named_type_content_type_set"]],["header",["link","402ce9ab","modern_node_universe_type_level_set"]],["header",["link","aad7fd11","modern_node_satisfies_type_supertype_set"]],["header",["link","a2f18c48","modern_node_satisfies_type_predicate_set"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ","Types"]]},"62affcc9":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_int32 = 1410"],["paragraph","\n\nValue type (abstract notation)\n\nint32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_int32 = 1410"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_int32"]]},"60132bdd":{"title":"2.1.1. C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header",["link","cfb6f4d8","modern_library_initialize"]],["header",["link","de461cac","modern_library_error_handler_get"]],["header",["link","2f6fb021","modern_library_allocator_get"]],["header",["link","e315b0e0","modern_library_node_representation_get"]],["header",["link","90d0f8f2","modern_library_client_state_get"]],["header",["link","bf8ba364","modern_library_finalize"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ","General"]]},"86ef7e65":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_int8 = 192"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_int8 = 192"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_int8"]]},"46ef606e":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_function_type_left_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_function_type_left_get "]]},"6f717aea":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int32_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_int32_type_make"]]},"c3409832":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_nat64 = 136"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_nat64 = 136"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_nat64"]]},"47c2e029":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_name = 10299"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_name = 10299"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_name"]]},"3a51625c":{"title":"Modern Data the Reference","body":[["paragraph","Modern Data is a self-describing binary data format for dependently-typed object graphs, and also a library."],["paragraph","A self-describing data format is a format like XML, JSON, YAML, or Common Lisps s-expressions, which can be processed at a superficial level without knowledge of the specific type of data it contains.  The typical purpose of such formats is interchange across diverse software tools; for example, many tools for working with databases can produce output or accept input in XML.  They can also be useful intermediate representations for transformations on data structures, as with XSLT.  They can even be used for network protocols, as with XMPP/Jabber.  Modern Data is at least as suitable for these tasks as any existing format."],["paragraph","Unlike the above-mentioned alternatives, Modern Data is primarily a binary format, not a textual one.  This is because any textual format based on it would necessarily be either very verbose and hard to write, or else would give up many important features.  There is a textual format for documentation, standardization, and debugging, but users are urged never to use it for interchange."],["paragraph","Although not the primary motivation for the choice, a benefit of being a binary format is a certain compactness.  Care has been taken to ensure that the format can in principle be used by database engines and the like as a native format - perhaps slightly larger than non-self-describing forms, but not enormously so as a textual format would be, and without needing a parse phase to perform simple actions such as scanning through it.  Specifically, the format does not use offset-based pointers, so it is suitable for embedding in other formats that do their own space allocation."],["paragraph","The most distinctive attribute of Modern Data compared to existing formats is that it is dependently typed.  In a formal sense, this means that types and values are intermixable.  Thus the schema for a Modern Data document is itself potentially a Modern Data document, using a type as a value.  Furthermore, bounds-checked arrays, dimensioned quantities, and the like can all be expressed through values used within types, in ways that will be familiar to programmers who have used theorem-proving languages such as Agda, Coq, Epigram, and Idris."],["paragraph","Another benefit that is a prerequisite of dependent typing but will not be obvious to programmers who are unfamiliar with Hindley-Milner-style type systems is that types are parametric; this means, for example, that it is possible to write the incomplete type balanced binary tree containing leaf nodes of some particular type, without specifying the content type at the time that the tree type is defined; the type parameter can be filled in to instantiate that tree for any desired content type, thus obtaining a complete type, which can actually be instantiated.  This will be familiar to Haskell and ML programmers; it is also reminiscent of C++ and Java templates, but the meaning of it has been more rigorously formalized."],["paragraph","Furthermore, code can be written using the library which operates on a parametric type such as our binary tree example, generically to its specific parameters - thus code can be written which rebalances a tree after an update, without knowing the type of the contents."],["paragraph","Modern Data, unlike other self-describing formats, is capable of representing an arbitrary object graph - not merely one that has obvious linear structure.  This is accomplished without pointers or globally-scoped identifiers of any kind, and therefore does not impede use embedded within other formats, as mentioned above.  The benefit is that arbitrary data structures can be represented directly, including ones which would have cyclic pointers in their traditional in-memory representations."],["paragraph","The Modern Data base library is written in C.  Not because its more suitable for the task than other languages would be - its not.  Rather, functional languages tend to have runtime systems (largely consisting of garbage collectors) which make the scenario of deploying a library to be linked against from other languages more difficult.  Obviously there will be bindings written in functional languages, as functional programming is the paradigm best equipped to take advantage of Modern Datas features, but the library will always be in a system language, so that it can easily be linked against from as many other languages as possible.  Care has been taken to play nicely with foreign-function interfaces, which cannot always use the full capabilities of the C ABI."],["paragraph","The library presents two basic ways of interacting with data.  The node-based object model is analogous to the Document Object Model (DOM) for HTML and XML processing, and is simpler to invoke.  The streaming model is analogous to SAX for XML processing, and is more complicated but dramatically more efficient in some situations.  If you are not sure which to use, you should use the node-based object model."],["paragraph","The streaming models primary purpose is to allow you to substitute your own data structures in place of the ones the library provides.  The streaming model requires more work of you, because validation is the client codes responsibility rather than the librarys.  This lack of validation is a feature; it enables the efficiency gains, and also is the mechanism for constructing novel file formats and network protocols which use Modern Data in some places but have their own skeletons."],["paragraph","Please, come on in - and enjoy the type system!"],["header",["link","fcb65d5c","1."," ","Semantics"]],["header",["link","3f34774e","2."," ","C library"]],["header",["link","82cdeeb7","3."," ","Builtin identifiers"]],["header",["link","f3ce60a7","A."," ","Normative references"]]],"navigation":[["Modern Data the Reference"]]},"bb9b8ad2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_nat8 = 1256"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_nat8 = 1256"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_nat8"]]},"4ab158d6":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_let = 47"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_let"]]},"7ddb72a8":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_name_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_name_type_make "]]},"a7da8c90":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_let_content_set)(modern_library *library, void *value, void *content);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_content_set "]]},"4be66453":{"title":"2.2. C library ∙ Memory management | Modern Data the Reference","body":[["header",["link","a79b2527","modern_finalize"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.2."," ",["link","3f34774e","C library"]," ∙ ","Memory management"]]},"8b22e178":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_float32 = 452"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_float32 = 452"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_float32"]]},"33fbdde0":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_int32 = 10304"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_int32 = 10304"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_int32"]]},"94b94ea7":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_int64 = 1667"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_int64 = 1667"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_int64"]]},"8a89cdd2":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_nat16 = 1477"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat8 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_nat16 = 1477"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_nat16"]]},"658510bd":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_serialize_memory_buffer(modern_library *library, modern *value, modern_context *context, uint8_t *buffer, size_t *length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_memory_buffer"]]},"ebb53e78":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_int64 = 10256"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_int64 = 10256"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_int64"]]},"97d666e8":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_float64_make)(modern_library *library, double value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_float64_make"]]},"d5de2391":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_nat64 = 10309"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_nat64 = 10309"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_nat64"]]},"53669680":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_serialize_fd(modern_library *library, modern *value, modern_context *context, int fd);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_fd"]]},"e7ee9192":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_nat64_set)(modern_library *library, void *node, uint64_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat64_set "]]},"ef84d22b":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_nat8 = 10250"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_nat8 = 10250"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_nat8"]]},"c7e5be9c":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_int16 = 481"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_int16 = 481"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_int16"]]},"ae7e3048":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_apply_make)(modern_library *library, void *left, void *right);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_lambda_apply_make"]]},"15d59072":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_nat64 = 1358"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_nat64 = 1358"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_nat64"]]},"7aa97dfb":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_utf8 = 140"],["paragraph","\nValue type (abstract notation)\nutf8 -\u003e uft8 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_utf8 = 140"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_utf8"]]},"e427ed9e":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint8_t *modern_vfile_memory_allocating_data_piece_get(modern_library *library, void *vfile_state, size_t offset, size_t bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","42ce4736","Memory managed by the system"]],["modern_vfile_memory_allocating_data_piece_get"]]},"207f59f8":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_nat64 = 1199"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_nat64 = 1199"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_nat64"]]},"d39e3e15":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_error_handler     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler"]]},"be524fc0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_float32 = 1328"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_float32 = 1328"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_float32"]]},"641677d0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","float(*modern_node_float32_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_float32_get"]]},"dcbec5c4":{"title":"2.5. C library ∙ Node-based object model | Modern Data the Reference","body":[["paragraph","The node-based object model is an abstraction which presents a view on a Modern Data document and schema allowing them to be navigated by traversing links from containers to their contents, and from values to their types.  Users familiar with the HTML document-object model (DOM) will be at home here; the major difference to note is that in Modern Data, nodes comprise an arbitrary directed graph rather than a strict tree.  That is, a node may be shared among multiple parents, and cyclic structures are possible.  Also, because of the tree structure, in the DOM it makes sense to navigate from a node to its sole parent; in Modern Data, it does not, so this navigation is not possible."],["paragraph","Ordinarily one will use the system-provided implementation of nodes; a structure containing pointers to the necessary callback functions can be obtained by a one-time call to modern_node_default_make().  Nodes themselves are then represented as void pointers, and created, inspected, and mutated using these callbacks."],["paragraph","It is also possible to provide ones own implementation of nodes.  This is appropriate, for example, when authoring a binding to a new programming language and wishing to use that languages native data structures to represent node values, without the memory-management complications of wrapping them around C objects.  To do this one merely needs to implement the hundred or so callbacks in the modern_node structure.  It is a nontrivial undertaking, but it is expected that it only needs to be done once for any given programming language."],["header",["link","614f9fcb","2.5.1."," ","Node Types"]],["header",["link","f65a2b21","2.5.2."," ","Callbacks"]],["header",["link","c0003f6e","2.5.3."," ","Canonical form"]],["header",["link","b053f32f","2.5.4."," ","Contexts"]],["header",["link","8ee82a69","2.5.5."," ","Evaluation"]],["header",["link","126a6c7a","2.5.6."," ","Deserialization"]],["header",["link","92dedd55","2.5.7."," ","Serialization"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5."," ",["link","3f34774e","C library"]," ∙ ","Node-based object model"]]},"23c53225":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_int64 = 1603"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e int64 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_int64 = 1603"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_int64"]]},"57e70045":{"title":"2.6.2. C library ∙ Streaming model ∙ Processes | Modern Data the Reference","body":[["header",["link","b234d424","2.6.2.1."," ","Callbacks"]],["header",["link","305c53a5","2.6.2.2."," ","Predefined"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ","Processes"]]},"7bce4fbb":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_bool_true_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_bool_true_make "]]},"65305059":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_int8 = 1504"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e nat8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_int8 = 1504"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_int8"]]},"d38f7124":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_node *modern_node_default_make(struct modern_allocator *allocator, void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.5."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","59499a3a","Predefined"]],["modern_node_default_make"]]},"aad7fd11":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_satisfies_type_supertype_set)(modern_library *library, void *value, void *supertype);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_satisfies_type_supertype_set"]]},"c115107a":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_universe_level_overflow)(void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_universe_level_overflow"]]},"9f3b3bf0":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_function_type_result = 2112"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_function_type_result = 2112"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_function_type_result"]]},"d0dd1235":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_nat8 = 1193"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_nat8 = 1193"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_nat8"]]},"d0df487d":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_nat32 = 10280"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_nat32 = 10280"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_nat32"]]},"c4f096eb":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_float64 = 485"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_float64 = 485"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_float64"]]},"64eb29d3":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_int32 = 1285"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_int32 = 1285"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_int32"]]},"6f36d4d8":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_backreference_make)(modern_library *library, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_backreference_make"]]},"2c30a659":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arcsine_float64 = 1089"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arcsine_float64 = 1089"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arcsine_float64"]]},"3c5258f5":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_nat16 = 1413"],["paragraph","\n\nValue type (abstract notation)\n\nnat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_nat16 = 1413"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_nat16"]]},"389f128f":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_int8 = 1440"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e nat8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_int8 = 1440"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_int8"]]},"d78e7459":{"title":"2.6.3.2. C library ∙ Streaming model ∙ Streams ∙ Predefined | Modern Data the Reference","body":[["header",["link","e149521b","modern_stream_output_make"]],["header",["link","487aa8cd","modern_stream_explicatory_make"]],["header",["link","f3db4c1d","modern_stream_documentation_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ","Predefined"]]},"73eb606b":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_float32_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_float32_type_make"]]},"ba3f418b":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int8_value = 8"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int8_value"]]},"d567cce4":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_int32 = 1316"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_int32 = 1316"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_int32"]]},"ccd94088":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_int32 = 1666"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_int32 = 1666"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_int32"]]},"83c0cb3c":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_negative_infinity_int64 = 323"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_negative_infinity_int64 = 323"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_negative_infinity_int64"]]},"66d7f545":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_nat16 = 1605"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat16 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_nat16 = 1605"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_nat16"]]},"ba3b651a":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","e_to_the_x_float32 = 640"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_e_to_the_x_float32 = 640"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["e_to_the_x_float32"]]},"c2a755f8":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_bool_true_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_bool_true_make"]]},"1130a0ab":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_int8 = 1313"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_int8 = 1313"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_int8"]]},"51926536":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_universe_type_level_set)(modern_library *library, void *value, uint64_t level);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_universe_type_level_set "]]},"98a7c9b6":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_sigma_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state struct modern_hash *a, struct modern_hash *b);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_sigma_is_next"]]},"66e6a3f1":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_int16 = 10303"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_int16 = 10303"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_int16"]]},"bb3ebd17":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint8_t *(*modern_node_representation_blob_data_piece_get)(modern_library *library, void *value, size_t offset, size_t bytes);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_blob_data_piece_get "]]},"bf8ba364":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_library_finalize(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_finalize"]]},"a0dad071":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_apply_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_apply_is_next"]]},"7ca0b494":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_float32_make)(modern_library *library, float value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float32_make "]]},"3828cfb0":{"title":"2.8. C library ∙ Builtin identifiers | Modern Data the Reference","body":[["paragraph","A \nmodern_builtin_identifier\n is an enumerated value, one of a sparsely-allocated set which fits in a sixteen-bit range.  They are used with nodes of \nmodern_node_type_builtin\n to represent certain functions and values which are, as the reader might already be imagining, built-in to the system because they are required for its normal usage.  The represented values are comprised of flow-control primitives, logical combinators, comparators, and operations on primitive values and types, both atomic and aggregate.  The actual names and numbers of each are, for brevity, given alongside their types and semantics in the section Builtin identifiers."],["header",["link","cfa53f7d","modern_builtin_identifier"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.8."," ",["link","3f34774e","C library"]," ∙ ","Builtin identifiers"]]},"6bf8fa56":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat8_make)(modern_library *library, uint8_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat8_make "]]},"e470e3ec":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_nat32 = 1510"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat8 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_nat32 = 1510"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_nat32"]]},"de1bdb8b":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_type_family_make)(modern_library *library, uint64_t n_items, void **types);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_type_family_make"]]},"e4765d34":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_nat64)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_nat64"]]},"cf6e87be":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_int32 = 10248"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_int32 = 10248"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_int32"]]},"9b9a7fc7":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_nat8 = 1320"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_nat8 = 1320"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_nat8"]]},"48d4fe32":{"title":"2.5.2.2.1. C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ General | Modern Data the Reference","body":[["header",["link","45c3c710","modern_node_node_type_get"]],["header",["link","e8815c17","modern_node_value_type_get"]],["header",["link","7b84405f","modern_node_mutable_get"]],["header",["link","859b94f1","modern_node_canonical_hash_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ","General"]]},"7c807630":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_sigma_value = 20"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_sigma_value"]]},"329f455d":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_int8 = 1600"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e int8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_int8 = 1600"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_int8"]]},"aad26f80":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat64_value = 15"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat64_value"]]},"c7312ab1":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","logarithm_base_x_float64 = 737"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_logarithm_base_x_float64 = 737"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["logarithm_base_x_float64"]]},"3d6754f7":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_nat8 = 1412"],["paragraph","\n\nValue type (abstract notation)\n\nnat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_nat8 = 1412"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_nat8"]]},"be6ccb7b":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_sigma_type = 39"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_sigma_type"]]},"af502042":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_int32 = 10284"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_int32 = 10284"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_int32"]]},"1e4051d6":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint64_t(*modern_node_universe_type_level_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_universe_type_level_get"]]},"67388783":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint64_t(*modern_node_backreference_index_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_backreference_index_get"]]},"9b10625e":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_blob_end)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_blob_end"]]},"b15000ee":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_nat32 = 1638"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat32 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_nat32 = 1638"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_nat32"]]},"342c8022":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_int64 = 10271"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_int64 = 10271"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_int64"]]},"c9bfaf5b":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_blob_data)(struct modern_processor *processor, void *processor_state, void *stream_state, uint8_t *data, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_blob_data"]]},"5df46d3d":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_negative_infinity_int8 = 320"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_negative_infinity_int8 = 320"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_negative_infinity_int8"]]},"262bfd91":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","x_to_the_y_float32 = 704"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_x_to_the_y_float32 = 704"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["x_to_the_y_float32"]]},"ef684447":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_named_value_set)(modern_library *library, void *node, void *type, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_value_set "]]},"da408632":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_function_type_parameter = 2080"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_function_type_parameter = 2080"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_function_type_parameter"]]},"f9df1956":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_nat64)(struct modern_processor *processor, void *processor_state, void *stream_state, uint64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_nat64"]]},"40e77ef4":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_utf8)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_utf8"]]},"c8b9d92a":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_function_type_right_set)(modern_library *library, void *value, void *right);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_function_type_right_set "]]},"f0dc7ea4":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_nat16 = 389"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e maybe nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_nat16 = 389"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_nat16"]]},"3fd8517d":{"title":"2.5.2.2. C library ∙ Node-based object model ∙ Callbacks ∙ Reading | Modern Data the Reference","body":[["header",["link","48d4fe32","2.5.2.2.1."," ","General"]],["header",["link","5c9440ea","2.5.2.2.2."," ","Values"]],["header",["link","a553ffbe","2.5.2.2.3."," ","Types"]],["header",["link","45e8b51b","2.5.2.2.4."," ","Combinators"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ","Reading"]]},"76d32398":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int32_value = 10"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int32_value"]]},"fd357397":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_nat32 = 10308"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_nat32 = 10308"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_nat32"]]},"27a57bf4":{"title":"C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_processor_initialize)();"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","b038c785","Callbacks"]],["modern_processor_initialize"]]},"c139e8ef":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_function_type_make)(modern_library *library, void *left, void *right);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_function_type_make "]]},"5f68caa0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_utf8_data_piece_set)(modern_library *library, void *value, uint8_t *data, size_t offset, size_t old_bytes, size_t new_bytes);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_utf8_data_piece_set "]]},"d2cae744":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_nat16 = 1637"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat16 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_nat16 = 1637"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_nat16"]]},"ff9c6bbb":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_ordering_less_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_ordering_less_make"]]},"ac5a1771":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\ndouble (*modern_node_representation_float64_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float64_get "]]},"6b99fd99":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_nat64 = 1415"],["paragraph","\n\nValue type (abstract notation)\n\nnat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_nat64 = 1415"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_nat64"]]},"40e1a953":{"title":"Builtin identifiers ∙ Sigma value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_sigma_field_value = 1984"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (b : a -\u003e universe 0)-\u003e sigma a b -\u003e a"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_sigma_field_value = 1984"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.12."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","87ffb088","Sigma value"]],["get_sigma_field_value"]]},"b640fe27":{"title":"2.5.2.4.1. C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ General | Modern Data the Reference","body":[["header",["link","12503f74","modern_node_immutable_set"]],["header",["link","3b97abbe","modern_node_canonical_hash_set"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ","General"]]},"2f7f356c":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_named_type_content_type_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_named_type_content_type_get"]]},"c8935e87":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_to_context_add(modern_library *library, modern_context *context, modern *node);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_to_context_add"]]},"49de9175":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_serialize_vfile(modern_library *library, modern *value, modern_context *context, struct modern_vfile *vfile, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_vfile"]]},"7a3f4166":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_float64 = 1329"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_float64 = 1329"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_float64"]]},"5169ceb9":{"title":"C library ∙ Library instances ∙ Allocators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_allocator_free)(void *client_state, void *memory);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.3."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","4ab6f44b","Allocators"]],["modern_allocator_free"]]},"38ec2f70":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_nat32 = 390"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e maybe nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_nat32 = 390"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_nat32"]]},"dd366eaa":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_blob_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_blob_type_make "]]},"5dca254f":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_int32 = 1570"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e int32 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_int32 = 1570"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_int32"]]},"f4d4503b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_lambda_make)(modern_library *library, void *content);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_lambda_make "]]},"ec10f0fa":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arctangent_fraction_float64 = 961"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arctangent_fraction_float64 = 961"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arctangent_fraction_float64"]]},"447dc0bd":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_float32 = 200"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_float32 = 200"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_float32"]]},"8a6a79c5":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_int16 = 385"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_int16 = 385"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_int16"]]},"fcb65d5c":{"title":"1. Semantics | Modern Data the Reference","body":[["header",["link","353e5089","1.1."," ","Overview"]],["header",["link","d5e542ff","1.2."," ","Scoping"]],["header",["link","d0db2421","1.3."," ","Cyclic structures"]],["header",["link","790073f0","1.4."," ","Mutation"]],["header",["link","63acf1ea","1.5."," ","Evaluation"]],["header",["link","15ae97b7","1.6."," ","Canonical form"]],["header",["link","f95aa286","1.7."," ","Hashing"]],["header",["link","74ee96d0","1.8."," ","Values and types"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1."," ","Semantics"]]},"1f52e94f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat64_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_nat64_type_make"]]},"5381979f":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat16_make)(modern_library *library, uint16_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat16_make "]]},"42ce4736":{"title":"2.4.2.2. C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header",["link","3ffab696","modern_vfile_memory_allocating_make"]],["header",["link","8aa0fce4","modern_vfile_memory_allocating_initialize"]],["header",["link","3eb088e5","modern_vfile_memory_allocating_finalize"]],["header",["link","73da3d4a","modern_vfile_memory_allocating_bytes_get"]],["header",["link","e427ed9e","modern_vfile_memory_allocating_data_piece_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ","Memory managed by the system"]]},"ccc88296":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_nat16 = 293"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e maybe nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_nat16 = 293"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_nat16"]]},"8730c33a":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_nat16 = 1290"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_nat16 = 1290"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_nat16"]]},"29afc48e":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int8_type = 26"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int8_type"]]},"cede3020":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_int64 = 1223"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_int64 = 1223"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_int64"]]},"9af249c4":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","double(*modern_node_float64_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_float64_get"]]},"933c3b63":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_int8 = 1345"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_int8 = 1345"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_int8"]]},"f95aa286":{"title":"1.7. Semantics ∙ Hashing | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.7."," ",["link","fcb65d5c","Semantics"]," ∙ ","Hashing"]]},"8e2b2076":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arctangent_fraction_float32 = 960"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arctangent_fraction_float32 = 960"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arctangent_fraction_float32"]]},"58bf455f":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_int8 = 448"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_int8 = 448"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_int8"]]},"f4fb36b2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_int32 = 1189"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_int32 = 1189"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_int32"]]},"22325861":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint64_t (*modern_node_representation_backreference_index_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_backreference_index_get "]]},"fa848716":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_nat16 = 1195"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_nat16 = 1195"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_nat16"]]},"736a87a6":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_nat64 = 199"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_nat64 = 199"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_nat64"]]},"e980ac8e":{"title":"C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_deserialize_memory(modern_library *library, modern_context *context, uint8_t *data, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","126a6c7a","Deserialization"]],["modern_deserialize_memory"]]},"4ccbd678":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_nat32_set)(modern_library *library, void *node, uint32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_nat32_set"]]},"5e662c39":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint8_t *modern_serialize_memory_allocating(modern_library *library, modern *value, modern_context *context, size_t *length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_memory_allocating"]]},"9b30dd92":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_name = 2304"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0) \nTODO  ???\n"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_name = 2304"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_name"]]},"8f20d6b7":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","square_root_float32 = 576"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_square_root_float32 = 576"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["square_root_float32"]]},"c4f22aba":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_nat64 = 1294"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_nat64 = 1294"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_nat64"]]},"ecd15a5a":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_universe_type_make)(modern_library *library, uint64_t level);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_universe_type_make"]]},"e62af2dc":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_nat8 = 1225"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_nat8 = 1225"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_nat8"]]},"f2ffc44d":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_float64 = 169"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_float64 = 169"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_float64"]]},"bea8b63b":{"title":"3.8. Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header",["link","4a4b793d","round_towards_zero_float32_int8"]],["header",["link","32c2484c","round_towards_zero_float64_int8"]],["header",["link","abe0f3a0","round_towards_zero_float32_int16"]],["header",["link","77f86276","round_towards_zero_float64_int16"]],["header",["link","5c57ece2","round_towards_zero_float32_int32"]],["header",["link","f4fb36b2","round_towards_zero_float64_int32"]],["header",["link","555b1e48","round_towards_zero_float32_int64"]],["header",["link","a0901b48","round_towards_zero_float64_int64"]],["header",["link","57f0f39c","round_towards_zero_float32_nat8"]],["header",["link","d0dd1235","round_towards_zero_float64_nat8"]],["header",["link","18742325","round_towards_zero_float32_nat16"]],["header",["link","fa848716","round_towards_zero_float64_nat16"]],["header",["link","61f4f571","round_towards_zero_float32_nat32"]],["header",["link","205af150","round_towards_zero_float64_nat32"]],["header",["link","4bca3315","round_towards_zero_float32_nat64"]],["header",["link","207f59f8","round_towards_zero_float64_nat64"]],["header",["link","4ed2c6bf","round_towards_zero_float32_float32"]],["header",["link","d871752c","round_towards_zero_float64_float64"]],["header",["link","94c13860","round_away_from_zero_float32_int8"]],["header",["link","e37d1850","round_away_from_zero_float64_int8"]],["header",["link","584370cd","round_away_from_zero_float32_int16"]],["header",["link","a2c79c5e","round_away_from_zero_float64_int16"]],["header",["link","21e97d46","round_away_from_zero_float32_int32"]],["header",["link","bb1f1087","round_away_from_zero_float64_int32"]],["header",["link","5eaae1f5","round_away_from_zero_float32_int64"]],["header",["link","cede3020","round_away_from_zero_float64_int64"]],["header",["link","3ef741c8","round_away_from_zero_float32_nat8"]],["header",["link","e62af2dc","round_away_from_zero_float64_nat8"]],["header",["link","bbab575b","round_away_from_zero_float32_nat16"]],["header",["link","38ca891f","round_away_from_zero_float64_nat16"]],["header",["link","605afc30","round_away_from_zero_float32_nat32"]],["header",["link","299c78a2","round_away_from_zero_float64_nat32"]],["header",["link","af4320b2","round_away_from_zero_float32_nat64"]],["header",["link","87f38654","round_away_from_zero_float64_nat64"]],["header",["link","2d28b044","round_away_from_zero_float32_float32"]],["header",["link","8d6938ad","round_away_from_zero_float64_float64"]],["header",["link","aa483fe9","round_towards_even_float32_int8"]],["header",["link","bdcb5dd9","round_towards_even_float64_int8"]],["header",["link","9edcf160","round_towards_even_float32_int16"]],["header",["link","5a57647e","round_towards_even_float64_int16"]],["header",["link","5418409a","round_towards_even_float32_int32"]],["header",["link","996e369e","round_towards_even_float64_int32"]],["header",["link","9327bbf5","round_towards_even_float32_int64"]],["header",["link","2d929221","round_towards_even_float64_int64"]],["header",["link","bb9b8ad2","round_towards_even_float32_nat8"]],["header",["link","67108515","round_towards_even_float64_nat8"]],["header",["link","f61c8ee0","round_towards_even_float32_nat16"]],["header",["link","54b04657","round_towards_even_float64_nat16"]],["header",["link","d658c2e3","round_towards_even_float32_nat32"]],["header",["link","18cf45a3","round_towards_even_float64_nat32"]],["header",["link","4e3a1d84","round_towards_even_float32_nat64"]],["header",["link","95351019","round_towards_even_float64_nat64"]],["header",["link","298064f2","round_towards_even_float32_float32"]],["header",["link","cd9f964f","round_towards_even_float64_float64"]],["header",["link","7416569c","round_towards_odd_float32_int8"]],["header",["link","6025e180","round_towards_odd_float64_int8"]],["header",["link","5bf9233b","round_towards_odd_float32_int16"]],["header",["link","92a1bbb0","round_towards_odd_float64_int16"]],["header",["link","57d7e333","round_towards_odd_float32_int32"]],["header",["link","64eb29d3","round_towards_odd_float64_int32"]],["header",["link","ee7e45e0","round_towards_odd_float32_int64"]],["header",["link","6f2cb0e7","round_towards_odd_float64_int64"]],["header",["link","99f37fdc","round_towards_odd_float32_nat8"]],["header",["link","e642ccac","round_towards_odd_float64_nat8"]],["header",["link","8730c33a","round_towards_odd_float32_nat16"]],["header",["link","756d2da7","round_towards_odd_float64_nat16"]],["header",["link","db2226e8","round_towards_odd_float32_nat32"]],["header",["link","8c3c974e","round_towards_odd_float64_nat32"]],["header",["link","c4f22aba","round_towards_odd_float32_nat64"]],["header",["link","4ccb6561","round_towards_odd_float64_nat64"]],["header",["link","adfc76c2","round_towards_odd_float32_float32"]],["header",["link","4b41d550","round_towards_odd_float64_float64"]],["header",["link","752b81bb","ceiling_float32_int8"]],["header",["link","1130a0ab","ceiling_float64_int8"]],["header",["link","f35510b2","ceiling_float32_int16"]],["header",["link","6a5daa90","ceiling_float64_int16"]],["header",["link","d567cce4","ceiling_float32_int32"]],["header",["link","50ab78d0","ceiling_float64_int32"]],["header",["link","d4b0a0bf","ceiling_float32_int64"]],["header",["link","3ea1d421","ceiling_float64_int64"]],["header",["link","9b9a7fc7","ceiling_float32_nat8"]],["header",["link","68de7872","ceiling_float64_nat8"]],["header",["link","245c68c1","ceiling_float32_nat16"]],["header",["link","1d69d955","ceiling_float64_nat16"]],["header",["link","2fbaaf99","ceiling_float32_nat32"]],["header",["link","bb4c38b8","ceiling_float64_nat32"]],["header",["link","aa3bf335","ceiling_float32_nat64"]],["header",["link","a6afe18a","ceiling_float64_nat64"]],["header",["link","be524fc0","ceiling_float32_float32"]],["header",["link","7a3f4166","ceiling_float64_float64"]],["header",["link","f5b438cc","floor_float32_int8"]],["header",["link","933c3b63","floor_float64_int8"]],["header",["link","367a4000","floor_float32_int16"]],["header",["link","dfcf93f4","floor_float64_int16"]],["header",["link","3eef288b","floor_float32_int32"]],["header",["link","184e8bee","floor_float64_int32"]],["header",["link","1bcca340","floor_float32_int64"]],["header",["link","a42323d9","floor_float64_int64"]],["header",["link","a530bcb3","floor_float32_nat8"]],["header",["link","ea2f20b1","floor_float64_nat8"]],["header",["link","fc7f32ed","floor_float32_nat16"]],["header",["link","a2f82685","floor_float64_nat16"]],["header",["link","002d71dd","floor_float32_nat32"]],["header",["link","71bda8e8","floor_float64_nat32"]],["header",["link","15d59072","floor_float32_nat64"]],["header",["link","8b79168a","floor_float64_nat64"]],["header",["link","49e9d2f5","floor_float32_float32"]],["header",["link","8b402897","floor_float64_float64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Rounding"]]},"a2f18c48":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_satisfies_type_predicate_set)(modern_library *library, void *value, void *predicate);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_satisfies_type_predicate_set"]]},"a8ed1453":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_int16 = 10290"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_int16 = 10290"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_int16"]]},"173e46cb":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_float64_set)(modern_library *library, void *node, double value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_float64_set"]]},"731aebbb":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","encode_utf8 = 1728"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e maybe utf8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_encode_utf8 = 1728"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["encode_utf8"]]},"dba31f55":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_int64 = 1443"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e nat8 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_int64 = 1443"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_int64"]]},"3640b8a1":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_bool = 128"],["paragraph","\n\nValue type (abstract notation)\nbool -\u003e bool -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_bool = 128"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_bool"]]},"9044cdb7":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_maybe_type_content_type = 2528"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_maybe_type_content_type = 2528"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_maybe_type_content_type"]]},"32c2484c":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_int8 = 1185"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_int8 = 1185"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_int8"]]},"57f0f39c":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_nat8 = 1192"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_nat8 = 1192"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_nat8"]]},"82b43d5e":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_int8 = 512"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_int8 = 512"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_int8"]]},"db9f1092":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_maybe_just_content_set)(modern_library *library, void *value, void *content_value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_just_content_set "]]},"614f9fcb":{"title":"2.5.1. C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header",["link","5b9daa3f","modern_node_type"]],["header",["link","98f87da6","modern_node_type_bool_value_false"]],["header",["link","f17dc21e","modern_node_type_bool_value_true"]],["header",["link","bbf07097","modern_node_type_ordering_value_less"]],["header",["link","d74e3349","modern_node_type_ordering_value_equal"]],["header",["link","b87af966","modern_node_type_ordering_value_greater"]],["header",["link","cad0d431","modern_node_type_maybe_value_nothing"]],["header",["link","1ceabaa3","modern_node_type_maybe_value_just"]],["header",["link","ba3f418b","modern_node_type_int8_value"]],["header",["link","d64c8a9d","modern_node_type_int16_value"]],["header",["link","76d32398","modern_node_type_int32_value"]],["header",["link","d82b4fc7","modern_node_type_int64_value"]],["header",["link","90a0d243","modern_node_type_nat8_value"]],["header",["link","c2907f92","modern_node_type_nat16_value"]],["header",["link","4498ce74","modern_node_type_nat32_value"]],["header",["link","aad26f80","modern_node_type_nat64_value"]],["header",["link","a566522b","modern_node_type_float32_value"]],["header",["link","9544c538","modern_node_type_float64_value"]],["header",["link","d32b25e9","modern_node_type_utf8_value"]],["header",["link","73388ca0","modern_node_type_blob_value"]],["header",["link","7c807630","modern_node_type_sigma_value"]],["header",["link","6e29bfb2","modern_node_type_name_value"]],["header",["link","85908a30","modern_node_type_named_value"]],["header",["link","c7f348e0","modern_node_type_bool_type"]],["header",["link","e8604f4e","modern_node_type_ordering_type"]],["header",["link","2166f034","modern_node_type_maybe_type"]],["header",["link","29afc48e","modern_node_type_int8_type"]],["header",["link","40a534e7","modern_node_type_int16_type"]],["header",["link","d49b5340","modern_node_type_int32_type"]],["header",["link","bc731c6a","modern_node_type_int64_type"]],["header",["link","ab6bbaeb","modern_node_type_nat8_type"]],["header",["link","397bd37b","modern_node_type_nat16_type"]],["header",["link","c0d0ab9a","modern_node_type_nat32_type"]],["header",["link","9da5b649","modern_node_type_nat64_type"]],["header",["link","f0dd9cbf","modern_node_type_float32_type"]],["header",["link","fd941523","modern_node_type_float64_type"]],["header",["link","bc53eb96","modern_node_type_utf8_type"]],["header",["link","1f8fe3db","modern_node_type_blob_type"]],["header",["link","c15c4286","modern_node_type_function_type"]],["header",["link","be6ccb7b","modern_node_type_sigma_type"]],["header",["link","9620d0f5","modern_node_type_name_type"]],["header",["link","9f30c77f","modern_node_type_named_type"]],["header",["link","39e94f62","modern_node_type_universe_type"]],["header",["link","7a601092","modern_node_type_satisfies_type"]],["header",["link","22826ee9","modern_node_type_lambda"]],["header",["link","b52f80c3","modern_node_type_apply"]],["header",["link","3be98052","modern_node_type_type_family"]],["header",["link","4ab158d6","modern_node_type_let"]],["header",["link","4787d2d0","modern_node_type_backreference"]],["header",["link","47fe5069","modern_node_type_builtin"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Node Types"]]},"3e1499b2":{"title":"3.6. Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header",["link","1d634930","pi_float32"]],["header",["link","4c4c4686","pi_float64"]],["header",["link","8f20d6b7","square_root_float32"]],["header",["link","20fd156b","square_root_float64"]],["header",["link","204122e6","natural_logarithm_float32"]],["header",["link","d4ce355e","natural_logarithm_float64"]],["header",["link","ba3b651a","e_to_the_x_float32"]],["header",["link","693ffc22","e_to_the_x_float64"]],["header",["link","154ea435","two_to_the_x_float32"]],["header",["link","2d9d4218","two_to_the_x_float64"]],["header",["link","262bfd91","x_to_the_y_float32"]],["header",["link","a16d4030","x_to_the_y_float64"]],["header",["link","e66191ea","logarithm_base_x_float32"]],["header",["link","c7312ab1","logarithm_base_x_float64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Logarithm and exponent"]]},"e342f1e9":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_int16 = 1569"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e int16 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_int16 = 1569"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_int16"]]},"8cab3cb1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_type_family_item_get)(modern_library *library, void *value, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_type_family_item_get"]]},"9abf441f":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the client | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_vfile *modern_vfile_memory_buffer_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","e83e3ae3","Memory managed by the client"]],["modern_vfile_memory_buffer_make"]]},"bdcb5dd9":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_int8 = 1249"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_int8 = 1249"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_int8"]]},"f8a99d88":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_sigma_type = 2400"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (b : a -\u003e universe 0)-\u003e universe 0"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_sigma_type = 2400"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_sigma_type"]]},"bb506db6":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_type_family_item_remove)(modern_library *library, void *value, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_type_family_item_remove "]]},"e0926a6d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_lambda_content_set)(modern_library *library, void *value, void *content);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_lambda_content_set"]]},"bcf6f048":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_let_item_remove)(modern_library *library, void *value, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_item_remove "]]},"3f34774e":{"title":"2. C library | Modern Data the Reference","body":[["paragraph","The C-based library is a major part of the Modern Data system.  It is the foundation for the library in all other languages except JavaScript, due to the ease of linking against and using C.  It is designed to allow pieces of the system to be swapped out with ease, not just the allocator but the actual representation of nodes.  There is a fair amount of setup that needs to be done in order to use it, so it is recommended to read these overview sections in order."],["paragraph","In order to be considerate about namespace, all symbols that the library exports start with the string \nmodern_\n."],["header",["link","5d9b1a34","2.1."," ","Library instances"]],["header",["link","4be66453","2.2."," ","Memory management"]],["header",["link","729bfa8a","2.3."," ","Hashing"]],["header",["link","fb148e11","2.4."," ","Virtual files"]],["header",["link","dcbec5c4","2.5."," ","Node-based object model"]],["header",["link","fa6e2bb8","2.6."," ","Streaming model"]],["header",["link","9f37d149","2.7."," ","Predefined hashes"]],["header",["link","3828cfb0","2.8."," ","Builtin identifiers"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2."," ","C library"]]},"74c277d5":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint64_t (*modern_node_representation_nat64_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat64_get "]]},"26bfb010":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arcsine_float32 = 864"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arcsine_float32 = 864"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arcsine_float32"]]},"77f86276":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_int16 = 1187"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_int16 = 1187"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_int16"]]},"3293f042":{"title":"C library ∙ Virtual files ∙ Predefined ∙ POSIX-style file descriptors | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_vfile_fd_finalize(modern_library *library, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","1b60cd5b","POSIX-style file descriptors"]],["modern_vfile_fd_finalize"]]},"f0cb83c4":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_float64 = 353"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_float64 = 353"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_float64"]]},"57107061":{"title":"2.5.2.4. C library ∙ Node-based object model ∙ Callbacks ∙ Mutation | Modern Data the Reference","body":[["header",["link","b640fe27","2.5.2.4.1."," ","General"]],["header",["link","87e59ff8","2.5.2.4.2."," ","Values"]],["header",["link","b1d9f5d5","2.5.2.4.3."," ","Types"]],["header",["link","4874b022","2.5.2.4.4."," ","Combinators"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ","Mutation"]]},"215cf189":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_cosine_float32 = 1024"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_cosine_float32 = 1024"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_cosine_float32"]]},"eae0c2b1":{"title":"3.13. Builtin identifiers ∙ Named value | Modern Data the Reference","body":[["header",["link","573e1b20","get_named_value"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.13."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Named value"]]},"b87af966":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_ordering_value_greater = 5"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_ordering_value_greater"]]},"fd269253":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_nat8 = 10257"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_nat8 = 10257"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_nat8"]]},"a5f45bb8":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_int8_set)(modern_library *library, void *node, int8_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int8_set "]]},"7e7c26c2":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_int8 = 10289"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_int8 = 10289"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_int8"]]},"a14d7657":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","tangent_float64 = 833"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_tangent_float64 = 833"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["tangent_float64"]]},"f4177617":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_utf8 = 10297"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_utf8 = 10297"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_utf8"]]},"4d47e4b3":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_lambda_make)(modern_library *library, void *content);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_lambda_make"]]},"b0dfb6f2":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_sigma_type_field_type_set)(modern_library *library, void *value, void *field_type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_sigma_type_field_type_set"]]},"9fc04536":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_nat8 = 1636"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_nat8 = 1636"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_nat8"]]},"bdb784e2":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int16_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int16_type_make "]]},"82f7cb20":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_byte_blob = 1824"],["paragraph","\n\nValue type (abstract notation)\n\nblob -\u003e nat64 -\u003e maybe nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_byte_blob = 1824"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["get_byte_blob"]]},"c0bcc0d5":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Stdio files | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid modern_vfile_stdio_finalize(modern_library *library, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","16c56a48","Stdio files"]],["modern_vfile_stdio_finalize"]]},"e51ee098":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_maybe_just_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_maybe_just_is_next"]]},"e75e1452":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_nat16 = 229"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e maybe nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_nat16 = 229"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_nat16"]]},"709cdfcd":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_universe_type_level = 2240"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_universe_type_level = 2240"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_universe_type_level"]]},"d658c2e3":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_nat32 = 1260"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_nat32 = 1260"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_nat32"]]},"756d2da7":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_nat16 = 1291"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_nat16 = 1291"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_nat16"]]},"2fbaaf99":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_nat32 = 1324"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_nat32 = 1324"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_nat32"]]},"2ea16357":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_set_type_family_item_add)(modern_library *library, void *value, void *item, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_set_type_family_item_add"]]},"22e798c8":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_nat8 = 10243"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_nat8 = 10243"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_nat8"]]},"39e94f62":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_universe_type = 42"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_universe_type"]]},"4ce65ee9":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sine_float64 = 769"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sine_float64 = 769"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["sine_float64"]]},"3820d24c":{"title":"C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_processor_step)(void *processor_state, struct modern_stream *stream, void *stream_state, struct modern_vfile *vfile, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","b038c785","Callbacks"]],["modern_processor_step"]]},"5d46999b":{"title":"C library ∙ Virtual files ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nssize_t(*modern_vfile_write)(void *vfile_state, uint8_t *buffer, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","952df493","Callbacks"]],["modern_vfile_write"]]},"f6754e5f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint16_t(*modern_node_nat16_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_nat16_get"]]},"b038c785":{"title":"2.6.1.1. C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header",["link","7ca0f6c0","modern_processor"]],["header",["link","27a57bf4","modern_processor_initialize"]],["header",["link","7865b23c","modern_processor_finalize"]],["header",["link","3820d24c","modern_processor_step"]],["header",["link","c89eebee","modern_processor_run"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ","Callbacks"]]},"3cd7b0ed":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_apply_make)(modern_library *library, void *left, void *right);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_apply_make"]]},"aabc8779":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_float32)(struct modern_processor *processor, void *processor_state, void *stream_state, float value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_float32"]]},"8f95a0d7":{"title":"C library ∙ Virtual files ∙ Predefined ∙ POSIX-style file descriptors | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *modern_vfile_fd_initialize(modern_library *library, int fd);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","1b60cd5b","POSIX-style file descriptors"]],["modern_vfile_fd_initialize"]]},"74409529":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat8_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_nat8_type_make"]]},"e393251b":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_universe_type = 2464"],["paragraph","\n\nValue type (abstract notation)\n\n(level : nat64) -\u003e universe level"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_universe_type = 2464"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_universe_type"]]},"c2f3221e":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_utf8_data)(struct modern_processor *processor, void *processor_state, void *stream_state, uint8_t *data, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_utf8_data"]]},"16abbd46":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_satisfies_type_supertype_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_satisfies_type_supertype_get"]]},"729bfa8a":{"title":"2.3. C library ∙ Hashing | Modern Data the Reference","body":[["header",["link","63aaa17d","modern_hash"]],["header",["link","8e94cf89","modern_hash_compute"]],["header",["link","406ec1f2","modern_hash_child_compute"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.3."," ",["link","3f34774e","C library"]," ∙ ","Hashing"]]},"19c56d37":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_function_type_result_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_function_type_result_get"]]},"3752a9f5":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_float32 = 264"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_float32 = 264"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_float32"]]},"d3ea97c6":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_backreference_index_set)(modern_library *library, void *value, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_backreference_index_set"]]},"a8004948":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_int8 = 480"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_int8 = 480"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_int8"]]},"6528e54e":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_int32 = 290"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_int32 = 290"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_int32"]]},"35d798e9":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint64_t (*modern_node_representation_type_family_count_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_type_family_count_get "]]},"e66191ea":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","logarithm_base_x_float32 = 736"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_logarithm_base_x_float32 = 736"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["logarithm_base_x_float32"]]},"d3c7bf1f":{"title":"2.6.3.1. C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header",["link","ce21cb50","modern_stream"]],["header",["link","b9e643af","modern_stream_initialize"]],["header",["link","1ed96eee","modern_stream_finalize"]],["header",["link","4b50f42a","modern_stream_start"]],["header",["link","ce5d9d75","modern_stream_type_magic_number"]],["header",["link","406862b2","modern_stream_name_definition"]],["header",["link","e484c0b0","modern_stream_value_definition_is_next"]],["header",["link","c75aa2d5","modern_stream_type_definition_bool"]],["header",["link","948e30e1","modern_stream_type_definition_ordering"]],["header",["link","18148bdf","modern_stream_type_definition_maybe_is_next"]],["header",["link","caaec47a","modern_stream_type_definition_int8"]],["header",["link","5490cd41","modern_stream_type_definition_int16"]],["header",["link","de80b31e","modern_stream_type_definition_int32"]],["header",["link","ab48b98f","modern_stream_type_definition_int64"]],["header",["link","d71113af","modern_stream_type_definition_nat8"]],["header",["link","516bc0e2","modern_stream_type_definition_nat16"]],["header",["link","c340332d","modern_stream_type_definition_nat32"]],["header",["link","e4765d34","modern_stream_type_definition_nat64"]],["header",["link","f043c951","modern_stream_type_definition_float32"]],["header",["link","83d4e194","modern_stream_type_definition_float64"]],["header",["link","40e77ef4","modern_stream_type_definition_utf8"]],["header",["link","40354576","modern_stream_type_definition_blob"]],["header",["link","f84cd0d9","modern_stream_type_definition_function_is_next"]],["header",["link","98a7c9b6","modern_stream_type_definition_sigma_is_next"]],["header",["link","49aecaf4","modern_stream_type_definition_named_is_next"]],["header",["link","c0229d9b","modern_stream_type_definition_universe"]],["header",["link","e38bec2d","modern_stream_bool_false"]],["header",["link","9485b148","modern_stream_bool_true"]],["header",["link","929ac1d2","modern_stream_ordering_less"]],["header",["link","426e149a","modern_stream_ordering_equal"]],["header",["link","b7a34ab4","modern_stream_ordering_greater"]],["header",["link","20534f90","modern_stream_maybe_nothing"]],["header",["link","e51ee098","modern_stream_maybe_just_is_next"]],["header",["link","5217cfd2","modern_stream_int8"]],["header",["link","85facafd","modern_stream_int16"]],["header",["link","485b33a2","modern_stream_int32"]],["header",["link","8df31dee","modern_stream_int64"]],["header",["link","5f308fa0","modern_stream_nat8"]],["header",["link","e33dfa18","modern_stream_nat16"]],["header",["link","44d0625b","modern_stream_nat32"]],["header",["link","f9df1956","modern_stream_nat64"]],["header",["link","aabc8779","modern_stream_float32"]],["header",["link","39f45ce0","modern_stream_float64"]],["header",["link","8853ac42","modern_stream_utf8_start"]],["header",["link","c2f3221e","modern_stream_utf8_data"]],["header",["link","b0ffe1de","modern_stream_utf8_end"]],["header",["link","d9284040","modern_stream_blob_start"]],["header",["link","c9bfaf5b","modern_stream_blob_data"]],["header",["link","9b10625e","modern_stream_blob_end"]],["header",["link","2e36bae8","modern_stream_sigma_is_next"]],["header",["link","3e48e1e4","modern_stream_named_value_is_next"]],["header",["link","a68b3ef1","modern_stream_lambda_is_next"]],["header",["link","a0dad071","modern_stream_apply_is_next"]],["header",["link","1b737d1a","modern_stream_type_family_is_next"]],["header",["link","2a70fb79","modern_stream_let_is_next"]],["header",["link","9b75ef86","modern_stream_backreference_is_next"]],["header",["link","55726b35","modern_stream_builtin_is_next"]],["header",["link","8391ec73","modern_stream_item_from_context_is_next"]],["header",["link","2e4523cd","modern_stream_end"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ","Callbacks"]]},"c59daf62":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_function_type = 2368"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e universe 0 -\u003e universe 0"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_function_type = 2368"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_function_type"]]},"f84cd0d9":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_function_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_function_is_next"]]},"12503f74":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_immutable_set)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b640fe27","General"]],["modern_node_immutable_set"]]},"a42323d9":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_int64 = 1351"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_int64 = 1351"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_int64"]]},"74ee96d0":{"title":"1.8. Semantics ∙ Values and types | Modern Data the Reference","body":[["header",["link","26a730fe","1.8.1."," ","Booleans"]],["header",["link","cf9750ed","1.8.2."," ","Maybes"]],["header",["link","e013d881","1.8.3."," ","Integers"]],["header",["link","e0a0e51f","1.8.4."," ","Natural numbers"]],["header",["link","f0a5fb67","1.8.5."," ","Floating-point numbers"]],["header",["link","5333a452","1.8.6."," ","Text"]],["header",["link","cc2c7c14","1.8.7."," ","Binary large objects"]],["header",["link","adf7b580","1.8.8."," ","Aggregate values"]],["header",["link","1f14d0c0","1.8.9."," ","Builtin values"]],["header",["link","8d7a2f3d","1.8.10."," ","Predefined values"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8."," ",["link","fcb65d5c","Semantics"]," ∙ ","Values and types"]]},"c88e55f0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint32_t (*modern_node_representation_nat32_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat32_get "]]},"283b38d4":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_sigma_type_field_type = 2144"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_sigma_type_field_type = 2144"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_sigma_type_field_type"]]},"9da5b649":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat64_type = 33"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat64_type"]]},"b23977e7":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_nat16 = 1573"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat16 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_nat16 = 1573"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_nat16"]]},"cd125e73":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_int16 = 1441"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e nat8 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_int16 = 1441"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_int16"]]},"4d7f9f71":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_nat64 = 1543"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat8 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_nat64 = 1543"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_nat64"]]},"be46e3a2":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_context *modern_copy_context(modern_library *library, modern_context *context);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_copy_context"]]},"bc731c6a":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int64_type = 29"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int64_type"]]},"80d7aba9":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_int32 = 131"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_int32 = 131"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_int32"]]},"14dfa666":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_named_value_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_named_value_get"]]},"e8604f4e":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_ordering_type = 24"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_ordering_type"]]},"cff03eb7":{"title":"C library ∙ Virtual files ∙ Predefined ∙ POSIX-style file descriptors | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_vfile *modern_vfile_fd_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","1b60cd5b","POSIX-style file descriptors"]],["modern_vfile_fd_make"]]},"485b33a2":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_int32)(struct modern_processor *processor, void *processor_state, void *stream_state, int32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_int32"]]},"c89eebee":{"title":"C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_processor_run)(void *processor_state, struct modern_stream *stream, void *stream_state, struct modern_vfile *vfile, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","b038c785","Callbacks"]],["modern_processor_run"]]},"f0dd9cbf":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_float32_type = 34"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_float32_type"]]},"1b647394":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_named_value_make)(modern_library *library, void *type, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_value_make "]]},"2d929221":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_int64 = 1255"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_int64 = 1255"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_int64"]]},"a6afe18a":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_nat64 = 1327"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_nat64 = 1327"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_nat64"]]},"4874b022":{"title":"2.5.2.4.4. C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header",["link","e0926a6d","modern_node_lambda_content_set"]],["header",["link","ff84d3e2","modern_node_apply_left_set"]],["header",["link","8a29697a","modern_node_apply_right_set"]],["header",["link","2ea16357","modern_node_set_type_family_item_add"]],["header",["link","672768dc","modern_node_set_type_family_item_remove"]],["header",["link","65da2b3b","modern_node_set_let_item_add"]],["header",["link","6212803d","modern_node_set_let_item_remove"]],["header",["link","239217d1","modern_node_let_content_set"]],["header",["link","d3ea97c6","modern_node_backreference_index_set"]],["header",["link","9b6e9055","modern_node_builtin_identifier_set"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ","Combinators"]]},"e86f9463":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_float64_float32 = 10301"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_float64_float32 = 10301"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_float64_float32"]]},"6c62dfd2":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_nat16 = 197"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e maybe nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_nat16 = 197"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_nat16"]]},"a16d4030":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","x_to_the_y_float64 = 705"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_x_to_the_y_float64 = 705"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["x_to_the_y_float64"]]},"cfd81c5c":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_nat32 = 1382"],["paragraph","\n\nValue type (abstract notation)\n\nnat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_nat32 = 1382"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_nat32"]]},"10982cd0":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","empty_utf8 = 1952"],["paragraph","\n\nValue type (abstract notation)\n\nutf8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_empty_utf8 = 1952"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["empty_utf8"]]},"56308959":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_sigma_type_successor_set)(modern_library *library, void *value, void *successor);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_type_successor_set "]]},"e149521b":{"title":"C library ∙ Streaming model ∙ Streams ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_stream *modern_stream_output_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d78e7459","Predefined"]],["modern_stream_output_make"]]},"5de93726":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_named_type_make)(modern_library *library, struct modern_hash name, void *content_type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_type_make "]]},"3ea1d421":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_int64 = 1319"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_int64 = 1319"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_int64"]]},"4f8130fc":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint64_t (*modern_node_representation_universe_type_level_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_universe_type_level_get "]]},"5c2e60ca":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_maybe_type_make)(modern_library *library, void *content_type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_maybe_type_make"]]},"52f724ad":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_int16 = 1665"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_int16 = 1665"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_int16"]]},"b7fb81a4":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_usage)(void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_usage"]]},"f9603d47":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int64_make)(modern_library *library, int64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_int64_make"]]},"988e5be3":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_nat8 = 1604"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_nat8 = 1604"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_nat8"]]},"89ccd01a":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_int32 = 258"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_int32 = 258"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_int32"]]},"6f5499e9":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_let_item_get)(modern_library *library, void *value, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_let_item_get"]]},"9348736a":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat8_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat8_type_make "]]},"9433253d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_sigma_type_successor_set)(modern_library *library, void *value, void *successor);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_sigma_type_successor_set"]]},"494982e2":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_named_type_content_type_set)(modern_library *library, void *value, void *content_type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_named_type_content_type_set"]]},"7439f0a3":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_int16 = 10283"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_int16 = 10283"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_int16"]]},"f514b8de":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_nat8 = 10286"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_nat8 = 10286"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_nat8"]]},"50ab78d0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_int32 = 1317"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_int32 = 1317"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_int32"]]},"8823bc27":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_int32 = 226"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_int32 = 226"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_int32"]]},"906c6179":{"title":"3.10. Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header",["link","389f128f","shift_left_int8"]],["header",["link","cd125e73","shift_left_int16"]],["header",["link","9b538c74","shift_left_int32"]],["header",["link","dba31f55","shift_left_int64"]],["header",["link","a4927120","shift_left_nat8"]],["header",["link","723a8097","shift_left_nat16"]],["header",["link","4a30bc94","shift_left_nat32"]],["header",["link","772cd129","shift_left_nat64"]],["header",["link","1b1785c7","shift_right_int8"]],["header",["link","d2e017b0","shift_right_int16"]],["header",["link","1f53caaf","shift_right_int32"]],["header",["link","bb1f7d6a","shift_right_int64"]],["header",["link","7687ea3c","shift_right_nat8"]],["header",["link","8a89cdd2","shift_right_nat16"]],["header",["link","99355dac","shift_right_nat32"]],["header",["link","d487484d","shift_right_nat64"]],["header",["link","65305059","rotate_left_int8"]],["header",["link","e16860d7","rotate_left_int16"]],["header",["link","a063e391","rotate_left_int32"]],["header",["link","20504288","rotate_left_int64"]],["header",["link","605066cc","rotate_left_nat8"]],["header",["link","4149d06b","rotate_left_nat16"]],["header",["link","e470e3ec","rotate_left_nat32"]],["header",["link","c32c4c42","rotate_left_nat64"]],["header",["link","64b62f30","rotate_right_int8"]],["header",["link","d3fcbe83","rotate_right_int16"]],["header",["link","8321f210","rotate_right_int32"]],["header",["link","402d88bd","rotate_right_int64"]],["header",["link","007219eb","rotate_right_nat8"]],["header",["link","79549be3","rotate_right_nat16"]],["header",["link","607b9261","rotate_right_nat32"]],["header",["link","4d7f9f71","rotate_right_nat64"]],["header",["link","966768b0","bit_and_int8"]],["header",["link","e342f1e9","bit_and_int16"]],["header",["link","5dca254f","bit_and_int32"]],["header",["link","416197f1","bit_and_int64"]],["header",["link","a72423ef","bit_and_nat8"]],["header",["link","b23977e7","bit_and_nat16"]],["header",["link","6286d160","bit_and_nat32"]],["header",["link","699142f0","bit_and_nat64"]],["header",["link","329f455d","bit_or_int8"]],["header",["link","94b62d57","bit_or_int16"]],["header",["link","9c18d936","bit_or_int32"]],["header",["link","23c53225","bit_or_int64"]],["header",["link","988e5be3","bit_or_nat8"]],["header",["link","66d7f545","bit_or_nat16"]],["header",["link","d6c254d2","bit_or_nat32"]],["header",["link","4ea51a51","bit_or_nat64"]],["header",["link","aada8ef8","bit_xor_int8"]],["header",["link","87a542db","bit_xor_int16"]],["header",["link","76e2ead3","bit_xor_int32"]],["header",["link","94c040e2","bit_xor_int64"]],["header",["link","9fc04536","bit_xor_nat8"]],["header",["link","d2cae744","bit_xor_nat16"]],["header",["link","b15000ee","bit_xor_nat32"]],["header",["link","151849d9","bit_xor_nat64"]],["header",["link","b126121a","bit_not_int8"]],["header",["link","52f724ad","bit_not_int16"]],["header",["link","ccd94088","bit_not_int32"]],["header",["link","94b94ea7","bit_not_int64"]],["header",["link","3b2ab590","bit_not_nat8"]],["header",["link","f9ecbf10","bit_not_nat16"]],["header",["link","748eccc8","bit_not_nat32"]],["header",["link","ef2e72f4","bit_not_nat64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Bitwise"]]},"94c040e2":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_int64 = 1635"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e int64 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_int64 = 1635"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_int64"]]},"20c9f0ba":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_named_value = 2336"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e name -\u003e universe 0 \nTODO  ???\n"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_named_value = 2336"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_named_value"]]},"61b07337":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_from_context_get(modern_library *library, modern_context *context, struct modern_hash *hash);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_from_context_get"]]},"881f473b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_type_field_type_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_type_field_type_get "]]},"5c57ece2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_int32 = 1188"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_int32 = 1188"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_int32"]]},"f13295e2":{"title":"3.3. Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header",["link","3640b8a1","equal_to_bool"]],["header",["link","492d6ecf","equal_to_int8"]],["header",["link","733c25f1","equal_to_int16"]],["header",["link","80d7aba9","equal_to_int32"]],["header",["link","a670b483","equal_to_int64"]],["header",["link","1bbc36e6","equal_to_nat8"]],["header",["link","1ca45eab","equal_to_nat16"]],["header",["link","8f8c755a","equal_to_nat32"]],["header",["link","c3409832","equal_to_nat64"]],["header",["link","51beee50","equal_to_float32"]],["header",["link","2a5d25f3","equal_to_float64"]],["header",["link","1eab6636","equal_to_name"]],["header",["link","7aa97dfb","equal_to_utf8"]],["header",["link","1c25662f","equal_to_blob"]],["header",["link","a78f265e","equal_to_ordering"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Equality"]]},"ffe82695":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int16_make)(modern_library *library, int16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_int16_make"]]},"3eef288b":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_int32 = 1348"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_int32 = 1348"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_int32"]]},"00423d8d":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_nat32 = 1414"],["paragraph","\n\nValue type (abstract notation)\n\nnat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_nat32 = 1414"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_nat32"]]},"492d6ecf":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_int8 = 129"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_int8 = 129"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_int8"]]},"4ab6f44b":{"title":"2.1.3. C library ∙ Library instances ∙ Allocators | Modern Data the Reference","body":[["header",["link","d31241a2","modern_allocator"]],["header",["link","9364e92d","modern_allocator_alloc"]],["header",["link","5169ceb9","modern_allocator_free"]],["header",["link","53c59bff","modern_allocator_realloc"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.3."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ","Allocators"]]},"43bac615":{"title":"1.8.8.1. Semantics ∙ Values and types ∙ Aggregate values ∙ Why sigma? | Modern Data the Reference","body":[["paragraph","An early version of Modern Data featured separate primitives for structures (also called records), arrays, and unions.  A point in favor of this approach is that it makes the job of graphical editors easier, because they dont need to do special logic to determine this value is an array, for example.  However, it was unclear how to fit dependency into this scheme.  Adding a dependent pair type solves this problem but makes the other types redundant, and because the other types can all be built out of dependent pairs as well, the editors task is actually still just as hard.  So the decision was made to drop the other types and just build in terms of the dependent pair, which, to give it greater prominence, was given its alternate name of sigma."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.8.1."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ",["link","adf7b580","Aggregate values"]," ∙ ","Why sigma?"]]},"68de7872":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_nat8 = 1321"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_nat8 = 1321"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_nat8"]]},"c8b4d44d":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_nat32 = 10245"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_nat32 = 10245"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_nat32"]]},"a7e79ed1":{"title":"Builtin identifiers ∙ Logic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","not_bool = 96"],["paragraph","\nValue type (abstract notation)\nbool -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_not_bool = 96"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.2."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f3a2e7e0","Logic"]],["not_bool"]]},"b460d9c3":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_nat16 = 165"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_nat16 = 165"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_nat16"]]},"a553ffbe":{"title":"2.5.2.2.3. C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header",["link","caeacd8f","modern_node_maybe_type_content_type_get"]],["header",["link","5230ab23","modern_node_function_type_parameter_get"]],["header",["link","19c56d37","modern_node_function_type_result_get"]],["header",["link","2b5683a4","modern_node_sigma_type_field_type_get"]],["header",["link","55e1506e","modern_node_sigma_type_successor_get"]],["header",["link","909d87df","modern_node_named_type_name_get"]],["header",["link","2f7f356c","modern_node_named_type_content_type_get"]],["header",["link","1e4051d6","modern_node_universe_type_level_get"]],["header",["link","16abbd46","modern_node_satisfies_type_supertype_get"]],["header",["link","46f271b5","modern_node_satisfies_type_predicate_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ","Types"]]},"6753696c":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint64_t (*modern_node_representation_let_count_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_count_get "]]},"6c482475":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_nat8_set)(modern_library *library, void *node, uint8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_nat8_set"]]},"562142c0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_lambda_content_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_lambda_content_get "]]},"2f6fb021":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_allocator *modern_library_allocator_get(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_allocator_get"]]},"7043c1f1":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_nat8 = 164"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_nat8 = 164"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_nat8"]]},"a181f1ba":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nint64_t (*modern_node_representation_int64_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int64_get "]]},"c0003f6e":{"title":"2.5.3. C library ∙ Node-based object model ∙ Canonical form | Modern Data the Reference","body":[["header",["link","c42d4fb4","modern_node_canonical_hash_compute"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Canonical form"]]},"69a9169d":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_int32 = 450"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_int32 = 450"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_int32"]]},"1cf4e2c9":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arctangent_float64 = 929"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arctangent_float64 = 929"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arctangent_float64"]]},"4a801122":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_blob_make)(modern_library *library, uint8_t *data, size_t bytes);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_blob_make "]]},"99355dac":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_nat32 = 1478"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat8 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_nat32 = 1478"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_nat32"]]},"7f359524":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arctangent_float64 = 1153"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arctangent_float64 = 1153"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arctangent_float64"]]},"298064f2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_float32 = 1264"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_float32 = 1264"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_float32"]]},"8321f210":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_int32 = 1538"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e nat8 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_int32 = 1538"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_int32"]]},"7826878a":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_nat16 = 10251"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_nat16 = 10251"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_nat16"]]},"8684ebcc":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_builtin_identifier)(void *client_state, uint16_t identifier);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_builtin_identifier"]]},"fe92537d":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_float64 = 233"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_float64 = 233"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_float64"]]},"6025e180":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_int8 = 1281"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_int8 = 1281"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_int8"]]},"299c78a2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_nat32 = 1229"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_nat32 = 1229"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_nat32"]]},"397bd37b":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat16_type = 31"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat16_type"]]},"13aa82d6":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_maybe_nothing_make)(modern_library *library, void *type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_nothing_make "]]},"e734a9e2":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_int64 = 387"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_int64 = 387"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_int64"]]},"da8ae8ba":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_utf8_blob = 10296"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_utf8_blob = 10296"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_utf8_blob"]]},"c930c550":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_tangent_float64 = 1057"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_tangent_float64 = 1057"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_tangent_float64"]]},"67994263":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_type_family_item_add)(modern_library *library, void *value, void *item, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_type_family_item_add "]]},"821fc2bd":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_int8 = 256"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_int8 = 256"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_int8"]]},"f61c8ee0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_nat16 = 1258"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_nat16 = 1258"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_nat16"]]},"7f706129":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int32_make)(modern_library *library, int32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_int32_make"]]},"b22c96ae":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_sigma_set)(modern_library *library, void *value, void *field_value, void *successor);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_sigma_set"]]},"3be7b8d7":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_hash *(*modern_node_name_value_hash_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_name_value_hash_get"]]},"ebffa57f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_apply_left_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_apply_left_get"]]},"d9ae90ca":{"title":"3.11. Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header",["link","7e260054","decode_utf8"]],["header",["link","731aebbb","encode_utf8"]],["header",["link","9069e3b0","character_offset_to_byte_offset_utf8"]],["header",["link","b3ac698d","length_bytes_utf8"]],["header",["link","b1cb832a","length_bytes_blob"]],["header",["link","82f7cb20","get_byte_blob"]],["header",["link","f660a0b0","replace_byte_blob"]],["header",["link","113fc590","get_data_piece_utf8"]],["header",["link","7a5794fd","get_data_piece_blob"]],["header",["link","d37d7149","replace_data_piece_utf8"]],["header",["link","bbd93c4b","replace_data_piece_blob"]],["header",["link","10982cd0","empty_utf8"]],["header",["link","e22a5bd8","empty_blob"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Large object"]]},"1ed96eee":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_finalize)(void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_finalize"]]},"16c56a48":{"title":"2.4.2.3. C library ∙ Virtual files ∙ Predefined ∙ Stdio files | Modern Data the Reference","body":[["header",["link","c9c8cb84","modern_vfile_stdio_make"]],["header",["link","5d2f287a","modern_vfile_stdio_initialize"]],["header",["link","c0bcc0d5","modern_vfile_stdio_finalize"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ","Stdio files"]]},"2e6b7341":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_nat16 = 10258"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_nat16 = 10258"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_nat16"]]},"966768b0":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_int8 = 1568"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e int8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_int8 = 1568"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_int8"]]},"b6e428e0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_hash(*modern_node_representation_named_type_name_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_type_name_get "]]},"55e1506e":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_type_successor_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_sigma_type_successor_get"]]},"aa3bf335":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_nat64 = 1326"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_nat64 = 1326"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_nat64"]]},"7ed7d06a":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_maybe_type_content_type_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_type_content_type_get"]]},"fd941523":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_float64_type = 35"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_float64_type"]]},"7f471dcf":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_float32_blob = 10320"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_float32_blob = 10320"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_float32_blob"]]},"4e3a1d84":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_nat64 = 1262"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_nat64 = 1262"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_nat64"]]},"c0f09e47":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","size_t(*modern_node_utf8_bytes_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_utf8_bytes_get"]]},"b9e0bd13":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_node_representation     ;"],["header","Semantics"],["paragraph","A \nmodern_node_representation\n structure contains callbacks which are used by the library for all operations on modern nodes - creating, accessing, and updating.  Its purpose is so that the authors of language bindings for Modern Data can produce node-representations which uses native types to do the storage.  For example, this allows modern nodes to be subject to garbage collection, in garbage-collected languages."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation"]]},"38afdafe":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_blob_data_piece_set)(modern_library *library, void *value, uint8_t *data, size_t offset, size_t old_bytes, size_t new_bytes);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_blob_data_piece_set "]]},"8b79168a":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_nat64 = 1359"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_nat64 = 1359"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_nat64"]]},"5217cfd2":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_int8)(struct modern_processor *processor, void *processor_state, void *stream_state, int8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_int8"]]},"41c0b592":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_ordering_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_ordering_type_make "]]},"99ca9dcf":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_int32 = 386"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_int32 = 386"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_int32"]]},"b4f7daee":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arccosine_float64 = 897"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arccosine_float64 = 897"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arccosine_float64"]]},"94c13860":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_int8 = 1216"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_int8 = 1216"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_int8"]]},"10d57940":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_int32 = 482"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_int32 = 482"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_int32"]]},"3848be4f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_blob = 10314"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_blob = 10314"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_blob"]]},"7e8a84fc":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_apply_right_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_apply_right_get"]]},"402ce9ab":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_universe_type_level_set)(modern_library *library, void *value, uint64_t level);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_universe_type_level_set"]]},"4a30bc94":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_nat32 = 1456"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat8 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_nat32 = 1456"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_nat32"]]},"4b50f42a":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_start)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_start"]]},"93a3b5d1":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nfloat (*modern_node_representation_float32_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float32_get "]]},"e64696e9":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_int64 = 10242"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_int64 = 10242"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_int64"]]},"8e69cf9d":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint8_t *(*modern_node_representation_utf8_data_piece_get)(modern_library *library, void *value, size_t offset, size_t bytes);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_utf8_data_piece_get "]]},"4ccb6561":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_nat64 = 1295"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_nat64 = 1295"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_nat64"]]},"c75aa2d5":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_bool)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_bool"]]},"af4320b2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_nat64 = 1230"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_nat64 = 1230"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_nat64"]]},"95fd4282":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_hash(*modern_node_representation_name_value_hash_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_name_value_hash_get "]]},"92dedd55":{"title":"2.5.7. C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header",["link","658510bd","modern_serialize_memory_buffer"]],["header",["link","5e662c39","modern_serialize_memory_allocating"]],["header",["link","a7a4194c","modern_serialize_file"]],["header",["link","53669680","modern_serialize_fd"]],["header",["link","49de9175","modern_serialize_vfile"]],["header",["link","e06df0a7","modern_serialize_output_stream"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Serialization"]]},"abe0f3a0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_int16 = 1186"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_int16 = 1186"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_int16"]]},"33705932":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_nat16_set)(modern_library *library, void *node, uint16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_nat16_set"]]},"e1cc585f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_nat16 = 10294"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_nat16 = 10294"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_nat16"]]},"1eab6636":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_name = 139"],["paragraph","\nValue type (abstract notation)\nname -\u003e name -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_name = 139"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_name"]]},"dfe515ae":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_named_value_set)(modern_library *library, void *node, void *type, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_named_value_set"]]},"831df03a":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_utf8_make)(modern_library *library, uint8_t *data);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_utf8_make"]]},"113fc590":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_data_piece_utf8 = 1888"],["paragraph","\n\nValue type (abstract notation)\n\nutf8 -\u003e nat64 -\u003e nat64 -\u003e maybe utf8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_data_piece_utf8 = 1888"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["get_data_piece_utf8"]]},"b890738e":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_int16 = 1377"],["paragraph","\n\nValue type (abstract notation)\n\nint16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_int16 = 1377"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_int16"]]},"59d5f6f9":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_apply_right_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_apply_right_get "]]},"db7fc63c":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_hash(*modern_node_representation_canonical_hash_get)(modern_library *library, modern *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_canonical_hash_get"]]},"4a4b793d":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_int8 = 1184"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_int8 = 1184"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_int8"]]},"de2d3f19":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat16_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat16_type_make "]]},"2547b1cf":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_field_value_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_field_value_get "]]},"2166f034":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_maybe_type = 25"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_maybe_type"]]},"10a172b4":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_named_type_make)(modern_library *library, struct modern_hash *name, void *content_type);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_named_type_make"]]},"3be98052":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_type_family = 46"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_type_family"]]},"e83e3ae3":{"title":"2.4.2.1. C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the client | Modern Data the Reference","body":[["header",["link","9abf441f","modern_vfile_memory_buffer_make"]],["header",["link","90bc1a48","modern_vfile_memory_buffer_initialize"]],["header",["link","46242350","modern_vfile_memory_buffer_finalize"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ","Memory managed by the client"]]},"6020dd29":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_blob = 10316"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_blob = 10316"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_blob"]]},"65da2b3b":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_set_let_item_add)(modern_library *library, void *value, void *item, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_set_let_item_add"]]},"2ad68d9c":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arccosine_float32 = 1120"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arccosine_float32 = 1120"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arccosine_float32"]]},"1e80fd32":{"title":"3.7. Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header",["link","d6c35bfd","sine_float32"]],["header",["link","4ce65ee9","sine_float64"]],["header",["link","8095f06e","cosine_float32"]],["header",["link","8f1d32a0","cosine_float64"]],["header",["link","6c3da5e9","tangent_float32"]],["header",["link","a14d7657","tangent_float64"]],["header",["link","26bfb010","arcsine_float32"]],["header",["link","aff94bf4","arcsine_float64"]],["header",["link","743fd8dc","arccosine_float32"]],["header",["link","b4f7daee","arccosine_float64"]],["header",["link","30259ef0","arctangent_float32"]],["header",["link","1cf4e2c9","arctangent_float64"]],["header",["link","8e2b2076","arctangent_fraction_float32"]],["header",["link","ec10f0fa","arctangent_fraction_float64"]],["header",["link","abb07080","hyperbolic_sine_float32"]],["header",["link","1ff3b6b3","hyperbolic_sine_float64"]],["header",["link","215cf189","hyperbolic_cosine_float32"]],["header",["link","e077a1b2","hyperbolic_cosine_float64"]],["header",["link","85f6b463","hyperbolic_tangent_float32"]],["header",["link","c930c550","hyperbolic_tangent_float64"]],["header",["link","6a495f10","hyperbolic_arcsine_float32"]],["header",["link","2c30a659","hyperbolic_arcsine_float64"]],["header",["link","2ad68d9c","hyperbolic_arccosine_float32"]],["header",["link","d5aa9720","hyperbolic_arccosine_float64"]],["header",["link","79df7160","hyperbolic_arctangent_float32"]],["header",["link","7f359524","hyperbolic_arctangent_float64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Trigonometric"]]},"5eaae1f5":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_int64 = 1222"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_int64 = 1222"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_int64"]]},"1ceabaa3":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_maybe_value_just = 7"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_maybe_value_just"]]},"5b9daa3f":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","enum modern_node_type     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type"]]},"76ab482c":{"title":"C library ∙ Streaming model ∙ Processors ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_processor *modern_processor_input_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","fa53f24a","Predefined"]],["modern_processor_input_make"]]},"4b41d550":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_float64 = 1297"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_float64 = 1297"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_float64"]]},"c7a04413":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_int16 = 10276"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_int16 = 10276"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_int16"]]},"238fead8":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_float64 = 10311"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_float64 = 10311"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_float64"]]},"cf9750ed":{"title":"1.8.2. Semantics ∙ Values and types ∙ Maybes | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.2."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Maybes"]]},"f3c0d0f3":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_maybe_type = 2496"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e universe 0"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_maybe_type = 2496"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_maybe_type"]]},"305aa3df":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_float64_set)(modern_library *library, void *node, double value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float64_set "]]},"46f271b5":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_satisfies_type_predicate_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_satisfies_type_predicate_get"]]},"b740bc16":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_type_mismatch)(void *client_state, modern *expected, modern *actual);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_type_mismatch"]]},"90d0f8f2":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *modern_library_client_state_get(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_client_state_get"]]},"55726b35":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_builtin_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, uint16_t identifier);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_builtin_is_next"]]},"c4e051f7":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_field_value_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_sigma_field_value_get"]]},"e5543423":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_nat64 = 391"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_nat64 = 391"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_nat64"]]},"1ff3b6b3":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_sine_float64 = 993"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_sine_float64 = 993"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_sine_float64"]]},"30d0bcbc":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_blob = 10318"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_blob = 10318"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_blob"]]},"948e30e1":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_ordering)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_ordering"]]},"bd4ff68c":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_type_family_make)(modern_library *library, uint64_t n_items, void **types);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_type_family_make "]]},"20534f90":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_maybe_nothing)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_maybe_nothing"]]},"d37d7149":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","replace_data_piece_utf8 = 1920"],["paragraph","\n\nValue type (abstract notation)\n\nutf8 -\u003e nat64 -\u003e nat64 -\u003e utf8 -\u003e maybe utf8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_replace_data_piece_utf8 = 1920"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["replace_data_piece_utf8"]]},"57d7e333":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_int32 = 1284"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_int32 = 1284"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_int32"]]},"44d0625b":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_nat32)(struct modern_processor *processor, void *processor_state, void *stream_state, uint32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_nat32"]]},"d519b17b":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_nat32 = 294"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e maybe nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_nat32 = 294"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_nat32"]]},"f043c951":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_float32)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_float32"]]},"dfcf93f4":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_int16 = 1347"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_int16 = 1347"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_int16"]]},"bbf07097":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_ordering_value_less = 3"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_ordering_value_less"]]},"62dd6d54":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_nat64 = 295"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_nat64 = 295"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_nat64"]]},"4a1d1710":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","intmodern_in_context_get(modern_library *library, modern_context *context, modern *node);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_in_context_get"]]},"54b25a13":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_apply_right_set)(modern_library *library, void *value, void *right);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_apply_right_set "]]},"4eb040c3":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_float64_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float64_type_make "]]},"4c649e3e":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_function_type_make)(modern_library *library, void *parameter, void *result);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_function_type_make"]]},"13c7ebf0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int8_make)(modern_library *library, int8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_int8_make"]]},"d09dda29":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_named_type_content_type_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_type_content_type_get"]]},"607b9261":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_nat32 = 1542"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat8 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_nat32 = 1542"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_nat32"]]},"e0322199":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_maybe_just_content_set)(modern_library *library, void *value, void *content_value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_maybe_just_content_set"]]},"b511d3d3":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_int64_set)(modern_library *library, void *node, int64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_int64_set"]]},"e22a5bd8":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","empty_blob = 1953"],["paragraph","\n\nValue type (abstract notation)\n\nblob"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_empty_blob = 1953"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["empty_blob"]]},"f65a2b21":{"title":"2.5.2. C library ∙ Node-based object model ∙ Callbacks | Modern Data the Reference","body":[["header",["link","734c743d","modern_node"]],["header",["link","3fd8517d","2.5.2.2."," ","Reading"]],["header",["link","30d0e3d9","2.5.2.3."," ","Construction"]],["header",["link","57107061","2.5.2.4."," ","Mutation"]],["header",["link","59499a3a","2.5.2.5."," ","Predefined"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Callbacks"]]},"a0901b48":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_int64 = 1191"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_int64 = 1191"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_int64"]]},"e642ccac":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_nat8 = 1289"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_nat8 = 1289"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_nat8"]]},"b0ffe1de":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_utf8_end)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_utf8_end"]]},"dee9a1b0":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_int64 = 10278"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_int64 = 10278"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_int64"]]},"d4b0a0bf":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_int64 = 1318"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_int64 = 1318"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_int64"]]},"15c0f9be":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_nat32 = 10259"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_nat32 = 10259"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_nat32"]]},"929ac1d2":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_ordering_less)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_ordering_less"]]},"d5e542ff":{"title":"1.2. Semantics ∙ Scoping | Modern Data the Reference","body":[["paragraph","Importantly, a modern type must be in scope in the given context before a value of that type can be serialized or deserialized. The high-level node-based portion of the library will check whether a values type is in context when serializing, and emit additional instructions which bring it into context if it is not, mutating the context object which it is passed to make note of the fact.  Similarly, when deserializing, if a values type is not in context, an error is produced and processing halts.  (To avoid security holes caused by different implementations responding to errors in different ways, processing is specified to always halt immediately upon the first error encountered.)"],["paragraph","The low-level stream-based portion of the library does no such checking, as it tracks very little internal state, leaving that task to the client code.  The client code is thus responsible for ensuring that types are in context before they are used, both when serializing and when deserializing."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.2."," ",["link","fcb65d5c","Semantics"]," ∙ ","Scoping"]]},"f0a5fb67":{"title":"1.8.5. Semantics ∙ Values and types ∙ Floating-point numbers | Modern Data the Reference","body":[["paragraph","The floating-point datatypes used by Modern Data are a subset of the interchange formats defined by IEEE 754-2008."],["header",["link","73d5dbed","1.8.5.1."," ","80-bit and 128-bit values"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.5."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Floating-point numbers"]]},"699142f0":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_nat64 = 1575"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat64 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_nat64 = 1575"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_nat64"]]},"e0da9916":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint16_t (*modern_node_representation_nat16_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat16_get "]]},"3c558971":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_int16 = 449"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_int16 = 449"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_int16"]]},"18e4596e":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_type_family_item_get)(modern_library *library, void *value, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_type_family_item_get "]]},"734c743d":{"title":"C library ∙ Node-based object model ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_node     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]],["modern_node"]]},"a79b2527":{"title":"C library ∙ Memory management | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_finalize(modern_library *library, void *finalizable);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","4be66453","Memory management"]],["modern_finalize"]]},"ac153f1f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_nat64 = 10260"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_nat64 = 10260"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_nat64"]]},"de80b31e":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_int32)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_int32"]]},"fe3ef0eb":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_int8 = 288"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_int8 = 288"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_int8"]]},"8ee82a69":{"title":"2.5.5. C library ∙ Node-based object model ∙ Evaluation | Modern Data the Reference","body":[["header",["link","5a79decc","modern_evaluate"]],["header",["link","4cb295e6","modern_resolve_backreferences"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.5."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Evaluation"]]},"c0d0ab9a":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat32_type = 32"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat32_type"]]},"307a9c47":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_int64 = 10285"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_int64 = 10285"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_int64"]]},"664cbd63":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_type_successor_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_type_successor_get "]]},"8e987f3b":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_nat8 = 260"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e maybe nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_nat8 = 260"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_nat8"]]},"722e9f8a":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_blob_data_piece_set)(modern_library *library, void *value, uint8_t *data, size_t offset, size_t old_bytes, size_t new_bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_blob_data_piece_set"]]},"f75b895f":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_float32_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float32_type_make "]]},"a05496b1":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_nat16 = 10265"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_nat16 = 10265"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_nat16"]]},"bbc3edfc":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_nat64 = 1383"],["paragraph","\n\nValue type (abstract notation)\n\nnat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_nat64 = 1383"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_nat64"]]},"733c25f1":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_int16 = 130"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","equal_to_int16 = 130"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_int16"]]},"402d88bd":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_int64 = 1539"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e nat8 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_int64 = 1539"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_int64"]]},"3c877730":{"title":"C library ∙ Streaming model ∙ Processes ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_process_abort)(void *process_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ",["link","b234d424","Callbacks"]],["modern_process_abort"]]},"3eb088e5":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_vfile_memory_allocating_finalize(modern_library *library, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","42ce4736","Memory managed by the system"]],["modern_vfile_memory_allocating_finalize"]]},"53b3608e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_int32 = 10263"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_int32 = 10263"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_int32"]]},"1b1785c7":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_int8 = 1472"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e nat8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_int8 = 1472"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_int8"]]},"f35510b2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_int16 = 1314"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_int16 = 1314"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_int16"]]},"6b26e63d":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_nat32 = 10295"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_nat32 = 10295"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_nat32"]]},"2a1e5e38":{"title":"C library ∙ Virtual files ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nssize_t(*modern_vfile_read)(void *vfile_state, uint8_t *buffer, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","952df493","Callbacks"]],["modern_vfile_read"]]},"5532c170":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat16_make)(modern_library *library, uint16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_nat16_make"]]},"a7a4194c":{"title":"C library ∙ Node-based object model ∙ Serialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_serialize_file(modern_library *library, modern *value, modern_context *context, FILE *file);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.7."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","92dedd55","Serialization"]],["modern_serialize_file"]]},"a7f3a547":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_int32 = 194"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_int32 = 194"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_int32"]]},"5333a452":{"title":"1.8.6. Semantics ∙ Values and types ∙ Text | Modern Data the Reference","body":[["paragraph","Modern Data supports exactly one text encoding, which is UTF-8, as defined by RFC 3629.  Because this encoding is inherently variable-length even with a fixed number of characters, no attempt is made to constrain its size at the level of primitives.  Instead, it is treated by Modern Data as a variable-length object."],["paragraph","It would be possible to have a taxonomy of text encodings and character sets, with primitives for conversion.  However, the primary goal of Modern Data is to be an interchange format.  It is not helpful to authors to have to support many encodings, especially now that UTF-8 is adequate for almost all purposes.  Furthermore, custom formats can still be defined in principle by specifying predicates to be satisfied by binary large objects."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.6."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Text"]]},"e0f9ff60":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_negative_infinity_int32 = 418"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_negative_infinity_int32 = 418"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_negative_infinity_int32"]]},"c036701d":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_negative_infinity_int8 = 416"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_negative_infinity_int8 = 416"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_negative_infinity_int8"]]},"63acf1ea":{"title":"1.5. Semantics ∙ Evaluation | Modern Data the Reference","body":[["paragraph","It has been mentioned that Modern Datas type system is dependent; that is, the type of a value that comes later on is allowed to depend upon the actual value of an earlier one.  It is necessary for the infrastructure to know what these dependent types evaluate to, which means that there must be an evaluator - a means of actually executing the function that computes each dependent type and determining its results."],["paragraph","The evaluation algorithm is given here as two mutually-recursive functions, and is a part of this specification: Evaluation must always proceed in this fashion.  This is because, in limited-memory scenarios, the workings of the algorithm are observable to clients of the library (though not to the evaluated functions), inasmuch as the evaluation and hence the requested operation can fail in the event of an out-of-memory condition, and the only way to predict whether sufficient memory is available is to understand the algorithm."],["paragraph","Given elsewhere in this specification are descriptions of the functions performed by every possible builtin node, and their static arities.  Loosely, the static arities are the number of parameters they take, but in the event of a function returning a function, the precise meaning of this becomes unclear.  The meaning of the static arity is simply that it is a parameter of the algorithm below, and is no greater than the maximum number of parameters which the builtin can be successively applied to.  A static arity of zero is permitted, and denotes a computed value returned immediately rather than a function (the algorithm below is still used to compute this)."],["paragraph","Initially, a node is the only thing given and we invoke the first of the functions given below, using an empty target stack."],["paragraph","To evaluate a node, given a target stack:"],["paragraph","1) If it is a backreference node with zero-based index N, return the Nth item from the end of the target stack.  Proceed to step 2."],["paragraph","2) If it is an application node, return the result of applying its left field, with the target stack given and a parameter stack containing solely the right field.  Otherwise, proceed to step 3."],["paragraph","3) Return the node unchanged."],["paragraph","To apply a node (also called the left node), given a target stack and a parameter stack:"],["paragraph","1) Initialize the intermediate result to the left node, and the remaining-parameter stack to a copy of the parameter stack.  Proceed to step 2."],["paragraph","2) If the intermediate result is a lambda node and the remaining-parameter stack is nonempty, go to step 8.  Otherwise, proceed to step 3."],["paragraph","3) If the intermediate result is an apply node, go to step 9.  Otherwise, proceed to step 4."],["paragraph","4) If the intermediate result is not a builtin node, go to step 6.  Otherwise, proceed to step 5."],["paragraph","5) If the intermediate result, which is a builtin node, has static arity N, and there are at least N items on the parameter stack, go to step 10.  Otherwise, proceed to step 6."],["paragraph","6) If the parameter stack is empty, return the intermediate result.  Otherwise, proceed to step 7."],["paragraph","7) Pop a value from the remaining-parameter stack.  Replace the intermediate result with an application node with the former value of the intermediate result as its left field, and the popped value as its right field.  Go to step 6."],["paragraph","8) The intermediate result is a lambda node.  Pop a node from the remaining-parameter stack; compute the result of evaluating it with the current target stack, and call this result the right node.  Construct a copy of the target stack.  Onto this copy, push the right node.  Compute the result of evaluating the left node, with the copied target stack.  Replace the intermediate result with the result of this computation.  Go to step 2."],["paragraph","9) The intermediate result is an apply node.  Push the intermediate result onto the remaining-parameter stack.  Replace the intermediate result with its left field.  Go to step 2."],["paragraph","10) The intermediate result is a builtin node.  Let the builtin be the function or computed value denoted by its value, and N be its static arity.  Pop N nodes from the parameter stack, and perform the builtin on these parameters, giving them in order starting with the one which was at the end of the parameter stack.  Replace the intermediate result with the node produced by performing the builtin.  Go to step 2."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.5."," ",["link","fcb65d5c","Semantics"]," ∙ ","Evaluation"]]},"3dd9378b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_utf8_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_utf8_type_make "]]},"aff94bf4":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arcsine_float64 = 865"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arcsine_float64 = 865"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arcsine_float64"]]},"2d9d4218":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","two_to_the_x_float64 = 673"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_two_to_the_x_float64 = 673"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["two_to_the_x_float64"]]},"9327bbf5":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_int64 = 1254"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_int64 = 1254"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_int64"]]},"ba3a1d91":{"title":"C library ∙ Streaming model ∙ Processes ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_process     ;"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ",["link","b234d424","Callbacks"]],["modern_process"]]},"78d92532":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_named_value_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_value_get "]]},"c9c8cb84":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Stdio files | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_vfile *modern_vfile_stdio_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","16c56a48","Stdio files"]],["modern_vfile_stdio_make"]]},"cfb692f8":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_let_content_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_let_content_get"]]},"b126121a":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_int8 = 1664"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_int8 = 1664"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_int8"]]},"f91f8b86":{"title":"3.14. Builtin identifiers ∙ Maybe value | Modern Data the Reference","body":[["header",["link","983eb650","maybe_is_just"]],["header",["link","f262492b","fmap_maybe"]],["header",["link","711e2de0","from_maybe"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.14."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Maybe value"]]},"2e3fc5d4":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_blob_make)(modern_library *library, uint8_t *data, size_t bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_blob_make"]]},"cad0d431":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_maybe_value_nothing = 6"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_maybe_value_nothing"]]},"941013b0":{"title":"C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_deserialize_vfile(modern_library *library, modern_context *context, struct modern_vfile *vfile, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","126a6c7a","Deserialization"]],["modern_deserialize_vfile"]]},"1f53caaf":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_int32 = 1474"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e nat8 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_int32 = 1474"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_int32"]]},"db40e7e1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint8_t *(*modern_node_blob_data_piece_get)(modern_library *library, void *value, size_t offset, size_t bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_blob_data_piece_get"]]},"88eac0c8":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int16_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_int16_type_make"]]},"8e94cf89":{"title":"C library ∙ Hashing | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_hash_compute(uint8_t *data, size_t length, struct modern_hash *out);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","729bfa8a","Hashing"]],["modern_hash_compute"]]},"1fcd54cf":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_int64 = 291"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_int64 = 291"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_int64"]]},"7c72e3b9":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_float64_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_float64_type_make"]]},"605afc30":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_nat32 = 1228"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_nat32 = 1228"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_nat32"]]},"90bc1a48":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the client | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *modern_vfile_memory_buffer_initialize(modern_library *library, uint8_t *data, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","e83e3ae3","Memory managed by the client"]],["modern_vfile_memory_buffer_initialize"]]},"205af150":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_nat32 = 1197"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_nat32 = 1197"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_nat32"]]},"8c3c974e":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_nat32 = 1293"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_nat32 = 1293"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_nat32"]]},"d32b25e9":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_utf8_value = 18"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_utf8_value"]]},"a02ca261":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat64_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat64_type_make "]]},"ffedeb39":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nsize_t (*modern_node_representation_blob_bytes_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_blob_bytes_get "]]},"1ca45eab":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_nat16 = 134"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_nat16 = 134"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_nat16"]]},"1b737d1a":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_family_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, uint64_t n_items);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_family_is_next"]]},"d6c254d2":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_nat32 = 1606"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat32 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_nat32 = 1606"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_nat32"]]},"e992808c":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_successor_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_successor_get "]]},"ff84d3e2":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_apply_left_set)(modern_library *library, void *value, void *left);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_apply_left_set"]]},"18148bdf":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_maybe_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_maybe_is_next"]]},"6125e274":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int64_make)(modern_library *library, int64_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int64_make "]]},"723a8097":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_nat16 = 1445"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat8 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_nat16 = 1445"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_nat16"]]},"cdbdc470":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_float64 = 265"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_float64 = 265"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_float64"]]},"9b6e9055":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_builtin_identifier_set)(modern_library *library, void *value, uint16_t identifier);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_builtin_identifier_set"]]},"8b4f7655":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_int32_set)(modern_library *library, void *node, int32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_int32_set"]]},"ce21cb50":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_stream     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream"]]},"d871752c":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float64_float64 = 1201"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float64_float64 = 1201"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float64_float64"]]},"801ef55c":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_int16 = 513"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_int16 = 513"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_int16"]]},"dfae4300":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","int32_t(*modern_node_int32_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_int32_get"]]},"1ec83dcb":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_float64 = 517"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_float64 = 517"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_float64"]]},"711e2de0":{"title":"Builtin identifiers ∙ Maybe value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","from_maybe = 2624"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e a -\u003e maybe a -\u003e a"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_from_maybe = 2624"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.14."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f91f8b86","Maybe value"]],["from_maybe"]]},"cd55e7b6":{"title":"2.4.2. C library ∙ Virtual files ∙ Predefined | Modern Data the Reference","body":[["header",["link","e83e3ae3","2.4.2.1."," ","Memory managed by the client"]],["header",["link","42ce4736","2.4.2.2."," ","Memory managed by the system"]],["header",["link","16c56a48","2.4.2.3."," ","Stdio files"]],["header",["link","1b60cd5b","2.4.2.4."," ","POSIX-style file descriptors"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ","Predefined"]]},"49aecaf4":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_named_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, struct modern_hash *name);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_named_is_next"]]},"6286d160":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_nat32 = 1574"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat32 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_nat32 = 1574"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_nat32"]]},"ea2f20b1":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_nat8 = 1353"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_nat8 = 1353"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_nat8"]]},"85201711":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_float32_float64 = 10300"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_float32_float64 = 10300"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_float32_float64"]]},"6f2cb0e7":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_int64 = 1287"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_int64 = 1287"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_int64"]]},"f3a2e7e0":{"title":"3.2. Builtin identifiers ∙ Logic | Modern Data the Reference","body":[["header",["link","9711ca14","and_bool"]],["header",["link","fe3451ec","or_bool"]],["header",["link","a7e79ed1","not_bool"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.2."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Logic"]]},"a318c92b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_named_type_content_type_set)(modern_library *library, void *value, void *content_type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_type_content_type_set"]]},"4ea51a51":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_nat64 = 1607"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat64 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_nat64 = 1607"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_nat64"]]},"9711ca14":{"title":"Builtin identifiers ∙ Logic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","and_bool = 32"],["paragraph","\nValue type (abstract notation)\nbool -\u003e bool -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_and_bool = 32"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.2."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f3a2e7e0","Logic"]],["and_bool"]]},"92a1bbb0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float64_int16 = 1283"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float64_int16 = 1283"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float64_int16"]]},"bb1f1087":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_int32 = 1221"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_int32 = 1221"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_int32"]]},"5d2f287a":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Stdio files | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *modern_vfile_stdio_initialize(modern_library *library, FILE *stream);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","16c56a48","Stdio files"]],["modern_vfile_stdio_initialize"]]},"20504288":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_int64 = 1507"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e nat8 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_int64 = 1507"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_int64"]]},"9544c538":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_float64_value = 17"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_float64_value"]]},"6ca9cb9d":{"title":"3.4. Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header",["link","9c16c0fc","compare_int8"]],["header",["link","2dc5c4f3","compare_int16"]],["header",["link","857c8ce5","compare_int32"]],["header",["link","a7acb748","compare_int64"]],["header",["link","7043c1f1","compare_nat8"]],["header",["link","b460d9c3","compare_nat16"]],["header",["link","d0db85be","compare_nat32"]],["header",["link","2aa71bc0","compare_nat64"]],["header",["link","28af9534","compare_float32"]],["header",["link","f2ffc44d","compare_float64"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Ordering"]]},"b0511aaf":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_ordering_equal_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_ordering_equal_make"]]},"2faea8bb":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_nat8 = 10306"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_nat8 = 10306"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_nat8"]]},"e849b09b":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_int16 = 10269"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_int16 = 10269"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_int16"]]},"3ef741c8":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_nat8 = 1224"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_nat8 = 1224"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_nat8"]]},"8c7ad2c1":{"title":"C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_deserialize_file(modern_library *library, modern_context *context, FILE *file);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","126a6c7a","Deserialization"]],["modern_deserialize_file"]]},"f17dc21e":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_bool_value_true = 2"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_bool_value_true"]]},"6224d3e1":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_memory)(void *client_state, size_t requested_size);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_memory"]]},"1c25662f":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_blob = 150"],["paragraph","\nValue type (abstract notation)\nblob -\u003e blob -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_blob = 150"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_blob"]]},"cfc6d1ae":{"title":"1.6.1. Semantics ∙ Canonical form ∙ Flattening | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.6.1."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","15ae97b7","Canonical form"]," ∙ ","Flattening"]]},"d64c8a9d":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int16_value = 9"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int16_value"]]},"ec2d30b8":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nenum modern_node_representation_type(*modern_node_representation_node_type_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_node_type_get"]]},"239217d1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_let_content_set)(modern_library *library, void *value, void *content);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_let_content_set"]]},"d49b5340":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int32_type = 28"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int32_type"]]},"909d87df":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_hash *(*modern_node_named_type_name_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_named_type_name_get"]]},"90a0d243":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat8_value = 12"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat8_value"]]},"8391ec73":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_item_from_context_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, struct modern_hash *hash);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_item_from_context_is_next"]]},"e37d1850":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_int8 = 1217"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_int8 = 1217"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_int8"]]},"3dcd5ada":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_successor_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_sigma_successor_get"]]},"1acdc0da":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint64_t(*modern_node_type_family_count_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_type_family_count_get"]]},"b234d424":{"title":"2.6.2.1. C library ∙ Streaming model ∙ Processes ∙ Callbacks | Modern Data the Reference","body":[["header",["link","ba3a1d91","modern_process"]],["header",["link","3c877730","modern_process_abort"]],["header",["link","1852468f","modern_process_flush"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ","Callbacks"]]},"9f30c77f":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_named_type = 41"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_named_type"]]},"684e715e":{"title":"3.16. Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header",["link","6cf5c23f","cast_int8_int16"]],["header",["link","13ebbef8","cast_int8_int32"]],["header",["link","e64696e9","cast_int8_int64"]],["header",["link","22e798c8","cast_int8_nat8"]],["header",["link","3ab0df11","cast_int8_nat16"]],["header",["link","c8b4d44d","cast_int8_nat32"]],["header",["link","6a96742e","cast_int8_nat64"]],["header",["link","8e2fd97c","cast_int16_int8"]],["header",["link","cf6e87be","cast_int16_int32"]],["header",["link","75711392","cast_int16_int64"]],["header",["link","ef84d22b","cast_int16_nat8"]],["header",["link","7826878a","cast_int16_nat16"]],["header",["link","783e5670","cast_int16_nat32"]],["header",["link","48f7d053","cast_int16_nat64"]],["header",["link","6dc0f0b0","cast_int32_int8"]],["header",["link","c0c84978","cast_int32_int16"]],["header",["link","ebb53e78","cast_int32_int64"]],["header",["link","fd269253","cast_int32_nat8"]],["header",["link","2e6b7341","cast_int32_nat16"]],["header",["link","15c0f9be","cast_int32_nat32"]],["header",["link","ac153f1f","cast_int32_nat64"]],["header",["link","2a44a032","cast_int64_int8"]],["header",["link","8c48144b","cast_int64_int16"]],["header",["link","53b3608e","cast_int64_int32"]],["header",["link","24863320","cast_int64_nat8"]],["header",["link","a05496b1","cast_int64_nat16"]],["header",["link","d633cb70","cast_int64_nat32"]],["header",["link","9f73db86","cast_int64_nat64"]],["header",["link","6da4b471","cast_nat8_int8"]],["header",["link","e849b09b","cast_nat8_int16"]],["header",["link","cc77148b","cast_nat8_int32"]],["header",["link","342c8022","cast_nat8_int64"]],["header",["link","cbd810e3","cast_nat8_nat16"]],["header",["link","9db86096","cast_nat8_nat32"]],["header",["link","70605fdd","cast_nat8_nat64"]],["header",["link","d21990c0","cast_nat16_int8"]],["header",["link","c7a04413","cast_nat16_int16"]],["header",["link","97f6a69e","cast_nat16_int32"]],["header",["link","dee9a1b0","cast_nat16_int64"]],["header",["link","589d4271","cast_nat16_nat8"]],["header",["link","d0df487d","cast_nat16_nat32"]],["header",["link","72544560","cast_nat16_nat64"]],["header",["link","748cf53f","cast_nat32_int8"]],["header",["link","7439f0a3","cast_nat32_int16"]],["header",["link","af502042","cast_nat32_int32"]],["header",["link","307a9c47","cast_nat32_int64"]],["header",["link","f514b8de","cast_nat32_nat8"]],["header",["link","50538e22","cast_nat32_nat16"]],["header",["link","d0f2c11d","cast_nat32_nat64"]],["header",["link","7e7c26c2","cast_nat64_int8"]],["header",["link","a8ed1453","cast_nat64_int16"]],["header",["link","4ed9735e","cast_nat64_int32"]],["header",["link","8c502048","cast_nat64_int64"]],["header",["link","f5c07453","cast_nat64_nat8"]],["header",["link","e1cc585f","cast_nat64_nat16"]],["header",["link","6b26e63d","cast_nat64_nat32"]],["header",["link","da8ae8ba","cast_utf8_blob"]],["header",["link","f4177617","cast_blob_utf8"]],["header",["link","951c244e","cast_name_blob"]],["header",["link","47c2e029","cast_blob_name"]],["header",["link","85201711","cast_float32_float64"]],["header",["link","e86f9463","cast_float64_float32"]],["header",["link","ea585198","cast_blob_int8"]],["header",["link","66e6a3f1","cast_blob_int16"]],["header",["link","33fbdde0","cast_blob_int32"]],["header",["link","32fc446b","cast_blob_int64"]],["header",["link","2faea8bb","cast_blob_nat8"]],["header",["link","3546b7a3","cast_blob_nat16"]],["header",["link","fd357397","cast_blob_nat32"]],["header",["link","d5de2391","cast_blob_nat64"]],["header",["link","caf64b90","cast_blob_float32"]],["header",["link","238fead8","cast_blob_float64"]],["header",["link","2fb18049","cast_int8_blob"]],["header",["link","bd28e96f","cast_int16_blob"]],["header",["link","3848be4f","cast_int32_blob"]],["header",["link","8c19af37","cast_int64_blob"]],["header",["link","6020dd29","cast_nat8_blob"]],["header",["link","5cf7ff8e","cast_nat16_blob"]],["header",["link","30d0bcbc","cast_nat32_blob"]],["header",["link","f939c614","cast_nat64_blob"]],["header",["link","7f471dcf","cast_float32_blob"]],["header",["link","80a04fcd","cast_float64_blob"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Cast"]]},"1f8fe3db":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_blob_type = 37"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_blob_type"]]},"6bcf9494":{"title":"C library ∙ Predefined hashes | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","voidmodern_hash_initial_namespace_compute(struct modern_hash *out);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.7."," ",["link","3f34774e","C library"]," ∙ ",["link","9f37d149","Predefined hashes"]],["modern_hash_initial_namespace_compute"]]},"64b62f30":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_int8 = 1536"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e nat8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_int8 = 1536"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_int8"]]},"8d7a2f3d":{"title":"1.8.10. Semantics ∙ Values and types ∙ Predefined values | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.10."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Predefined values"]]},"883fed14":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_nat64 = 263"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_nat64 = 263"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_nat64"]]},"4044f056":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int8_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int8_type_make "]]},"e1657c13":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_maybe_just_make)(modern_library *library, void *type, void *content_value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_maybe_just_make"]]},"406ec1f2":{"title":"C library ∙ Hashing | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_hash_child_compute(struct modern_hash *parent, uint8_t *data, size_t length, struct modern_hash *out);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","729bfa8a","Hashing"]],["modern_hash_child_compute"]]},"67108515":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_nat8 = 1257"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_nat8 = 1257"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_nat8"]]},"36887636":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_named_type_content_type = 2208"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_named_type_content_type = 2208"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_named_type_content_type"]]},"8095f06e":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cosine_float32 = 800"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cosine_float32 = 800"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["cosine_float32"]]},"951c244e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_name_blob = 10298"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_name_blob = 10298"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_name_blob"]]},"ba61e558":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_int8 = 1408"],["paragraph","\n\nValue type (abstract notation)\n\nint8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_int8 = 1408"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_int8"]]},"3ffab696":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_vfile *modern_vfile_memory_allocating_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","42ce4736","Memory managed by the system"]],["modern_vfile_memory_allocating_make"]]},"27aee270":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_lambda_content_set)(modern_library *library, void *value, void *content);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_lambda_content_set "]]},"f3db4c1d":{"title":"C library ∙ Streaming model ∙ Streams ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_stream *modern_stream_documentation_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d78e7459","Predefined"]],["modern_stream_documentation_make"]]},"7d89b742":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_nat32 = 262"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e maybe nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_nat32 = 262"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_nat32"]]},"87e59ff8":{"title":"2.5.2.4.2. C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header",["link","e0322199","modern_node_maybe_just_content_set"]],["header",["link","7fff48a1","modern_node_int8_set"]],["header",["link","138860c0","modern_node_int16_set"]],["header",["link","8b4f7655","modern_node_int32_set"]],["header",["link","b511d3d3","modern_node_int64_set"]],["header",["link","6c482475","modern_node_nat8_set"]],["header",["link","33705932","modern_node_nat16_set"]],["header",["link","4ccbd678","modern_node_nat32_set"]],["header",["link","dbcc93ef","modern_node_nat64_set"]],["header",["link","724c93bf","modern_node_float32_set"]],["header",["link","173e46cb","modern_node_float64_set"]],["header",["link","db1eeac0","modern_node_utf8_data_piece_set"]],["header",["link","722e9f8a","modern_node_blob_data_piece_set"]],["header",["link","b22c96ae","modern_node_sigma_set"]],["header",["link","dfe515ae","modern_node_named_value_set"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ","Values"]]},"e8bd5af7":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_builtin_make)(modern_library *library, uint16_t identifier);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_builtin_make "]]},"7ec1f05e":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint64_t(*modern_node_let_count_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_let_count_get"]]},"c541dabb":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat64_make)(modern_library *library, uint64_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_nat64_make"]]},"ba90b6e5":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_int64 = 227"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_int64 = 227"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_int64"]]},"e38b6c87":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_float64_make)(modern_library *library, double value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float64_make "]]},"7ca0f6c0":{"title":"C library ∙ Streaming model ∙ Processors ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","struct modern_processor     ;"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ",["link","b038c785","Callbacks"]],["modern_processor"]]},"24e49a45":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_let_make)(modern_library *library, uint64_t n_items, void **values, void *content);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_make "]]},"21e97d46":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_int32 = 1220"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_int32 = 1220"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_int32"]]},"9db86096":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_nat32 = 10273"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_nat32 = 10273"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_nat32"]]},"ee7e45e0":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_int64 = 1286"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_int64 = 1286"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_int64"]]},"d71113af":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_nat8)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_nat8"]]},"d6ab5dc5":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat32_make)(modern_library *library, uint32_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat32_make "]]},"85908a30":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_named_value = 22"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_named_value"]]},"406862b2":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_name_definition)(struct modern_processor *processor, void *processor_state, void *stream_state, uint8_t *data, size_t length);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_name_definition"]]},"97cdcf28":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_nat8 = 388"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e maybe nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_nat8 = 388"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_nat8"]]},"aada8ef8":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_int8 = 1632"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e int8 -\u003e int8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_int8 = 1632"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_int8"]]},"83b7c45b":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_sigma_type_successor = 2176"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e (a : universe 0)-\u003e maybe (a -\u003e universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_sigma_type_successor = 2176"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_sigma_type_successor"]]},"bbab575b":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_nat16 = 1226"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_nat16 = 1226"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_nat16"]]},"5fc489b9":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","int16_t(*modern_node_int16_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_int16_get"]]},"79daae90":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat32_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_nat32_type_make"]]},"1d634930":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","pi_float32 = 544"],["paragraph","\nValue type (abstract notation)\nfloat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_pi_float32 = 544"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["pi_float32"]]},"4787d2d0":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_backreference = 48"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_backreference"]]},"983eb650":{"title":"Builtin identifiers ∙ Maybe value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maybe_is_just = 2560"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e maybe a -\u003e bool"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maybe_is_just = 2560"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.14."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f91f8b86","Maybe value"]],["maybe_is_just"]]},"2f6cdea7":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_apply_left_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_apply_left_get "]]},"154ea435":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","two_to_the_x_float32 = 672"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_two_to_the_x_float32 = 672"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["two_to_the_x_float32"]]},"2d28b044":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_float32 = 1232"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_float32 = 1232"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_float32"]]},"fa6e2bb8":{"title":"2.6. C library ∙ Streaming model | Modern Data the Reference","body":[["paragraph","There are two types of object used to control streaming, streams and processors.  Each has a transparent part, which is a structure containing pointers to callback functions, and an opaque part, which is represented as a void pointer.  To perform input - deserialization - client code provides a stream, and requests a processor from the system.  Output - serialization - is the reverse, with client code providing a processor and requesting a stream from the system."],["paragraph","Virtual files, or vfiles, are also relevant to the streaming model, as they are to the node-based object model and for the same purpose.  See Virtual Files Overview for details."],["paragraph","To perform deserialization, client code first requests a processor from the system, then constructs a stream-callbacks structure.  It then asks the processor to run itself, using the stream callbacks.  To carry out the run, the processor will ask the client to initialize and eventually to finalize the stream, through the callbacks.  The processor will also invoke callbacks on the stream as it encounters events.  The below diagram shows the sequence of interactions and responsibilities."],["paragraph","\n\nDiagram 1 89504e470d0a1a0a0000000d49484452000001a5000001d208060000004cf5d4d700000a41694343504943432050726f66696c650000480d9d96775453d91687cfbd37bdd012222025f41a7a0920d23b48150451894980500286842676440546141129566454c0014787226345140b838262d709f21050c6c1514445e5dd8c6b09efad35f3de9afdc759dfd9e7b7d7d967ef7dd7ba0050fc8204c27458018034a15814eeebc15c1213cbc4f7021810010e5801c0e166660447f84402d4fcbd3d9999a848c6b3f6ee2e8064bbdb2cbf502673d6ff7f912237432406000a45d5363c7e2617e5029453b3c51932ff04caf495293286313216a109a2ac22e3c4af6cf6a7e62bbbc9989726e4a11a59ce19bc349e8cbb50de9a25e1a38c04a15c9825e067a37c0765bd54499a00e5f728d3d3f89c4c003014995fcce726a16c8932451419ee89f202000894c439bc720e8bf939689e0078a667e48a04894962a611d79869e5e8c866faf1b353f962312b94c34de188784ccff4b40c8e301780af6f96450125596d996891edad1ceded59d6e668f9bfd9df1e7e53fd3dc87afb55f126eccf9e418c9e59df6cecac2fbd1600f6245a9b1db3be955500b46d0640e5e1ac4fef2000f20500b4de9cf31e866c5e92c4e20c270b8becec6c73019f6b2e2be837fb9f826fcabf8639f799cbeefb563ba6173f81234915336545e5a6a7a64b44cccc0c0e97cf64fdf710ffe3c03969cdc9c32c9c9fc017f185e85551e89409848968bb853c8158902e640a847fd5e17f18362707197e9d6b1468755f007d853950b84907c86f3d00432303246e3f7a027deb5b10310ac8bebc68ad91af738f327afee7fa1f0b5c8a6ee14c412253e6f60c8f647225a22c19a3df846cc10212900774a00a34812e30022c600d1c80337003de2000848048100396032e4802694004b2413ed8000a4131d80176836a7000d4817ad0044e823670065c0457c00d700b0c8047400a86c14b3001de81690882f01015a241aa9016a40f9942d6101b5a0879434150381403c5438990109240f9d026a8182a83aaa143503df423741aba085d83faa007d0203406fd017d84119802d3610dd800b680d9b03b1c0847c2cbe04478159c0717c0dbe14ab8163e0eb7c217e11bf0002c855fc2930840c80803d14658081bf144429058240111216b9122a402a9459a900ea41bb98d489171e4030687a161981816c619e387598ce1625661d6624a30d5986398564c17e63666103381f982a562d5b1a65827ac3f760936119b8d2dc456608f605bb097b103d861ec3b1c0ec7c019e21c707eb8185c326e35ae04b70fd78cbb80ebc30de126f178bc2ade14ef820fc173f0627c21be0a7f1c7f1edf8f1fc6bf2790095a046b820f219620246c2454101a08e708fd8411c2345181a84f7422861079c45c6229b18ed841bc491c264e93144986241752242999b48154496a225d263d26bd2193c93a6447721859405e4fae249f205f250f923f50942826144f4a1c4542d94e394ab94079407943a5520da86ed458aa98ba9d5a4fbd447d4a7d2f47933397f397e3c9ad93ab916b95eb977b254f94d79777975f2e9f275f217f4afea6fcb80251c140c15381a3b056a146e1b4c23d8549459aa2956288629a62896283e235c55125bc928192b7124fa940e9b0d225a5211a42d3a579d2b8b44db43ada65da301d4737a4fbd393e9c5f41fe8bdf4096525655be528e51ce51ae5b3ca5206c23060f8335219a58c938cbb8c8ff334e6b9cfe3cfdb36af695effbc2995f92a6e2a7c952295669501958faa4c556fd514d59daa6daa4fd4306a266a616ad96afbd52eab8dcfa7cf779ecf9d5f34ffe4fc87eab0ba897ab8fa6af5c3ea3dea931a9a1abe1a191a551a9734c635199a6e9ac99ae59ae734c7b4685a0bb5045ae55ae7b55e309599eecc546625b38b39a1adaeeda72dd13ea4ddab3dad63a8b35867a34eb3ce135d922e5b3741b75cb75377424f4b2f582f5faf51efa13e519fad9fa4bf47bf5b7fcac0d020da608b419bc1a8a18aa1bf619e61a3e16323aa91abd12aa35aa33bc63863b6718af13ee35b26b0899d4992498dc94d53d8d4de5460bacfb4cf0c6be6682634ab35bbc7a2b0dc5959ac46d6a039c33cc87ca3799bf92b0b3d8b588b9d16dd165f2ced2c532deb2c1f59295905586db4eab0fac3dac49a6b5d637dc7866ae363b3cea6dde6b5ada92ddf76bfed7d3b9a5db0dd16bb4ebbcff60ef622fb26fb31073d877887bd0ef7d8747628bb847dd511ebe8e1b8cef18ce307277b27b1d349a7df9d59ce29ce0dcea30b0c17f017d42d1872d171e1b81c72912e642e8c5f7870a1d455db95e35aebfacc4dd78de776c46dc4ddd83dd9fdb8fb2b0f4b0f91478bc794a793e71acf0b5e8897af579157afb792f762ef6aefa73e3a3e893e8d3e13be76beab7d2ff861fd02fd76faddf3d7f0e7fad7fb4f043804ac09e80aa404460456073e0b320912057504c3c101c1bb821f2fd25f245cd4160242fc4376853c09350c5d15fa73182e2c34ac26ec79b855787e7877042d62454443c4bb488fc8d2c8478b8d164b167746c947c545d5474d457b4597454b97582c59b3e4468c5a8c20a63d161f1b157b247672a9f7d2dd4b87e3ece20ae3ee2e335c96b3ecda72b5e5a9cbcfae905fc159712a1e1b1f1ddf10ff8913c2a9e54caef45fb977e504d793bb87fb92e7c62be78df15df865fc91049784b284d14497c45d896349ae491549e3024f41b5e075b25ff281e4a9949094a32933a9d1a9cd6984b4f8b4d34225618ab02b5d333d27bd2fc334a33043baca69d5ee5513a240d1914c28735966bb988efe4cf5488c249b2583590bb36ab2de6747659fca51cc11e6f4e49ae46ecb1dc9f3c9fb7e356635777567be76fe86fcc135ee6b0ead85d6ae5cdbb94e775dc1bae1f5beeb8f6d206d48d9f0cb46cb8d651bdf6e8aded451a051b0be6068b3efe6c642b94251e1bd2dce5b0e6cc56c156ceddd66b3ad6adb97225ed1f562cbe28ae24f25dc92ebdf597d57f9ddccf684edbda5f6a5fb77e0760877dcdde9baf3589962595ed9d0aee05dade5ccf2a2f2b7bb57ecbe56615b71600f698f648fb432a8b2bd4aaf6a47d5a7eaa4ea811a8f9ae6bdea7bb7ed9ddac7dbd7bfdf6d7fd3018d03c5073e1e141cbc7fc8f7506bad416dc561dce1acc3cfeba2eababf677f5f7f44ed48f191cf478547a5c7c28f75d53bd4d737a8379436c28d92c6b1e371c76ffde0f5437b13abe95033a3b9f804382139f1e2c7f81fef9e0c3cd9798a7daae927fd9ff6b6d05a8a5aa1d6dcd689b6a436697b4c7bdfe980d39d1dce1d2d3f9bff7cf48cf6999ab3ca674bcf91ce159c9b399f777ef242c685f18b8917873a57743ebab4e4d29daeb0aedecb8197af5ef1b972a9dbbdfbfc5597ab67ae395d3b7d9d7dbded86fd8dd61ebb9e965fec7e69e9b5ef6dbde970b3fd96e3ad8ebe057de7fa5dfb2fdef6ba7de58eff9d1b038b06faee2ebe7bff5edc3de97ddefdd107a90f5e3fcc7a38fd68fd63ece3a2270a4f2a9eaa3fadfdd5f8d766a9bdf4eca0d760cfb388678f86b8432fff95f9af4fc305cfa9cf2b46b446ea47ad47cf8cf98cdd7ab1f4c5f0cb8c97d3e385bf29feb6f795d1ab9f7e77fbbd6762c9c4f06bd1eb993f4adea8be39fad6f66de764e8e4d37769efa6a78adeabbe3ff681fda1fb63f4c791e9ec4ff84f959f8d3f777c09fcf278266d66e6dff784f3fb323a597e00004000494441547801ec7d099c5d4595f7adfbee5bef7d5b2fa197103a9085111210121d67103a218011027e2a714091a0080e64749404466749074754121c95014d50c165c210c6cf250842c886387e1296008e03249200094dd29deeb7bfeef7eef2fdcf7d5dddb75f5eafe9eebcd75db77fafab6ed5a953a74ed5ad53eb39ccb22c493c82038203820382038203e5c001b91c881034080e4c460e6cdbb6ad7a32964b944970603c392084d2787257e09eb21cd8b871a35b96e58f4c590688820b0e8c920342288d92712299e0c0601c983d7bf6bb2c66850683117182038203c772a06c8512eb798e2579e8102495435555e7699aba85d00c9d4240080e8c2d070c6604f59cfed0d86215d84a71407ce3a5b852b961ec441f74608b1629e1175e38db34cdbfc16f8924596715b393492c2631e925889747bc5ef997ededc97da0dbe470b5b5b5c17c3eff5ec332ceb30cf35a8437f1b8d5e98c6b8d039687931b8944a27ebfa1b4b626db9ce1c22f38305a0e5007b96dc7b67f64164b2c5ebcf86eb453719268b4cc1c205d24724ad4b03a3e5ffcad133846a02fca2ef9171e0fdbd4d696786d001422b88c3970c28412352c5d3ffa6308a1cb4af0270641f486255961c4359588a7a0038accee8d2552ebd470b88519fa9a527003092555d3b6b09ebce1c692a94cb4547a112638305c0e3cfcf0c39e9ada9a7b17352fba7eb86904dcf039c066cff6aaadad7f700e5c21843060652f41f4cf4778a4185bc063bdff4847e6e9e270f15ebe1c3821cb77244474bdbd830b246a581ed975b9df1f08a55269865f34994a9d0d7726bd2f5cf81eb7a2b817621cf4a283954d8c192abd671289dbebeb1b7ce17044b524f68803a6a497b1b528779f30449ac8c93581c692c022507060080ed8b3a36ddbde1fad8dbe07fb48bb860017d1a3e0006b6c0ca8ad6f777181843ee3c5e9e82f92d457245317a452a9681afd0453dc1f73a2cf1b16565fc453491c9850a1441fafaaa9fb9db31ab7ccaea386d591486c696b6b4b9662de8e1d3bf4582cf62c1aded9964b59cb613437bb8ffcb494b777efdeee43870e6598ecfe198f9f0a2e09582d145aad69018bf83b15ca5c4e657ce4914702db776eff7b59911774a5ba9e5f7cc1e29f94137d938596403c96e6655164eb2ef41967bf52d45f58e82792b1d8e6b43d382d40ab1e6b134f57ceaef88efb6a47e9f38ebf2fa0064c67afe9f7bbe68e74dd371d8fb740b0ad213cd71fcdb616536d3133e0cca3389ede2d6b8da906d76f942cf3067ac7f2dd8b6fb5670e91bf921e9a71aa2a962deddd3526b5d84bea92d8c398a04adcbe7dfbc5aaaa7683ffcf2c5ab4e8771394ed94cb06edfca6be6fda926289ccaac1986061708a34374b867e8fa1b3dc60b0e51027bee3feb5306133a54030b8a9af6149925f962e1fa940ea239d96f12c69a0030c7d7003fbd2c9e48d7cc90ffb49670f0c59be3196a1d3a10ef19c200e3017fbf41bec8d3f088134ce1500e1c273f0c8ec72ee1f8eabb8587e38702712467cc7fdb93f2133257fb4bec9659957f5656d1d684b64b6f4bd8fd8770a09a5e37d68c9ef78719cc8f4380c12efe38375e07884f4892c47a5e58d19d2294c66ff6c99d6ad2b16afc03e8778c68b03f6e10607722cc73def781dd0cb2c3943dfc6c1a3d9b707042a9308f11df7af88099929b17c628733db88dfbcc4f93e527fc0ef9fe1f3a9d3479a6e32c363160a01259e89e000f6305d7129be0a47bedf9888fca6721ebef654fd68ca9f4a743e904a65e874f1f18f5e4743c028d388ef5892c67da614acafaf85e46beaab238c5edaba8eebfe40cf8188928722faf2219f45fb2cd69afe81fddee868ba691ebd2291483dd02f6280179c2590a3d1e819b853f517f80564d9caf899f24c6b67e7810192f40b0ed5d6cef158e974bb630fab1e3ceaee4ecf354dd907e018f629fe448736fa25142f65c301dc83f955d0085e5036044d6242984bc94b8e05b8748e9d83e28e6aff970e0295125223091f0896aa00fd42936118cd3881d9847b6a69f40d6fb8dd6ccf9967265fdfb1c3d2c7ba9a40cb71f545440ff57f6e297e5a1b0e9271faa81ce0d32c7a77bbcd37712f74ef007c93833535b3e47c7e06871dfd960ccf1d1be3e33d90b037291d6bc23233372692d91bfb48185b9f333f3ac050bc5f04f52fdef6f6f67a349e2b2154be0c9965df6d18e83e13a78e2ef96acf3e7b0f0efad9872378b8d3a593849d45c28df23b1c8b9d62e5baaec6653f5b3eba5de6dace78b68504b6994c1cc1e8e89807612fd6d567debb77af35e01263002719fb04be252d5cf85ef7c183075d994cc695cbe55c1e8fc710c2ed18d61e5700754abff9cd6fa2975c7209ae348867bc3940a7d202ea9d86f31ba956dc556fc4629d23c9bbffb7726ccae2bb8a815064b56ce6ef3c165292bc8af5b1a3b1cc661e87d3af2b24d3b89fbf9772e97b4ea533ef2ed5b9f7a76de8ef78b47d11d185fd4fe5e5975f3ea93bdf7d05faa3d5086ae265a701b399cdbc5a8a7e974bba391e4fdfcbe3e8c42fca5c923f1e8febfd1d1d89a739ec48ddf15fbe338c7e9db822cb38a430318f254974f9b6f7a1532eadb8eb90cfe7f69b36438fbd6cd70becf06891c81275f733f98240b224cdc3e617ee4ed554494c7e9083e64debfe5050ddc0df7141b793f2a38ae60289e264c6fe440dc01a4020110c683fabb535d0357b36f3d23b7fa8530c85aa96e104a2d52790289649bb4123e517c7f1d96c369348273b6fe7e9843b361ca04ec5e3f53cf5e8ce47ebc606a3c0321807e8a46c71fc513ddf110a69eb6b6b437368d0571c5fea5df178afc1c4e2a9e2387c4e4fc9b2eb3a9fe2b9c819e775f91f662e792dc20e38c365266dd424cf561e86ce793d1748e8b8d7d2e096ee56a6e12a8abb17277dcf2d85d3b176d2d17ec7a3ed8b285312b4d4477475650fa23fa2c3234d148e8b242f4522b50b061248046318d23d9150808498a4e1d0da400289e27339e3b755217519f947f38cff4c49d3f64012f7aa0e0abacd99ad9dd903a3217638699c332574ed07b0ae3c93a70bd4d4347a749d96dda6e3f76f7c9644f103cd949cf84acdbc286d3012596ee9f95e3d677e455ad8164b3f4b0d48918c2a54e88503cdb0dcf82024976b271a693097cffd3bceab9f4f38f9e362d683f164e66afe3ed8088ec370d7a7b08bda63a927f9bb70c786038f3df6182e79a7baaebcf2cab23f6e3c36253eb1585474984ccfec1e828a03f8867eaf30f909c52bfdf7404b664e4d2e846f288d0f5a55dd3c29977c8960ddb2899590ec03e4a7c74917dd9d2a7554bdb6f6f46036fb5682e09d7dcc68bee3e3e98b28ff280e9c1946ba19dedac2a09ca4248b41734eaf260c974bbe599695470dc6a61bb9ee9f6086d704f8128f75c0af78aec4fadeaba4e22dafe7b702d6f158286f7640156f0ec063bce32a946834507c37e9440a2567e9b5501453ee5cef94dbd960385c411512699e283cd3fd99d02b6d56c9bd2c9a154168d995cba7c33c1db934b371561a66398f2452e9634613ce865e486f49b461ebc44553f09d3b771a0155ede079160b6027bcf08f2d077eb3f3374d5ec9fb7dd330bf78e18517da1dd6d8e620b01573400d863630abffaa4b314cf13bcd6a12c9f48dce705a32a7150a1e36d04093c76356b00bf719cf2ff94d3bd49b457dd6f481ee3aa26fc0c0dc3ceb78bee3b1ec8ba86c059afa260be860620b16666a8bf7be78f9393fc8a5192196f25a9c61e477f681f43edabe1e7de3783e2dfd3ad3f1cc69a4b8e992ed5069f246e7d7390c35de810412c158b27c078725b545c5cb6e189338962d2da99440a2f4e958dbb366bf650626adc5ba03c74d2e69b8e8599b7e838783d171ee17eef872e003cd1f3800fd764b602f69c5033b1fa0c329e219670ea493891b1525b010df516cb85999967443500bf4db7b4ab6b6b6e1fbecfd16e13febd86fb59003a9362281446fb4ea704cbe86f1211ed66d4a33b9ff18d7e5da88efb3374f1e3f92ef786cfb2250009a381de45629ee538b051285fb7d8d45ba492da99440225897dfff5e72f963315790fb47e2f6ebec46927038b085f5e0be064069ba4df983c3497ba2616896273946666e17eb5789c5f4c9b2e7056758aadd37e051564596ee72c216fb992cf72e0516c789f7f2e1000ecbdc7f8a75ca695033b4c26e2fe543daa4a42486011be9b8231d971e8f773ef67c6e06df1fec3fe0eb5f741a20f2bd101ec33cda35dc4f6e479bff0ae73bf70752a91505bf25d1723c0f2fe56672ecb7b5117541a93868a1b9b7f8c05529b881c2c6b32fa23c691638d0c191b6b65792d80f733e079c2f4e7fb2bd7daf13b64b373fe08c1fae7f5c855229220cd33aaf5478d985cd9ae5c1e8a6f7d10d69695555d53cda5ca5239335d89fa2a3dcf4233f93f4aa5ee0213c38e8f0fa6020cce5ffed60f1a5e25cb2f41fa5c245d8f87160c992252f777575edc3f1dff9b850fbc1ad5bb7368c5f6e0233e7009d28ede8e87839194fde0b65ac57934e4c7eb8a058212ba5314ce9cb3c2db9a98e775e76769eddbaf40d677cafbfe7d4f0805a248a661b595dda0d1b6e5630a8ed8a4482cb4f81699c5e5cc3f494fc8ec7b12fea21eb8dc1c9eb9b58b898f4fbc1618f3f762284d25b4e320d4bbacaf93e9e7e0895512f69155fdac311a0cb72b9ee97b259031b7bb9fd74822589b569fad9a7591c071d862a936959b676f381e04cd9ddbb8f35108c082f0f0e2c5dbab41b7b7c5fc472ea1f5d6ed7729a35950765538f0ad481490a59657f60aeb3f4345b5a5bb4046ec9ae5bfb6058d3ecfa606ddf3b96ad7028a03028b5a48e44baa4f699cc39e7945c3d011de7ebbaf9109d122421452772eb8bf03bf31aca3f9e7d11e50d011d1e8a061eef92d9a88f7a731c43b9e32e9498e2fb767f22985457a5cdeb1f363e6f2361763105f6a53d47201a688c960ce80c7ef10f473f17529ccfe79f4e7728162eccb8c7f384a1832ce12d130e90768737a537bf274b72234ee7f5ebe0ca84c4294346a2aded350c220f0c56e06c30788f33fe704aff57e7bb9c4fde4def6ed9bace19eef493567245c1b59021f6b9686f2b99348f8cf6987439f545430da89dfc19ad5f196dc2e1a64bc78f6ec3093cac5bf63de99cf914de463cb5edc3305c1f6ba211d21a8ca0869b622038976cdd414b0603c58b70c18115cdb61ebcafe264e43f6213bbfaa9a79e5ab566cdb1f76c04a7c69f03e8c8d79196f08172224de25012fd94dc7390c1b4e41bd057fc2df515057d7b057b6b7f9fecfaf14038283c167b830e5244c9fa7577777733ae9ae05e669fad3667da9c29fd0a798cea98b413cf64ef8bc67da684a9ac25396c201173693a5d7b1c97ab9c1534517edd946e9aa8bc443e95cd81e6e6e6afa2d9dfb560c182612f8b547689c7977a088f5da16060d74872b14cd3b1775d5a59b1ec56573a717e27ecff28bd078e1cf934b96e1c7d262145fea11e527d96804d38ec6f2da3fd2d32580ac1787371baef457c338ac346fa3ed9fba271174ac4f04ce28bb73b3716292c8b51437dd4df44fe727cb247af6fed4f336b5ad0c8863c465e8e6511344d3c07209466040281af4e7cce932f475ca60c6309ecfc1195cc32dfc7e107da9c3ff6c0835538f5da33c3aa9996f91ac751ca0de0d2fc40c292845412a7ee0acb7ba5520f3f6caaf545132294e868b8e90ecd2cae86645ede3fda75d6625c63fd4e345bfdee0b49d26b09ff63639d4f297cb0afe22e153e5818544d0e7a7862b0b4226eec39f0f4d34fff0182e9a7638f79aa6284ee013cc3297db112e86975d9eb064cd76f36234b9a7d091e776ea0496530bd93840fc2b28684e56074d1f21e56865ee4f97b2cefa087af4a7dc727b22fe27473172787d3dc3f5eee840825223edbd97a4072e882e205a275561a6d34d245b5613eb64242e85fc2c5b83dc34c720c58c1de0a0fee3f27e2a192377275af1f1e48a9f38bef3c38e3c94f3aeda2216d4571385479f42ee50c55b1b29971dce52a683a2fc657fc9e37d89ac13e8e6278f13ebe1c78d705ef0a409bf83f8d6f2e53033bff76aac2fe2b872a31f50da4e498c39131d1c1844b66dab41f70d8825bd0ca12f24aabfb870ff4c6a459b324cf40b13d38cfea71a581ee03f1f4037ec763d817515e1830f50e6221e90715949c367275c35aea7c1fcc3f543f3750da09134a44402a167bb2f8b8268553674f4a4471be7f533dee00a1733d862e52bc48f7844819202947c54debaba06fea5b94def938994de12df689472744c16f5afac57da14cdad2201d73333fd3fed621ab683f4c37d99d9a16d85f8513848b1631fba008d16bd3067522a4d4d030cd8ff4e1c688aa202d9a78d8482a96aeb6cdc06d419eb6c8751cb76792aa065e8f44b425a0e53c0dbca43b5545f0e2758238104807dc866e7c6582b29bb4d9909670749a4d54c06e9d3d1446bb3e1d870a4a155843ff1040df0078fb2175386d031ce7e6e92d18faecaf418562ac0303a90ce2e96cb747d974db61ff80cbb4b6beba9e447e852dec97beef65c8ef78acfaa2de2c4de326eec790bc4768f29062b74f1d1136d8ce2c8e1de85d37cd21f0964e39aebaef4a67499df45a59d3d67f177b8838a952fae951141803343ae43e85817dd0d60128fc3b6d4dcf6999d091773e6d594ce58a06391ce401b400b38730f16f37fcda0e3993bad294e46958225bc3617adc035046b88ee062b1e466679c1a0c42efd6c0b43a614906d6d7677d343a0b413848ba3e0b277220a4fa9fc8014dd0ea201f0e28e66fdee948f53bd5e754bce8a48d046e32995e0fd79eda1dab27af3f2543299bec0f2ddec69203387d77abc18cff5ed2bce4e9b1c43bd570515fa1c2744571b9217862b0fefb037cdfaf9ba67456715fc2952217a72bf55e6cb261b8df8dd3e40446d18fa841f9539a5697983e7dbaf1ca2baf4493c9e40ff977ef81e9870e87e907271d23f98e47db17517ea490da4d262b2c762afac95b9c3410fdd090f118efffa8ef62467ebe61cf8c8afa2e266f4427beafb8ef2a656684f7730d5eeff75ec13e9b33cf81fc274428716268f6f30e4eba4040d054b989870fe45243c492c8b723ccf56de734b848c922049944bf26fc0e70a12633eb29dde5b947eebbe4cae100464f41f8918ebb522a41ec86db95bdaf588b7721adfdff00f4637dc6a9951b0a0ab7001fd71dc5f36b02f401fcc83dc6360b8551833073ddbf054d4863e1c705b325a5d359990b25822d21c02858f2fb5d73c7c2e0968d4cfc1b1107b6eddcf6510caaea8eb61ddd2834898f887525816906047b0877f00ebe24504f20d9fd49243218f08ecce26c9fc2e46315200f945fd1f75d120c7dd68b5e9f75a9d3a86729c0917cc7a3e98b284f3a9851a2ff6b42d401dec7c8920545d11998c6e9d77721bedfd3446fc55ad3290ce93a69990b4baed4dfd1d344ff0653584bf1cee7840aa57e846009acaeaeae1a67fdeb30b338c91117f3fb8d374e3f3dd5594a61a0036e42bc1899d974ea7adabe6705eb3ae979f38e1e3e91b4d1ea604343839f0cfb452291dc5e2c494c08334426fd38b076ed5af9820b2eb80b27af562d5fbe1cf70c47d631f643265e8ee100b5f33096b2a108974ccf9ce476bbdf447f315751a4cea029ff8f73a07a4ce2210202b08b2463f6802d815b618262dd10e0fda269708da3e0a19ebecb2bcba60f56a4bb466a417aa4df31e0cbae2feac79851be948d501a25fd2299e040597000b3a32546cef833acfd9e8f7b4a3f2a0ba20411c3e6009f29d5d767eca5f76127148063ce017ba37eccb10a8482035384030fef7c58abb16acec5e8fd336f79deba165a1d8440aab0ba27437e58669368e96ab0937a1556ac8a2557cc942ab6ea04e1279a03d00cfe57ccc5de6beae6e35041f52af68f8ed9903fd1348afc87e600f6416cebd823d9f7181aab80182d07c44c69b49c13e9a63c0770faeb7310489f87f5d9c3539e1915ca00d206ee92acb3c8a6d0b08e815768392b896c21942aa9b604ad65c10168010f7903de4b2dc3fab21048655125a32602dac05fa0c47e8fb46cd44844c231e580104a63ca4e816c2a700002e91266b2d7175fb8f8f5a950dec952461cbb6e7119fab927d5377c3493c9b8e289c463982145e800f3918eccd393a59c955e0e21942abd0605fd13cf014b3a2b9fcf3f3af1198b1c8f8b03b8300f8d04526bebdb5d4e3c9a479eef7c17fe13cb0121944e2cff45ee15c601d84a5224261dbaf8e28bd31546fa9426979fb02b6602dd4b7aa723dd4fa34a318c789f580e1ca3636e62b317b9090e54160760fadcc06acf294f3cf144af42cbca2ac1d4a4d694f50e682db0b575930a335c3c7d8ab49e8cf4a2ecd4e4dec4965acc942696df22b70ae7006969805ebbad8aa2d4a1287faef0e24c19f233eded8750d8b3a74c812bb8a062a654c19527483f311cc8b3fc215c96fdd7c7763e36fdc45050b9b9c2f0e1c9954bbda07c22382084d2447059e431a9387071f3c5af1c900e5ce797fc57d0f1f04955b8712e8c2c4b774230cd18e76c04fa0ae640d908a55ad848c17abd422efd483961b9f39554c13b2de712cd51d88312768ccabde68e9f3ea813eac24ade931ebf67f1f65ddbaf3c7e8c53030378168739832df4a94c8d128b528e9403652394baf2f9a5bb61a02b97ebbaa62b97bb0606ebccfaa8bf69a4053a1e7852914f82653838ec9be0dd5deb4c59f66b919a25b082db099382ac3b9fdb91efd6af180e0e0153d91cc020ead5ae74d72e6c9c7f68ebd6ad0d62396fe8fa84ed23ba0f341fdff74e7c6ad3864e2120a61a07ca4af71d2cba76a652197b044517dddc66ae3e96ccde38519582fc2de43f2ca11480dd90c6607acede56ab8de8c30746768e4ca8c05f5de5cdfdf2605bd76b1345b7c8e7c4728006328f3efa68d0e7f37d0f94dc0361f5bb134b51f9e60e56550702fe4370bdb8b4fa5a3e6ffc1f987cf853f9522c289b680e94cd4c89ac16f2c2332ce349b8e816f4b2db298c6630a190b61e26be77d5c0dc37859161bf202cc2c284fa2e4d53f79f8ca53432955e15566d33bfc170b025180cec22d8dadad301aa6d22f84828b09ec2d450d5b2306008e7c93581462d12015e26513e4e73cb144f7990cd144a4379c1eed334ba09fe4e4afdafda486481065b2c9ae6df4178f1b1f51e152e4537c1886772710083116be9d2a509d8f8f93b4bb64e85a2d6f74cae128e5d69c0aaa3f84a1e2a60647314c5f52cec0e0d68817aec7216982a8503653353ea317bfcbc24bb9e94606cebf470467df6909561240c5a0f75d10c869b464e4352a8a904ec6a156635b085d2796b3a537d67b8e61cb799fe1bdc3d585530719c7a3595ca32b295d2d0632705268cad6a9f7ffad1aeecc119fe4ce8d5762935b7a6463b2a554bd9ec9b6f2e5c98ad751aeca3653a251f7f01d668a3e4f71b89799dc9cc23012c2faa1ed7fbdb3a93bf0bd6d4cc36b33d79618617f5746f3a1439f98d63e84e67fa598d2d8746e2f7db4ba462e3798c2a0347c5d94d37ddf4897832fef68feeffd1b631423ba9d0e043aec322f90f9d0338cc9ab6c34cf76de974fad949555851981173a0ccee2959e15422b10a82e3967d49ffcd28cd3a5f7baa9e663098d5dc140c3215ab64377b0da3d1edb2d6f2d25a05f3e792c994761ea65bbeb42ca53073592bab98bb1c39a27d29140aa51599dd6a7abd9d2c675e7e302b2528eea8d43db7bdfdd5bdaaea979c028970653b5b0f40a84568f624eb5d5fea48a6ede544a8bb8fb9acfc411a25076a4eb6f3e279935b8a6e8275c294831f479b2f66ccfa7839d0321968b02c43bae79ebba540403bc7eff75e026bc0c20a70c98a65c497de55057ce38bf1be06b3a61b2198de2e9944044e090e948d50b2ac35a6a67d03ca112108ea1b7c32f453d55569bff15ad507755ca18fc793f7f21aa1194bde606bf0de4261d8046a22d752748fa55b0de467b9f43974739bf0aada9d5284b9befd463c86c308850727e45e6d6b4b33523f92cdc61f07aad324e91b3cba9fcb14ff4507b3998457962e7746282e96a777975bcf593ddab420776cf5335ecb132fa6db99b65cfce800368216fa89670c39409668654bbe1afb4b9f1a43b493021596baafc117fa635e187c337f364debd3d96cd65e6ee7e1c29d9a1c90cba5d8b42f83861a8986b415d6debddda6c7fbfe54ce7ac9edeeac9564e556ece558214ddb120eab2d347bb124f9113b0cfb44104af6d31d89bc6158f255b4ef235bb95516f0d9c7b395c0c2a37abe83f686429a4ac75159266bfca106fb482c9f5ee9f7bb2f21e145f038ecb09fe29d7c49c78f6ea3290e2ddb5178144211223012eb96d7d15e93954edf46762b292fd9343f1ecbca8fd7d6be9929a69bd28a676a7060c9a225dbb22cfbe5a951da9196525ec5534020fd5726933d470824ce11e196cd9ed25055c105051a71ef121885d13b96fbf6df96ce9cb606a7df080f0f2fc68970fb841c0f2781b26fdfbe1ce1e06163ed122d84733cf3186b9a05bee3e7c0934f3e1956dccaef9b2f687ed7f1639b3c18b03c772ebe087bdf085fdded98a9d38a877804077a395036cb77bd140de029d5a9f330f4faf6b21f4fcac3f93b77116e0b2dfebe173332ee1f2f77205ac62b3f81b73c3880030fe96c267b417950533e54e07bb8a0304eb3be944e67be5e3e94094aca850365b37c375a86042391e53293377f2ba87e72b438443ac181b1e680c5ac1f40dbc325638db7d2f141cdd042cc90be8a93b34220557a658e13fd15b37c374ee517680507c69c03b0b9f4f1e6e6e6ff1873c4930021f4deadc4fed13de3b58240cbe5744543310cafd79b7fa7b535d956a96ca3eb30a123ef7cda79c88bee67babbd3733b3a124f576ab986a2bbe2674a431550c40b0e4c14071e7ef86117cc5a7c10b3a4bf9aa83c2b2d1f9821fff7f11248a1aaaaf3a0bea8c39bcf8770d5a1239d562e2da8ff3a3e2e9170a8874ecbe3c35250024042733878e82a8bf64eeb13b8bb95d122d517f17258e9ec8a7c4edf321c1c950a23664a955a73154c7763632306cc0163faf47d06dd0ba30fb5a1a1c14f61e8b45cdcc51d1f1715b3adad2dc98b4bb09148e41445313c6d6d89d778f8685da2059bed7f158fc7b7110ddc5f5d5ddde0360c776b67e781e1e0eed1e280bdcd6eefc6bb37fe69d7ce9dc670d30e077f2918525c0cb3ec7341fb73a53a7ace2b1f128f372da5e89bc8309a4158c9f8117ea19ee75d55153aef786715a4f22cccf447de8e1ddfc5de91a831439e37b9adbcca8d10a22e0b6acc6a4e6ef4e48e7e811404f0324e3657cc94265b8d9679796804184f241e6b85968ed75f08070be4b6b0583c7ea8fdf0c1ab92b9dcf456dc514b27e3b743275a73269b79697aad6f4e2018dc55502135b64a6fd3e9dcbb743dbfb50587369d7e2805fe42d6e85e39143bc902eda33b1fad632ef615088897172f5eba65cbf6edd70c27ed50b8878acfe7a5b9a07d37d15e1ab6c0abc168e9115c0b4aa7af9c503393b9d979a19e53ce05928aab23b65a31687fa98da80b1806239aa6ed09211c97e3f743474ce7ecd9cc6bcf50a0920c17ed5787b400ae8f40fd99a15f9b36d817a3a1d00a525f46574ee81709a95f261ca4a68c54a339d59c115f294f8a27610435661751350d538d992a19c60d86c9be4c4a039c6acc2c4377f3b295529fc6e32adac5088b8e2b8b9fe0c184b501a9b959c1328bd582cb5dbcede17d0ff7fbd5c07e9cd12fcce201eb8423187f30b8bab1c63b87c31f8f2b211f68f2d84f389c7e7ff5f4c648c8d732186e1cfb9eb37dc7f6ef3ffae8a3b59b376ff673584a1b0efad7f3f7f1748bf9589c171404df3458397c91baa6a0eadf529caed2defd9ab60b3c5f5d8a6e9b0741df0a8a931a1a02c433aa6bb4a3f59c3748bf89fcd88f9a13d47cbb081633f2267221bd36d446fde7511a8aa7f4d07f591b8daaf3288eb745e4d3e2c0b7ab2ee2b3d36b616d7955d5ac10da596773b3a4386924fe6b08a730f247838165e4277aa80d214fb990a70fc10518deb6a0eacc9a354bf2daf0f04faff63792bfd27f62a6845a17cfc47200f6c4755c547ef13b61ff472967d2d0e155ac3b9c54cc9e2579e85d7bfe991b5a1a1a7ca418972bdba54128870d6299a36704bcbfbe3e58cbc3c92d1eadb2050bdcc0b38946b9e160605301b68566193d570afafc3422d54dd7221afd02dea24bdd044f8a7be912b6a685acc7ffd8f659281bb9fbfaebaf4f5f77dd759b096f084a800ba3d9c2ed031ae5d2856f3b2dfc3402a70bda6bb11c4361fc298cc0b53d34625fb48829a4bbd1c68734943f572e4cf0440346e05bf0ebd550c2f1904ba376aeac98193a0e15305bcb08d9ff2ad00efd8f91c072827519e995a6c4ce241a4bf387a0caff61b2fc90614a25d565a13e566b1eb6954a611d3a9441db8b9ddb20f9d13e523e597a80c299cbf74df0494bb6afdc870bf83388e7463e7737c549b2dcea719947d0d95b795dc9411973acb5b5b5ada323f532c5d930f8c7f94cefcc32e7b7c6bade207f3296dcdcd1b1cf5e822ea5c60cfcef516396fa5247225dd82f62ae17700b33852c4d529946789c0fcde0a8e1f6a84f5b5d509f162dd91e9ce92ac1dfefc3a80482058d13cb01ecefcc188f1c5d7efff26e5db2b545333d79c7e7e2d9ffe2f9403d54fcf03bda77d081afb70c6bb5dd91c8ae1d96644ee330e4aa91da05b2993f0fa7935a747fe09264523fe28cc768736748d1bf06cdbd6733c5f5b1d0e1c3c170287d7d2a959ea95becaa058d2ce0842ff6a33f383f954c5e9d0e47d4bc69dd4f824496cdae55ab562fbae94367dcf6dd6f7f733ed408bd188bc7d2abd3e92b08afc4e4fb098f69b98210982d7ed9f8cf783cdd622f0399fa2d8944629ddfafce77e645c2d3e7619b884e83c92fbdfc82af39d1d6f61ac45a53c82b6d045e665aec7cb22f46b6bb1433f701c02e4b2f5cd84f08739c01d825abab4b7d2e994c5d60caaebbd0b9d9421cda46aa284c516aaa38ef6545f985cccc271289ccdaf0be366d24fce1f995839b39e79c8d1036677161cb6922010d25cf3f4be6a42ff030d2c6f2dcdb52161d7e6f674f5aff490884c33f0ca7518fc4735d922e9b5d34d0517c521a73917ef72273865c68979671599f60625275d87f655f9ef680a7efd5e1eb5563c6cc4778306849735ca4c6ac37dca5d8aacd0a1a68309a82fa346a5389446add21085c0e57c9ae104a955c7be34c3bced4ce477ff9cfe3910d75bae844a42a9c985298f9f61ac7c5667cf4e1443279233eb655b2ac7c8ef2e71fa89316cbcc2f4267bd94d6dd3ddddd57c00c02d6edfb9ee2d16ac2e74bc713ea63345ba151e6b2b7a51e8d857d699c3e578fd25f128a101007763663b9d1941b7efdd40b7bf6b51dfd9072f4e5a70b23562bc6e947e7f00043c7019d553760a8bd66653cf33ce1b43b11e6da4823f0ae6ce6cd9fce927af706d0395ad96ee906da6f00cd337c6eebcd1e3a0e7ca63db9cff63379a34bb13c260492e63537da61384cd103d7eb707af6eeb5ec8be1a8bfd779a4dbf22669a6649a9dd7a3fc310acf5bde83326349a2215eebc98c843f1c6f39b834fbf6fb4f0e75ebf2069a6d122f6936197afe997fca9e7bee3fe44d764b24a4ada69972d0c3e64bb3667920a4bf9cd15961866e1ad3a14ff35ac61267932a322cdd2d7131ebc1bd74a4dc723d17cbba5e25b3395ca51837a1c35cfe9f6572ecb7c8730f1ac70cec037d9cf6a64c77f0dddd3a7b8854a311be91a831a3d37e0c7b4aba29dd44a7fe789ee49773f12fe8288b6d00b584fab472a88be3a6016db1e2d7204519c6be0e61b06e268cb11dc44c69ed78f1570d4656d0fafc8c7038eaccc3b9a7c4c3695f80ef19f03d257fb86a39d6e37bf7a2382c77b179d05915f62fe7efb4875013762fa0775a8fc7c682bd6f456bfd1c86fbedbd16cdb781c20b7b607e2c8db440e3bcdffaf9b66def9979f2b48b69ff001f20f6a4fa97a1674f69b51a3d691ec5d1ba3fa59d5b2305099fbd97d1b3c741ef5edac7e8d9d7f1abea16be17e1e403cab285f60cfcc1f06a0eab615f83f0130efee3f4f4e685fdb968287013c5039fbd8f870ed9cbf731286fbe4731107f38ee4a718907cd457b3744fb2c947b3865407a79b8b0848ff21b082fe11a286eacc227228fb1a27538787a1bf37080054cdfc73f99798119d26c08a4b7a8c35355efc5e35556ea1c55b5b081cbf3d0c2e1e5946f48f36fe2610538758f86c31035736b82d09fb607c2613f751ce8ac29bc1333905dd56175094f432e0916c285045b826a604b20185d66bf63739a841209b9604f186d303bfd24580896f204ee4d2d3d9d4b0861a7fdd5d21c46e19b48403534601fbc8766820b85022db4f94d719426188dd2dd190b47cc17c2ed8cd23b68e51bd44467383c236ad3051aa96c41cdbf8b6fa84782ea0a82a18d7cdc55d940029268b769437ee472185ef65e7a407b1faf242fccad6c225e61bf693da53b091bf5bd79037729fe709cc29d1adf7e39d4b32de12169c5233860730033a3bfc492cfcf71c5af0e019dd04f46277ab2e5cc1ed06bdfe1188846673cfcd4e6ede1ed40f0ce70675a0aa70bb25a34ba30d5d9b9fbca2bafecb77c560cebc4437eca1b82d433163a1709d748cac169192add50f11c8f700507c68b03f2782116782b8b03d419e154d82a08a3a77a04120a60fda8dc051271193462cb67e0c7193fd28edc9996722041e473bb2ec25ed8f9c53916c39688875596b151023cd272705a864a37543cc7235cc181f1e28098298d17672b082f6647ef83205a07b9f4d70eb23b75ddc0c62f8b3bc284171c38f7dc73ebce7ef7d967ffea97bfdad9d6d636e86109c1b0917100ed6d3fb47abc35b254027a32714008a5c9549ba3288bdfef9fe972b1ef63716971517228b2b4feb7284cbcf670c0e70b0470ea2fdade7ef4b061e8383d2c9eb1e080694a1b20947aee908d054681a3d238208452a5d5d838d18b03074bb12fff3d8c5467f02c60a2fac3e8207ecedf85db9f035bb76e6d503cca8d46def8c592254b5ee81f2bde0407040746c301219446c3b5499a0602298a5377df87fb612a22f617fe1f0e3abc6f9216774c8a05dd7733dd5ef7f5a66efe080a643b972e5d5ab1a612c684210289e0c071724008a5e364e0644c8e63c4d04020ada1b2e5f3fa19508cfaa7c958ceb12a937d22af56abf74bfe87755dff18664d6f8e156e81477060aa714008a5a956e3c32c2f9dc4c33ed33a1c9e5e09730ef70c33d9940683f98ad34cd9ac7559ae69503ff4ab29cd0c5178c1815172401c091f25e3267b32d8a581966be95f51ce8593bdac6355bec58b17fff977bb7ef78c244b676ddbb66dce58e115780407a61207c44c692ad5f608cb8abd2586e3e29fc54ce9bb234c3aa5c1376edce89e3d7bf66a9de98f5ed47cd19e29cd0c5178c181117240cc9446c8b0a9044e172985401a798ddf70c30d79c3307eee62ae778f3cb548213830b5392084d2d4ae7f51fa71e2c041e5e07ed85a822256f1080e080e8c840342288d845b02567060981c50db54527dd4344c700126382038d0c30121944453101c18070e408b7818e6a25e1c07d402a5e0c0a4e680104a93ba7a45e14e1407bc7eefc798c9268525d013c54391efd4e480387d3735eb5d947a1c39b06de7b64f9892f9c78b175dfca2d0ba3d8e8c16a8272507c44c695256ab28d489e0c0dab56b65ba402b4bf207e828b8104827a216449e95ce013153aaf41a14f4970507a003ef648fc7f361d3347f8bdf9fa16a4898fc288b9a1144541a07944a2358d02b38504e1c78ecb1c7bc2e97ab014a5957e6adfc83172dbee8f972a24fd0223850691c10cb7795566382deb2e280cfef7bc8ed767bdaadf63558b27bb6ac8813c4080e542007c4f25d05569a20f9c473e0f1c71fafc272dd79966c85175fb0f827279e224181e0c0e4e08058be9b1cf5284a31811ce811489775b1aeed4b2f587a7002b31659090e4c7a0e948d50aaadad0d9e79e699d93ffef18f7ee27a7b7b7b4a9c5e9a9cedafb1b1117a5e03c6f4e9fb8c1d3b2c9d14bf363434f8290c966e5ddc85d13c1771a0adad2dc93941b09148e41445313c6d6d89d778f8685da205fafdfe2a1e8f6f231ab8bfbababac16d18eed6cece03c5b8b17ff4498b59dd0309a49a9a9ac681d216e33a9e77fa66f2f9fc5cd0fe5ca96f85f3ca874c4a95e378f216690507c68b0365b3a7d495cf2fddbdfb997c2ed7754d572e778daa06ccfaa8bf69bc0a5e0aaf5655358f3ee45271226c6c38c0d85a399e483cd6da7aa8ebf517c2c102d616168bc70fb51f3e785532979bdedafa76573a19bf1dc6059b33d9cc4bd36b7d7302c1e0aeaab07a9324b5b0ee7c6e47be5bbf622c284aa773efd2f5fcd616188f72fad106bf9035ba5716e741ed43cfe93f3b7ae4e8c6e238fe9ecde73f532a2d8f1f2b379f97e682f6dd2da0bd34ce02af06a385ca0321bfa0747a112a3870023880111699bd2e8b9faafa3b392d8150a825acf936f0f78970913fb2290f5e4c663aa4e66605830eab4592645e4ebcd3bd1ebb1dfad5c07e0b1d2dbd13ac138ec2fcc1e0eac61aef1c0e7f3cae847c50effb0987d3efaf9ede1809f95a8a716fdebcd9b57de7f643c5e1ce774a1b0efa618f6afcdb52311f8bf3c4777453a97270385fa4ae29a8fab7f077e18e7f9d091e0fcee3b29929d1089a7a057ad8a2458a64e86b825e763bbdd30c2614d2d66b416d574d445b4261c1fafada6030b82188304d53f79f8c25132d18dc54184d233e1c6c090603bb08b6b6f674806a9b083e120aaca7303554b52c0c18c279724da0518b4480974994cfe9581621187a54a429c00537211f2b1454375038e1a77ce9079cab43b5b573e0df823c3685e0d20894e0b4506805f4a0eda1b4944f301cbec9c68774f5f5c15a2a3768d8140a855687b4c0969e34ebe91dd65ff7af654c2e853b04fa0bf96b5b088ed255ca63edd8a15b127bf13b61ff4789667fb4bec9ab587738e99f3d4bf2d0bbf6fc3337b43434f8a89e78dd82b52a872de6270f2797ea80eaafc0ff80c5162c7013af896fe160605301b685ea2952ecb70cddad9bae45d4a6a8eea2216d05c15cf799cf2cfae427ae7e8bc2f84c9e96009107ea41dd1f429ba3b49244fa58edfa5f1f0eab2ddcefac570ae34fa13d697b829adab96811537aea7c3fe0d7535ebc2d133cb5d5427e5a274fef74e9fbe1df0633f47b2c8ba5293e806fa4e77bb1aa2381e514e632d22b4d899d493496e60f41894770600239502e521bcb32328d96d189aca7d1dfb90d5280689366cdf2f2194c0f8c259d7492cac30826a0063a5b30ea0e846b16f0116ab0a6668eaafa106dc75bb366495ef263146e4dafae6e24776e8d44c287cdada901f8dc20707636374b0ac1f15f018fdf1ed553fec8cbaa8bf89a0ae1f0d7d5d546a3d17901c72ccbaf69bb40c76a7f38bc9c8f5269441a0e572f0e69fe4d84dbdb431fe1096abe5d14866594a642190b3336ec4d045bec3cfb66701c379f6d9c1455e705a3c1f338bd95e272be12bd7e4ddd44f5c7690fa82a3a670d030e6a0b85590ccd9c392fc94f3325aaef627e721c05bcda2eaa2bf26b616d7968faf4aa869e7645f5486dac87dff60cdde9a7fae26d4c6a68004985991df17aebf6ed9bd65cffd75fe5330cc2c5e90f06d515f6ec430b6cc080a4a5261c5840f91f5baf7de545244355db333faadfeab06f894d3ff036f684f376a786ab97f036cedb00cf9bd2d08f607bdb3b78c8f9a6a29d527c383c23cacb168c46cf43fba38116a3f062fe709c63e5fafdfe93c70a97c0d3d74f4d265ef4ce4ed028cbe0b1c2a94462158d31f725fd371341bef6543dbe177c48c19b82c1bb6e71b9e49bbd86d1e876596b39c1f8e463e43799d2cec374cb678f0e69264243e12347b42fd1285591d9ada6d7dbc964efe507b381043a1bf3a8d45ddfdefe6a8ad2d2c63bc7416e5e57722ee4b5c6b24ccb5a635ab2eb568bb98214ce242bd6dadada96f77adf01236d1a288de2f37dc634a5f325d37c8feab1ec1179b6b3f540ced4cf352db694cae2e9eebe42515c1725db57ee332c79068d868d7cee6e3b0fe6da48ef5dd9cc9bdf69bcafa124ee9d3b0dcaeb7067fa8f898ec4d3e4afa427d1d6f61a664b525555d5790a33df26fe72faf1a98513c9e48d09b40559563e47e17cb4cf61ec3033bfa8989fce786699f35b635d6f50583296dc9cf0f9d2f184fa18b5036a13cbde96ba9cf0c57eaa770ab30e1dca80b8033b9b21484cb9e19a6bae73fff277fb66badcdee70bedcb8a71fa1389d403cca5e44d4bba0115ba66653c635fa62daed79fce92309b2a3ce850ac6cb77403cdd241f30c9fdb7ab327eac067da93fb6c3f9337ba14cb639ab90f685eb3b09fd5d3067a600b60767bb7627bf75add1480c9e2eb3cde6d7993345332cdceeb517ebbbde62def4199b124d110aff56446c21f8e7724ae2c4b77e220cb8c91a411b0538c03688bbdb38213eda7990ad150981d052c9a053847759c3ee72896c2f84895661f21cd67cf4402c1e832ad071fc5cf0887a33c3db97c64aa464f9a8719d57ee728d9094779f1d138cfab19b3290d33243e132b1eb1d23abe3d530a8657f35910a5f587ab9683a6debd130aa3f2f1fc68f63673dab493680667c363941b0e063fcd47e914c671939fc2c9add49f1a8caca03214d78d734f8997cd596ebea7548a9f1c9e5c4c6f3aabc2fee53c0ce9d6d784ddf6cc85da045a9abd6fc5db1dc1717f61b653d8d32cd4af1f4b65349b2fcc5ad7adbce0f6191ffdf2939b377fb3aab80c3d7b4aab0b6dab306ba1b4ce7a8d047d2b385dd46ef9accbafaa5bf8eccec9079465cbf46a7fa39fda54cf1e50a10df66f03e8beb04756580520fc84231a0adcd4e32fccf8b1fac0bf0dca9bcfbc06e20fa7732cdc40c0f73dd047263d7adbfd58e015382ab71f28aebbb2e9d0f8b25d04cb1f44a41fcb0af47191f040dc6af2637d6d4b281468a178fa48ed302cf390db82e51f2eccf04e7b3dbb289cd2d3320ff9292ca8dafb360c9d526775384c6bf31bb880a28e0a9d0e0454a1b3b2e9c0a635a5e538ebeab45a0ae7f45687557ba9853a580d38b1e4441dadbd715ce8ccd44e9e76060410e8de4370440ba5b5974f001fb669f16fea592aeac492e0792a606819a614ee20842ed1150eaaab899e4afc15eaabb0c4cae9d7b0e449e5720e040a7036dff6d4ccad413350f7503dcd42e75acc4f8e87dcc2e0a5d06ea8de69a042b8696990ea9a060e9c8fd1606099d34f8285605157b41fb889da17e1a47485306d93aa06ad6f3dfcd8cf2ebee0f41b6c58c051fbc40613da6461c997ea97e270c47c21dc7ef5ca692d0cbc88ce00da342d5dfa77f1e5e1deef01cb7a412c09529b2ab453bb3d838680c561383ece43a2b38f5768471af6d30a6dd45e22ef1bf4114f021b4af187e31c2bd7e7f37d8268c68f04d3b4b1c22bf054661f50aade2a46a3036d5aa31153e78b016ee1a1307a0f6083f9b674e6b4353d4b403c9cc37117e1d4b1f42e13cd9e3ddbbb6fdfbe1ce1e030c5aebd096fc457c6129955c571c5ef841f1da57befdebdf6d2098f2fceb7d4bb331de219de3d4e3c94c609c3710bd75ea2ea57afc53c71f29b783b587d0f96b6388ede77ecd8f15e9399b3e57cbe75ff5bb9673ef5a9cb7bef5415c353dec5f55a0c33dcf7919683e31d2add50f11ccf685de0af0e04fc87e0c254bcf55a3e6ffc1f1cfdffd368f18974938f0372a514893a127a9cf4f27748ab9ed35385581eee84253fc27b0512bd53a73f102cc5f307300ddc3f984bf89d8284c316e75beadd990ef196f39df0509ae2308e7faabbc5fc2ce687331efe7e6da818b6f8dd99b6388ede172d5af4873fbff6e7874cd96dce3c3578f72f76fea25f5b74a6a1bcc7aa0e099713f770fd43a51b2a7eb8f90c0407fc47318c78a810cfe6605ff559cce66e18085e844f3d0e54cc4c69a0aa094622cb25c3b85061d6ef3bb1c93c10dc68c3e9a8ae645a737c3eb9652c34088c968ef14a87d3504dc02d369ec780c1ef7ffffb4f612e269f3673e6acfbefffd1d6314039295160965487758f1fc2ed3dda8f61d7761c66b90d1a358452db4959ebc32f54c50ba5e117554096e2008d52b1a0f5f15271226c741ca86f689cd9faf6a1fda34b3d5552b13351d22a676931f77b04ef374230bded0c17fea9c5818a124a18591db31f40975325d3b87f753ae35a53b43c379caaa40b85be5cf69c8e44dabeb84a798ca56eb5e1d02060261707606329049316ffd734cc2f5d78e185bb2757e98ebf349ae6bf06e7467ecc316149efcfa6697d3a9bcdeee261c29dba1ca8983d25865bf338b16392d0a0eae27aead2c9e48f465b7d7488c1d5ddb5ce9465ff78e9561b2d6d225de57260e9d2a50943373e020bb4bd77d72ab734e341b9dc7b680802e9bf3299ec3942208d079f2b1367d968091f8a7d748111f2c885465cd8e0cd75bd042fc9285b48ad19c52c89e5932fd405d373f6b65a6dc87f33a72110baeb5ecd9bfb257f17aee0c04839d0a574b93549fb26d22d1b69dac90c8fe5e273f1c5cea732e24bbe3d9dceac99cce515651b3907ca66a644bacd4867dcecd9cc4b3398aaaac079541cdcadd842faeae84003664a47d7e268b4534fddacaa594192525c4718e170b281f4dee19e097488e1b63c1e2cf7ad273d62140e8d0c917752ea7f555585ce1b48b75a29bd7b4efcc22f38508a03cb162d3b6a18c6eda5e2a6721806921714ca6f7d097b4742204de5c63040d9cb4628194af05a5332cf24f528723ef98b5cceb2ad795ab2fceabbcfcdfe43eaddeffebf28837ddcd6efaefb03c659b173cf4dffc3be8e7d499a2aa9aefcbfa7526906dd3b9771459954e6b6b65792964bf9912c9987f141d099f0c38dbeec655cad90df2dff636767f277501fb4c392cc6994863f0cf79824ccc8a03a66553ab57a51976e6d25c1c6e3852b38301007b66fdf3e4756e4cf0e143f55c365595a8819d25753a9ccd7a72a0f44b907e740d92cdf916e38550b34d56396e491e56fe54cebdf4e899c125524ddd647670b0315fa33f19040c18df9be7084bdd3a3e30c77208e59c7cf4c9bf63515f67bd6b2b577b93463d62b6d967dc111b3b098cbca1f2461150845d250c5e638a25aac778fa998a4dd4cb03611e29fe0c0201c4033510dcbb87b10902919059d90bfcb64d2ff3e5e85a77e02da30662b86e1f57af3efb4b62669695e3c15c481b29929d93c63cac6643ebebf339178c052dc371ed5db3ba2b2e7ab14c785c11a7bb2639b1bb093f070ee52a0e262793bb2e71f6e2c769bccf5e03af54ea3cae5fe07671c87c5b9be3457fa095cb63257afe5892367291e4fde0be5a0ebc875a6157ec181521c809687e5e81b9b636d31a1a9a08841b02c3c6e022904e5be58e2eff0e6f32159963bd269e552a84f2a69dea388ac415f69c5a43e1a6d1a14681891fc70d63040a7344879092597f73e4596eea21ac9dacb7596f4462c66372ab21f44e155217599ad71596211b22384fda58b289cdb87c1d18797e2ddec5f28ccf9b834edf3a4d59be38b62460681138975cbeb6a4faf0d32c3b8c130d9c7c92f9be6c76359f9f1dada373392acdc8a3d29e862d3a09f4e6d71e214fef2e100d91022bb46a43a0a47faa3e43f11d46ddbb6ad1a5a18ff1a9a1ebe79e59557e6864b039936270bb0f68ac0701309b85e0e907d3533d7f55b2ce147db62b167dbdbdb0f25129d0fb83dca711f34091c39f22566e56a7a331bada770384bacb40cc1bf8abaa7344459c62d9a7714ced9d8b86526108f8a03d4a993e9740c3c248f47b9269733312237c3d8bb98392a84234cf4f0ce87b51aabe6765dd7bf8ba3e0472fb9e4928e91a088446a17e87a66f760f7eda8e3c514207d08275147827b2ac0aae1708b47ca499df16c4ba9f24281f2060c785b0dc3fcbc5f912e6a57237f52e3f1ff86d98e3f1896793146e791bafa4cddbe7d2d79555bf75399c92f48a67e7e327ddb1501f5ce3f2b8cfd1e614fe8cc6ab20cf35aca03f8eed34db63cea332f3d38efbd87d5679ffdb147369fee88a7efa53e038a79bf870ef6bd688767498ae76249cf3f21cbecae06af7fed2b6d6d852d044e9729cd912cf32ad8d9d99848a66f244d327df958f7c683d17b40ef439801be6a9afa47a6fbd5f984a3704fd3fc7b0cb0cf8afaace99da6af4ad673d7c274ca429f4bfacad1f8eaedcef22452996574d80be53d0c3c37ad4e674f23239ac5b8717bb91eb673ee6396943025ebb2c1da65297e1f57183a5a5a1a133fc1838a6f034ef316d4a6b194636b8f1fcff64de6d19f7cf2c9854fee78f213f8fd0d3e467ba0379a3c87a2974c9b34c36cca68704ff634dcf865a97252bbe0a642b8c146aa2732d5c10d2022fd26f2171bdd247ca4f5bd36eaa7d3c0b45f05e3a1dcb8a73a8fe2c8e0a40de7304449f47013246460b2aa6a5608fbe0a33422aace231324dcc48b0a438f647aa4d888e83498bd21edf4444bc1cc0ab4bf93f5d2418d884a7229dc767960fa85ac109011d3e369d7846b24bff25abe43c9c52338305a0e604f1087512cfbb00a9913a7fdc0bb6a6a6691613b5a7ea565d8b538ad42a3e61e93f49db5117501e5576cd29c46ba6452bc076e0fbdab5842b6df818f4cdb9f7aeaa927dd77dfe63f7ef32b5fbce3da9b6f552f6cbef03f6136e2ca10d2c124ca9e48485b4db80ba6ce5532a7b21fd71bec300aa76720d3e685347de6d1699644c73e9f7b4efd3ad14ce9b86973e769531be914fcc764f921c3944aaacb8279fad59a876d25b6d07d4718978cc1eab01f559af2c9d20314ce5cbe6fa2fd68c54637294e92e5568fcb3c828ed5721af7ece848bd4c71360cfef13d697a2f3630d98153c2143e1a23a29d30e489ba6f7a331eb70f71a5e3f2032f8000004000494441547fb71d6227526c44349193fdc8b99f41549467ef6046441f686af294c44dc4e2097acc4d1d1d1d2f53d90b21e3ff5f08a5f1e7b1c861c238604a8629d7db96657399abd3e9ac4c166eb194311f47919ff278bcf3ef0c85fed6c3f4dfe3d04a4b3a1c69ccead26e1238b1782cbd3a9dbe027b12332526df1fd082dff3bb8d9f109c29bb9e8430596399ddbfaaf7a4ee4aa7d2cdb3e6bd377d5a20f9ede4a967fdf2d73b5fbc28fdf6eb8f93e0b0f4ee6f90d5dc542a7536cccfde49c28b797c9bc082a66030f41e1c13ff0d678716a959a2c0922c6097a5172eace5e1448fcfc336110e83c92fbdfc82af39f5ce3b645539169595afb6c5d2cfcab2d9954ca62eb06041399d6753fe945fe69c733642d89cc5f7967b7989bd464976fd2c9993bec0c3203e22cfbd2d65d1cfda079a289cee2c6240930a877f1846fdcea4eb2530417dd9ecfa606fbd109ce293d218f747c8cf9f9c2117ae9258c6657d828949d561ff951c0633171a53947e4c860154e161a671e75f9c95fe5f673e241048226046369ba08846208380920f27bad87d85949254ea605671794e3de9a4934ef6a556d9d76764d70f6247dbfea6346e8e75e25d2194269ee71595636599ae9625976cb6164e4aa65b7abe659bdfbd233e435f553c6a3ea3b656a543306bec939d924426cdb1bebfbc2bc76ec3cce826dc9b38ec933d0f30088083d94002c6fdccf9575cbff1139ff9e4a6977ffab5db68060633e51f3433992b1599f59ed0c4ddb7bbb2baf517c78cae7b5ac040a6cd89ee62f3e81486ce23f6a9781c2742d1adc22c3b664a9b642b7f19ccb63fd78372ca3ad68e1dbadf7f72a85b97370435b5932ecb63b6ba25f4fc33ff943df7dc7fc89bec169ab9e292fca6a087cd87e1486cff985fcee8ec0e9b69a6313d6fb06b194b9c4d17f071e864898b590feea523e596ebb958d6f56a4d445b62a5d3b7411848e4a774cce5ff5926c77e8b3cf7c830654f87a5480180e90ebebb5b670fd10c9df0390f67d1a0835714732979c36257d12cda9ed107e569349b2acec7728766120d51e8fad48da3bf0885b38dd973dffd6fa6e59acfd38625348da28359a69c3cc3599efd8a92441b7eb30a271541efc29a93d20f96c2cd0f822570108ccac3e99d10979abaf8091e946a031e8f673e84d27da5e2ca31ac784f89d308a5899d644a9cde691f819bffa677b2e2cad7dff99a7d215cdde334a54e61dc42f15dab2fff943afdfcd620ac1a5378c132ae9fd6efb1dfd0674997d6ea29df82d9f2be704a43bf814c9b0f641e1db476b6508fe830cbeec3fe02df17e178a7ba8b8e933597d87b838145ef707883f464507358b0848ff21b082fe11a288ec2c93ab2b33d0e064b71a5e82ace83e871d244f1ce7414e77ce779960ae37113e98ad377a821f11ccb01d8599a899342bf45fbfd4125a883a1915d2e9fd841a7efc2e1e819fc845a4ff87e9c9e7a705a5dfaba7dd39b8dc0ee67f26e99ddaa5bd2bb35b7f4b577b037406aac2c3dff1006b10fcab2f55a428bdc19c0921e24c08b1263f12a57f587daf5f6d77d8a7bf9e2857ff12f6da1d3beb8fb895f5eef95a517f39013322e79c771ea8ad462b94003968c9ea230582c5e47a79da0c9fe169fc22e6a8fa59ee4dca663ec448bdd83205f7cf85781aeeb2cb9fa973aeee821ef474c899d2c33339e48662e80d260cc8cccabaa959a2ad042f1a04dfe9365195785c359f5d0214b9ccae3ccad109754aa79f4d81df164f6ea0a2179dcc9144269dc595c7919f87cbed92e97bc1d1df47449322e49a5ba9ea8bc520c4e31dd672a65051665ee675abdf8fdf2cb2f0f7c76e517befbc18b175d4b39e03e92b273e74e1302a5d7aa71a9b0c1a8411ef41dda43eec1e044dce4e3c06437223a9a1a134269345c9bc469b05cf797e8237f8e55ef3a14b3135a9c69d92b3b898b3ce2a26ddfb9fdef2f5c74e1b785201931eb4402c1812139801500f1080e60910e0f3464ac8230fa6d8f40025bac1f098154b275285bb76e25cba9e2111c101c18630e8899d21833b412d16176f43e08a275904b7feda0bf53d70d9c4662f6692f47f894f7ce9b37af069bc28d3ffff9cf5f9cf2cc186306a0bded877ebcb7c618ad4057411c1042a9822a6b3c48a5030d2e17fb3ee64a8b8bf043bbb2f5bf4561e2b58703d34eaa3bd9320dbdbdbd032651706d533c63c2016811df00a144f7bac43345392084d214adf8e262e328f3521c19db8091eac93cce34ad0fa383f8397f17eeb11cc02187870f4807ae59d1bca2ebd858112238203830520e08a134528e4d627808a46820e0ff3edc0f5331b19ff4ff70d0e17d93b8c8c75d3498a9f8609ee5dff4489e3380ec67cdcdcd5004201ec101c181d1724008a5d1726e12a75355b5057b4c6ba888f9bc7e467777f79f2671718fbb68982d29b09abc92592c070de10f5d78e185478f1ba94020383045392084d214adf8a18a4d27f1b0cfb40eb76756e2f2ec3d43c18b7849822da539924b7a976cc91edc55da2c782238203830720e8823e123e7d99448013b44eb2190fe15855d38250a3c0685c40ce9b58eb68e47a1dee1d231402750080e4c490e8899d294acf6e1151a7b4b0cc7c53f8b99d2778797424011079e78e289696e8ffb0ed330ef80a07a5d704570407060f81c283ba1c4a0b625fae28b7f414570b95c07da7a2c340ebf48025270e0c473e0d7bffe7514ea9aa242289df8ba1014541607ca6af98e4c1a07773ff373974befc6c9af64b6ab6b4334ec6f395e9632e839ab8f469b8e178f5655358f660f43e1192edc5078447ce5724051141f0655ff51b92510940b0e9c180e948d50d242d1152e33b728914a2f6b6b4bbcd6d9d979209d4a7d9c5b863c1ef6048e1cf912b37235c783c34e9beb7a6958face860b77dc040904e5ca814b2eb9a4359fcf7fa45ce91374090e942b0760bfac3c1e183cbb3fe896663aa9e9110007586363408dc71f9265f955d3d43f32ddafce7f5b92eacd6ce6711956254d9805809ee5a79250efcfd85a59d5d6fd5466f20b92a99f9f4cdf764540d5af4d33360706b29ed099d5840bf8b686674596eed34db63cea332f3d38efbd87d5679ffd312c7f3ddd011304641e1bf6d41ec26d9d336566bd69ba3c5fc16934898c873578fd6b5fe959562413d90acb9f6b98d6a2a8d7bcba53f760e9b100e77305fe23ab67bec52c29614ad6651f4c5faa3ca63d762faca0b61a86f921dc017ab7bfbabac1d5ddb509653ddfab581f3b1acb6c26530730a7dc004b9a8db0e676bea2b82fd2757d3d68392beab3a6bfd59e39e4e493f0971f07707fe90cc5ad7c1b94d9c6e0ca8f424191e0409972009d615918f923636bdc105b314d642c8d1b605361d44c53fd9d048370abb1c7d01aa5af8bf89ac8d05a50f3eda278588f6c2237a0691b6aa3fef35005ac60880db07575b5d1a83a8fe26066d836d60623712ddc601ae16be931d0150caa2b6a6ae60655e4db5c643c8c68985b230509f75c58812b86230373e1a0ba3a1a8dce833d1c9b0e9b76189ba3bc5484d37b383c230afcf05a5281c6823f108c2ee386e3c83f128360844bfc4e0c0f1e7ffc71f5d1471f0d09fe9f18fe0bbe572edfcb66f90ec6640e6474c9a910d416e3b487834d9ca637e371d8a497a474fcefb60336624722cd67da93fb0a80f24697627992ed2bf719963c834c541bf9dcdd769c2cb77a5ce6113454eb18d3d488ebc1850e9ca5c94fb3ad62f3d8ededafa6288e4c1593cb9f3e13d901f3a8d45d5f0a8e9be296cc6213dbbe07dc96374966904db3f37a94d32e23d1e876596b290fd3e57dd9e5927afd3c5fe1962f07304bba1c567bffb3dbdf5d36df57f9724b502638d09f0365f3d128fec02564d3be3eea6f729208b52d2e082109b399d9141e0eff30cc3b6f7a5f83352d7221511a9825a7293e9d4acf4ca5d20cd2e3b2d9f5c15a3bbee79fe293d2184370a16687e60c799aedb18ccb0a82a9053859e4944824da97b605d91efb04bcfaab9497e409cecf66f38fc3547549b89e946fb815eb27f178f2de4422b1ae15fb66ddf9c4fe55a9f4a2e449277d8763672e25eff4f34ab214dd0331c5a3845b861c78f2c9276758b2d58876bbec43cd1fb207196548a6204970a06c39505647c2d548ed02a66776a3577f91c9ae2761cc73a1db6dfe63d60a1f74a1f376cbaeebf296795d38945e9accd54cc79ed2ab643eba33917a004b63bb14c97c45727b7f22e5ba6f9315f7b70d23f729ec335d4dfb3eccecfe1599a3ee32e50f384d536b5575f3a45cf225ca139288045ebcae3ef3de77dac25738cd63c3d4758b8ad917665007d2e9eca934eba25a4558a75f715fd96d1857fa7cec2e3aa4c1e11425b438af275fef35c59d6970f537b1ad7ce8a861dc83fda3a528ef0f686f4cf378e727f379a8ac316e08babd339386b19299c6a7b5a03c27256992954c1c09bacd99ad9dd90365dbaaa620610f3ffcb0abbab6fa1b96613dded5d5f5eca5975eda3905d9208a2c3870dc1c282ba1c44b83053bb9b959928b97ca063261cdd37197d2c3de8dbb94b96b0ee3746985900b196738f90917e2069d9e105dfbf6edcb0d8463289c83e55f9c56bc971707a8ee303b6ac6211c9cbd912e459bbbfb861b6ee89de99617b5821ac181f2e740590aa5f2679ba050704092366edce8c680e42ac8a579d96cf69f962e5dda2df822382038707c1ce0db15c78745a4161c98821c38edb4d3ce3399f9f6ae5dbb6e1302690a360051e471e18098298d0b5b05d2c9cc81471e7924807dc31fe288cd13d006fec3c95c565136c18189e64045cd94482f1eee1e2d38bdb63648975be15f426bfa3535358da35523540b5c8473a2192ff2ab5c0e407d909a96d22b8540aadc3a1494972f072a4a28855f783d98d7f3bbe37aaa3a9dcebd4bd7f35b5b7016a12b97fb42d6e85e391a36e7f3d25c5defde3d9ab422cdd4e4802fe0fb9edff0574dcdd28b520b0e8c2f072a4a28c5626f74e21cf681cfc6ba7097b6fd395c4e3ab00627e34c4ff8df707ecebedc3a527615f030719f64a48c9ba2f06bd7ae957155ec47643b698ab240145b70605c395036428996e154a8e1d1346d0fac9e5af41e0c075be83d88bb408b16b1223d7df62555fb12ac65e86edd742dd282c14da4c9211ad25610d7342cef91b6040ae3977269d90f38b7206c7f2818d8e5bcec1aaaaa3a2fa805f6d869a17f2e140aad062dfbd7e258388589477060cd9a35a6c4a45bc904bae086e080e0c0d873a06c3a5bbfa6ed0c29fad752a9d4d94c717d8c8485cfc336d1bbc1e4975e7ec1d73c58f131613a3f954c5e9d0e47d4bc69dd4f824496cdae64327581257b2f4fe799ad7228168fa557a7d357400bc34c89c9f7f7e08c8570c156d673ef4ba63267939a212873bd85b42ef8a1fc75b07c45dc14e48025dd129362da142cb928b2e0c0b873a06c8412b41acc6f8d75bd41254ec6929b2d6b8d99ed966e20addc889be1735b6f0ec60d578fae38ebd0a10c6eba1ed889cbb796293760a6b449b6f29721feb9523aed20fca09a813599d0f8403aea280fcadb62ae8d34c3eaca66defce92cc93d58de226e6a710097a45d6116fe3b9acd4fad928bd20a0e8c3f07ca4628e1bc82541df65fc98becabad9d239bfadc4422b50a42e38f86ce723c8e5c121cfdde4da99edee9849e0cdd763b77b698969e7b0833a5ab7597f7e102ecb13aed480b035407bd585fdfe0ebec6207a7d786e690f03ad9975a453aed0ca8ff693fecbbca9997f04f6d0e2c5ebcf8bff3ddf90ddb766e5b2104d3d46e0ba2f463cf81b2b9a7e48fd637917e3b59628f40e448b252f3495d6fef80d47c048bf827cbcc8cbb94f0b539c0b898b45162de476876e391a5cbbb3c55cfcb5d1d07316c7d117a81fe0405a79fa00310a4830ee91126ffc9b28cabc2e1ac9a48872f73eab43399fb4ff44efae474e594a3d9ec5b09974bf98261e86b3c1eefb25c3ef7d5fabaf4c57bf75ae2b6fed8b7bf5163a4c147c36baf79028180d1d6d6060b216af721cc92478d701409b7efdafeb70c8a7bf7beba77fd48550bd1550418019c0b9b5dcfd1c06814d98b248203939203652394387731f21c52d71c872d7647927628581a01437f9e67b8faf38a6911efe3cb01ead433d90c14e95a92c7a35c93cb99ff0e0deae1542a33737c73eec34e4a5871476e89699a6f31859d7b61f3853f1dae808940f9b00ee5c3abd319170da0fab0f6f982f5f5b521594e4fb4b0eda340f80407269e03652794269e0522c74ae5801a0edfe4b6f26a2c91594765a03dc0c13af9f12ae7033b1ff035494df7e9927e8f99335fbff8e28b8f0c27afa1e80da03cef5d9871172b261e0e6e01233850a91c10c75a2bb5e604ddd857642aeea7a9c48a10f62069d9f7ae9a9a59eb83da7ddc043d09a93b35edbbd8682413f49ff72bd2456db1f4b3c5e6eebdbe199775751ddc805dc9a48b194908ba55c5a6ee63ee704e4a2561e29c2515a6ffbe33917d80ae31f4e0beec3d975efde0ad1f9e77c5e2055f78cfee570e54634deeac623323744d41d2f5cf8364b284dcfbd0f50798bdf810667ea72c5898a97df695ba289da278ee39f5ebb511f53fb3923bc20cfd9f31133b9fe3d47065c12beb6f1c8d6536f722121ec1810ae740191d74a8704e0af24f00074cc930e57aba4fc67299ab61e74a4eb4b5bd665ad27c59969ec29ee0fc3b43a1bff54080c0b0620bae0b34667569372dcd165f0dc8602fb1ae2e7d5d3299bc3167b25b4e86ea2a0b7b96f59ed45d301ad9ac3235a1a7d2ffea63d6830423b97c3b69a6e6c4fdccaf37fdfa4df5d4bb169f990948cc738acfe79feeb1bc71ce182d52b34431731fc0358765e9850b7b8d4f123dc5d71f52efbcd38e74b1a8ac7c958468a9eb0d8a2cef90dd8a7daf8ee7215cc1814ae7809829557a0d4e69fa65c925e75b3be3697bf9cec90a3adeff567bc7212c81fd4af3317b5642d705544d8b9d515bab1ec8a4627c2f27995cfd6355bdf3fe2347b42f41c0a51599dd6a7abd9d2c675e7e302b2554ccc560ea7eaea2a9ff948591452cbb4930517fb36548ab8b716fbc7159463ba96e6bf4921bdffacecabf4c3badcf9a10489ad7dc68d3b973a721a901db4bfb5098f5d0f50709ebe9f6f5070a03edb14fe1240401f55e6fa0991cae3750582c167b965cf1080e4c260e8899d264aacd2956162cdda50be6eb0729b8ecfa5932277da10fc28afc4fdbcd38a5d767eedebe97068008737d9b2e4ce31ac23a3a5c506cea9ee9e9285d1348e3fa806158f74825703ff7b694ddfde7cc3b46ecf091b015beb82f5ff2c9871359f92ef269757535e4aec1218781ae3f60f9ced6584257148ebdde2049b404598b2b0c84473c8203938503e2a0c364a9c929568e28ae10e07ac00e3a7d170e47cfe027d47ac2f7f79aa09fde6c04763f937763f6a35bd2bb35b7f4b5773a522f4335fc72e7d5009d051e61380d8795b4a7f0512492e9cce50135d0e134759fe9b26ef1cad28b7949c69f2e25ce79cfc662dc87abeb5f535b5bff20b9b5e8175aee7af82b9ffff82a5e35748c9de069af08f93c88c9d055a0eb3a4baefe65f1f58744327341006ab37003fcaa6aa5a6aabd703da2dff586ceb8fadf01c558d51ecb3ec9f310aee040a5734008a54aaf4141ffb0384026eb4b1def8770e87705a1f8bdd8d43dcc5528d07b6742a0f41ee32e85db3e2e5e5bf31f8b9a17fd4d3181c883bebbe3ba9b545b7b7a309b7df3a5893c025f5c0ef12e38301e1c107b4ae3c15581b3ec38504a2011914ee152eabd38dd8e1d3bf4e2c215c3507c381caec6c5da978b61e9fd780512e1e852e2be850bb3b3c92f1ec181c9c401219426536d8ab2940d0798873540f8ec1c2f8292adad6de3855be0151c38911c10071d4e24f745de939203dbb76f3f47b1945b73b9dceb93b280a2508203e3c8012194c691b902f5d4e3c0133b9f38dd92ad69d836fae425975cd24a27e422b8304bfb480ebf4c977de97d341c826aa3c6fa68b4693469451ac18172e740d90825d265469bc8e4d28f3ee27267de58d1174027531552978d15bea98a87e130c389eaacc9222df69b3ee9913c57a413e9df353737db7b4fe974ee5dba9edfda820377dc8f38d9c866ffc07247a78fa6aeb2f9fc67b246f7cad1a415690407ca9d03652394baf2f9a5bb715c3697ebbaa62b97bb46550326b7163b514cd4aaaae64db430b4b5a37777ad3365d93f51e59cacf9048e1cf912b372f6fd9f892c2384d105e79d77dee9c8d3076d0d775f7ef9e5499e7f3cde8e8baed6813538adc7fd7458c292e53b8acdb1f03443b9963b74df5030225e70a052395036071d92b1d866981edf007530f71233a1c2655a56cf7d09de1b278cb9b9ae97b0393da13334964fbe50174ccfd9db6a898deb1154345d2855b5753f9599fc02ac049f9f4cdf764540d5af4d3336271a0a3da133abc932cc6b09a5225bf7ea8aef37b02c7c2d54102df4b9a4afb4c7524f16eb9b7bee8f35a79ad9cc66974bfe05f4e4ad816687bb4c49fea3691af7bba05e289ecc5ced24f1139ff860e895e7f7fd5a761d3af795c3d5cf27cf38ad597d76f78f71bcee7d80ff7d01be05ede91bf62558b2a6dce797a4ace15aa969da1208ad5e1d79c5349132565aea33b359e8b7b3ce72cbe675962bb2131ad16d52a009623d74f5a512895b6f77f22391ca8899b7b3b284bf7238804e988ea89ef01f3e585955fd9d448bd4dcace0e2a235bddadf48ef6a343a2f1854d7c33ed2aeeab0ba84c27023be161ff406a87cd98559d5fee9d5d58d5021b3291a0adc64c787b4164df3ef227f4dcddc20e036117c38e85f4f6181607419d4bab4104eca07427009f05894cfdc9a9a20c1703c849f7ee160e0cbb0dbb387e089469e9fd4d040f67cf620930da07bbfa6063a67cd92bc1c07770388b7f3447c4d38b080e8a2725219e89dc30977e8f618aca99913d47c76fd62cfa6897846fcad8dfacfc3d7c7289eeab30eed245c133e076d0b20743588da59009e1619d53c87c2fc9a8676e5b3db152ad2ae1b1b1fe04e8aaaf3b8bf052a19c8cf7f67aa73ac7ffbf913673ffae8a35eb49b15e1f08c68438314e0f0e7c2dfaf5d3bdab83f185e1dd67c1b6cd870cd0255f51171ac9826c2a939be8b28cae78bd43505318083406ae1eda6143f389dc2edab33c18bf2e745ef0776a22baba7b3d803adcbeba9d3a00f9a689266cdf21ed3a19c74126440a193211874ec9dd46104f07173a153e8947c88b6e32d2e24fcc04d028cdcb93552903a0212422420482836374b0aa5e13f67e7164507451d5f638dd7eecc02e81422215f0bc1fa4177af1fc291fb391ec0de1409fa56d07b4188153a46124ab5d1a0dd917258e1f6f17f205e507ba10100b595a01ad84270541fbc6ea8e3e69d39f9090e03829b82c1e06a72099eda1a0d42080f4f8776b19f0b9f81fc9b376f766dfff5b73e776afd07324efaecb68a0106e541f9119e818412d15a17f135f1f4d4f64ad1e485702d6e4bfeeae98d849fbe014e6b297e70dce5e4fafdfe93cb891e41cbd0dfda44f3a86cf694201cf05861ac43aca285897d49ffcd14e26b4fd5436ee03262101dca5db76069e566af6134ba5dd65a8aa707dd7c8c5c9329a459d97e74cb97260f2df3d07a5c8fb2cdd5bdca36652f946d06a06c336042d9667d7bfbab29822fb65d93d7951c54d9c45a712fa403ea6924596e25387a9c7ad7b01795f2c9d20314ce5cbe6f224e233f7f2c435fad79d8567a27c5a030f11e3bb761a30fd03197953f888aa791b27886c98170f8876168ef9e49bae870a2e0b2d9f5c15eaddb8442f149697c6ef6b299d7f240a9a925d1d230e9b62377207d7394768ddda4c857da8fd36fb3ba75cfcec389a7fca74422d102a424f90f1ffeaadf95bb85f2a0ca243ca4578fc73bfd14868d257bff4babaa9b27336b73299a64b4e3bcc180aaff8325c95b254f68fe3a3560cc9ecdbc43f1a37fea13f726cbd29db0163ce3c45120722e770e948d50eaf960ed4e240b8597bac9eeacabd2e695ea50180485f34385d06922465b8aee412fd0407e964b9f831bf5b1e12adbc4489364d7318fb373e39139439e66fb2de3322e9890af2d04291c422c024532b690e3694a2bef7c3b4bf18a8be57be18467581c30e5e419214ddd42c7ad69bf676f6bb24db25ccfc5b2ae576b22da122b9dbe8d262ae48fc5dee89464e5562c935a214ddb120eab2dbe7ca0cd94d86584031fc1c9699dfd88f4e6515b8a04d555b48f53f0fbd71141684bf148b0c7cfd8d795c0291653dc1f3baae73b82416d13e16492b22babbb7787606389d2007e55285485bd1d16a1d3954e3fa28f90190da4dde532921f4924b33796a229d3fed6218c721e24dab1fcbca5aa2a741eeb8efd8b6e4a77aeee3cfc3fb2c7fbfed6d64017638965c7f0838828b307df495c96d9160ce27a85f9589048c7eb49dd53cfb1fbe8a245ac6cf6cbc7a27c530a071a090de74ef88f2fdba1435841f4f8a3d1f3688982d6d811672f87607d6dcbff67ef5de0e4a8aafcf17af4bbaafa31d393cc644298601e2810841016359a07011625e84f37f1878f1fc147f819f0ef6a1258dcd599f8f349125d56713771d5209a08d9552448843c26015617031a21ae90201302c990cc4cfadd3ddd5d8ffff7544f4dba7b7a26f34cfa71ebf399a9aa5bf79e7beef756d7b9e7de73cff17a3d6df41c73ff3be839ade3d0b98dbe40e6541f4d6b605d27b7d66496a7693dca436934d5830ee669caaf1eeb48b4ce64cde3d3541aa6443ae8b98589c597b5962505265f66d2923c07cd7a700ece0e823529e495dd5ba99ca4f857101d6bca90d2ac75329f22adc53ad6565aabf0635a89ea045f5bf3f35a75b3f3d0ef25fa4940c8fa016b7783e146fd9adfb783e51b2abdadad4d78e289270aa6a0880fabcc48e90f373fe53b5b5e3c1f111e16cfe7f2ec72b93e46bf1ffcfd09fc4e1aafbaad69765a6b838ba725f4bbb2d697c7ab0e4667e8dfe378e1637e7cf17294fd61996aa3e1f8c2e70e4aa37bc49de9b83b917c4b6b9f934c2bddca679d915ee07cb3d8d9a695ef6ce7c1e89fad1c3d2fe5bc7338e5589ef241a07d5ffb4bdd5ddd73962d5b96291fae2a8313fc76ea3d1ef7719c9d98db389ccd6aff2b9d4effcf78709fff1d30b75a64231d70584bc29c1d158440d94cdf9d0d33123e74e4e7b3eef1d6f599dce69e5ae9f979e91ae9fdf3fb744f8e3407cb4bcf073b4653c6a255ca79a7f58c9d2b030135ab2ec606ef8277a932383fff5ce2b7d303a5efa11c27fc2c9b4d7c0eb30c2bc78bb37d0bc9b80435a8f107ec82711bdc68c036493e7841d0d34ca143648403a9f349abac749a6ac5cc4587224b215a9bcbe783c29bd094284536ce4d9f7a3a685a90a661718fd9187907b6b174f4d1a27c1be8fe626cfe273a34054c7553d980d7bd82f641c2c866838c295b9a56a63c64d29fa3efe9588741b304da583f6fa33c26cf39fe0b68135d9af6a5a968a24de58856b51c15a3290d0638bd389ca65d6bc3be905034be65b07c2cbd3402b0866ac113b6f05c1a9e92a92b56ac58d2dc3ce56fbef6b5af7fad640696382402d0921ae1afe547384b67321a7bb13e7b7722911875345d089783a220fe33ed2bf3388c779f3a9d7c86e8630a7e53c095ddf84657ef616cfd687370192e1449b5c102728393cfc6cd6b082ba7a01ea66b8b2712621236f42b8a30a9136b96d802b2c3216acf87afbce6ab940ec3a539494ef0a919edc1069bfdcad7c2e11085bc475caeeda2ade1224ded7a35164f06888effe0c17767b3e9bda4b9997beca47bb544e27d36497a4ca534f26273677777e25b305c99e64e7a5feee6e2b00a968fa5922f14d3269ae0256417b8af0b36c76f42a1d0a1b10c94adf696cbb9e2170369d32dc0a43f768c02014110aec724e8474751b4668b3cf8e00366dba74e9dfa6067e7f1a3350bc4981acea7513c4f28f18b71df0aade97608a613a3218d69141f2c1fb740d85c9acca80f82c674934eb1c52c9fab17d2a1d062564f14c6bedab750e7a4678f9240223a862bf07fb574f797b9be50f627438943948ef5ab9663918869019c887c76af247dcbdf6b4f3660d3ca7d663978f0c0746287086198b322e62528377718c6c31a04e666d27630db13fee90cae913f4956c11cac82390e2ae5c5481f409b68d2a138f4adaf779f3e9ebbab9eff152f94aaa72bce4f4bf001d88c9ae98f1d234400c1febea371da13af73afef5bb17045ef088bd76c766c6aff3826d87e62018051fe5f75ddf8642a95da6fa58df6bc0e5f7b6c1e5b83f5a5d57eaf6743389a5c43b4fa2c660f736431cbf18f511aea1dda6296f24028505ef34887d77bece237a228084142e5cde504d4c5619f1bc5b63a4ca6f99aca8573a6fc8956a4b55159b22256fbb625d03d1da431cd0ec6d7bcd465dc4e5a5bf749e9168f53fd6d575782a76d02a954e4370666238b69e74a57efffaa9a8bacd46e529a9a1a46eb31ba52db5c0d7c1f3e7cf82ed823855bb8960f215c058df4d9312c0404535050567cd7ff23994c5d39568144d3f8f898b57c5b76ff94e8a67c7e09db4a569beb47a2fb3f9319fe69ac1b1d4478f9699ace7fb4e1e20645d0f52f2655feeb949fd3b5a9d866726be1ba521b840ecfd17a13ade17844e3476f62af62ceb41f0bd95e792d15852fc2e9b41501eead56a85acf235e5faab9d8945f10ba2e29de96c0619f22f64a1eababab9b0fbee60527376d4ba6b46783e4553e9bb8d3edb6df508a366d5d40adfe685a585fc82f7153f947c5af29557e1740fd87fafe37f392f6e28dbbd5d0b65a68c3934f3e39c9eeb07fbd97eb6de3525cfac61b6f34a77b6aa1ed236d23a6e7e6623dc95c37829ef11568eaa44d4cf881a93ad352772415e5d67ebef557acf94c1f4eb95296b5542f95b5b4aa52f7d8d6e0c837802a65155c8af67078aac43c6523946831d226709d9acecde20cfd16b861d81c8d256ecf39a83ce35853774abf82d3cc8dd0d263bca12bb144f266ea7058b1ace074fdefd1fd97075cc6d490eeaacb77c0d91359bbb7d8612559be60747552d7d5556b13a9b7b44d99e292229187b0cef232d23e34d52dcdc1e47693d19bfa016f70519d336e5a9b488aad7d567c343ae36164a11bc6df80f79f85a3f1f57031b3097c4dc1c64c7a156fa2c5501a5d592f0769455c3c86b9663e66e3d5dfa992ffd77a2c7a4a84f34f9b4d7824933556a1fcdb3044339d74c675c77b054e9f0407a1b762c1f5ea372fbe2a54ecf43367eca1de019a2f81b5954e9bf0e18cc65d9bbb363edc134eb23537ab0326e8bc7dfb76119e0abc586c7f60e18285374f5035154f16187d019b6737e2b7710f3ef6df2ce7069100c17e439d0c11ca99cfaae30ddf7392e2e7fd2fb7f92de7cbabcf8f9741bec1ac4d71e4583300c7ac9e3c9f77e44813beeed6ba7dbee5967f30f2733669d22438c72b74c0093af0ca7ac68127d561e581db18a50d1b0fc9d7d9349f2f407848befa2596ef3472d2499b5ea97ebc00a6202787b070a2d96161479bf54cc7aed85cdb5faecfd1a69587ce2e59d914543c4be99a1c89123d940df5d70b479d54be1efef97cbefac5d6865cf281464e3b4b3afd24e7b0a89ffc05d273ba5e081f7e9ce9cf2fe7ff2f9f07763d71effbeeddbbdfbda77dcf064ce7cd65380fc419bfb96d104c5fad046c647c57b076041372797925f05b2d3c4251288f837ccc89f067d78ae1bde91a4810ef327851c9f73d97753adf04c3a6950b716d73b93eadebdc7ba0215d2d398cad94960a751e8d66283651a1bfbc58f79d4734439846962e5a36f35db30e5e342d5f7a53c9635b5a5a1c180e1558ba405be9dfff44962ea74f9f7e111d8f644c412793cbe047cf0cb341f786206e4ca9c65b35031a9098b3ba495e71e941f0d1cf2fe5b3c9d23fa574ee51e243d733ef257a2018fe442412a1e7b4f94584a9677777f7f18caeced50dfe46b2d871a4d3efc79e8eeb220d8e64242aeda4bd0d347c5b7a82ebe5c84a08317b9e3b6e24239163a8cf386a4e059afefc0aeba73ad83171085c7bedb54fbf72f8957b344dcb605a0f3654ecc84700bfd7ffc294dd3fe5a795eb3559f6c662f18ff484636ca6e11c7652d90825b3cd3a3fcb6a3baf6bf7bef5f2c45ff27dcfc52fbe3804cb19ffbabecd625a26b3040e1e9f82927332dacbffc02a5bca5f5eb1c3ca8b264f9e7c812bbe861c7a6a82f8c3704fd7ff2669d367e902d3cd1ff9f0d12f1028167d3a8b0ec76e5537eeed4fd3b50fb96dfc5f78d1d6efc72e78a8d35dacf7f36a22407526e0df4fd38cfba93cf2f82d3a98f9eeb70882bfbcd720605eb31c89861103e8ec4e3f4da1d947afadb87aab1a769e400456ae5c991545f11d76bb7df504565391a493c9e4f72a9271c6f43943a06cd6943cc10b9a85ded36fa0e54731957b4c96f9bfa3fd01b4ee03cb98d52e1b7f1d056693bd8115bc9ef90e2f889fc726b90fe103bf34b7c9ed0016978d3095ad136d1fe8d1f54fa1dcbd02cc3f79d178de109dbbb94cfa6ec166bf0f83d84fc4bd814f4991f07187c3b93493cd7cada93171fd1bdd8d4d6236da6117c4dbb2867e9bcf9bb831996c9c94419a8de7b74d6a4cdc76e48841fb2bcc8336d38964342a884f091cec40a3c9f5942670c6fcabe6251b9e7ba9316060bd48b1ebd33b43a9a35488d6ce9c02f7a72c4c3da94c2492f8be071bf7607d738b24c98d18453e017dc9a7d88d455406f40e82de85b01f7dc189e07429dde1e6f5f4a3086eb759c3fa1176addfa5098ed70c35fb90c321be5b556d011dcf1d0277f3e9686207d6380cd4675e9b4cb37fe70401988b5308944b162d5af4a7735221ab8421502508948d50225f554e2d72a7b5af60287c2178c8f1a43ddf6285f2533a3e04fdee5f706f6a0ab919b2dcf3fc72f4bcd8f285e88cc4d2051f1d1b3e4098723c532fd118ea186919b039a05d569b86aa873d3b7f086cdebcd93e73f6cc97162d58f496f3c705ab992150790894d5e6597c68cdb0136783b14f00f46b2c56fe62c150fce12e2ed7f77c009d626167d12f756ec76eed52e943a58db4ccd9da35545decd9f941004631bca119cbce4fedac568640e52250366b4a363dbe42e744aea1c1dbbfae54b9b032ce6b1d81ba86ba0f627ef69db58e036b3f4360a408948da6148bc4da46ca3ccbcf1028470476eedcd9e0743b6535a332abad72ec20c653592350366b4a658d12638e21304c04b03fe94a5aaa5455f599ebaebb0e7bafd9c11060088c04012694468216cbcb1018048175ebd609ef5cf0ce2bed9c6906fef1850b178e78ad7110d22c992150530830a15453ddcd1a3b1108c08bc35b05bb7029aff3e9dedededfddc87cdf4d04cc8c668d20c084528d74346be6f823407b9132994c93dd69df004bbb2f2e5ebcf8afe35f0ba3c810a82d04cac6faaeb66067adad06040cdef812da618391cea79840aa861e656d280704cac6faae1cc0603c3004868b8069d020f2f1ebafbfbe63b865583e860043e0ec08b0e9bbb363c47230040a1080405a8cf0266f853183e9bbb0e021bb392f0850904c1c1a7ceb8970d5e5bce28a488cc5273b2f5d31e64ad9f4dd982164046a0d01987c5facebfa23b5d6ee726e6f2c9399dad979a237160d7f077ccefdfd014f96a2ce9e4b9ee5babacbf06e9cd509f270f39d4bdecba92e2694caa937182f658f0005f3c35a92e3e9a79fee2c7b666b88c16857d76138bd3cba3a9efc4c381cdead234479a6cf0bff398321d3fb42b16bb392750f375fc9c2d59fc88452f5f7316be1382300ffeef5e34c92911b2704f62d8473271cbc1a7f001ef46fa36bd24cbc5e7983acc8fb837e7909a55104688a12ad200db1cd3a2e087a9a297ab5a278f6d373afb76e29a5af833364d27e282fe29ab521ed20dd4b786edea3bc59d6ef075d1ee5e40d1737342844838ea1f24d0a4cba82eaf722b200c5575bce2f178bebf10483cd7d3c1af57ecf72a249911390b6555614e2dd40b0d02532a209d035f142792afa80643fef5167190fe5db076eb77b1aeb9fc2fe4164d9153bda7704192e85b89c6f3c10c1f9203eea2b28f27243c03d9ff8e166cc705a11a673d1a63d06371981a9f3225853e4e73604a0e9cb1b32cbf54573a6740fa2455bf4dc8ab2c1eff5b4214ab5313bc891f0e16723723505b606cdd042447ccec7e16cf9f2a35a23844d513dae3609d1ae895e2ea2742e9ab615a59bd23d4a602945a4b6ae11897b035d57f21fb3beabe821c5c432ef743ae7d86cb6cfa2964f4f6c4d15465de77a6441fe28b8beafc238af6a7621827cd168748bc7ebbd3499511f4463a7bbbae34da4c150f46645e125283e773835add98e28d71618281736af5ff9589693be95bbdeb74fe3244f2e8ba12fefcdf05340638e8de34fba04c7f68cc13fff468a8b4a882ddcc3a5677777bf7c0442892b36aee005e7cd67cb4751ad5fef3e7d1cb1d38aea716de70c27479a12f87e0c8b55266f148ddbd5c7bf2e3a5f74f029b32d74cd69bd0bac7655ea994ddf556acf4d30dfd090a623fcfae3a886f96f2bc21a21cf1f836fbbbd0841724e17d28bd860b725105887af77321a5da3737c0b349a0da5a250f3f8a86735bed52a8e8f7d8b758d73ee3a385ba6b4d65c9cb4d7ec36e3412b0274672874d4e3545fa608d29c4399934a651198b30d64061ec3cdd75772403d6904185d134f2c8a4d9efc2f16f5fce8d6746d7dc40d9bea4080502b5bc59e994978c576ddc431ee72b9668aa2b01753e753394ebb211eef7d72e26aab5ccaf0e8f00358e17db5a7a7a773d9b26599ca6d49e573aef8fdcb29fab2c81bdb22b1e44778988823b274c2217277640c51ca8f428d68cf6d14219ae78c9b2882b38e08ce6b13499104102235779090a288d53a9e3b6dc6874f4b81c73ca0858fff9f1049345227d67fa05bed7ed56db32f4b6bda32978bdfd8d5153d4c519e41f3682291ba08d36750c0b0a6244ba1c1f2d96cdec55935f6aa15d5fa95e414b1b01e44d0d6b4fb7943bf1191b67f8848dbab6587734e2c9bbd13c1ba562a76e7f498a6ddc9ebda2765459815e764ae38d27525f62c134a95d86b13c833f67a5c0361f44b18b636a29a5022916cc6ef2b358155562ce92dfbb6b8a664a634391c8e95692efdc31b16def04ac536a6ca19c73b6d6a3296b0a0e6521add7b2088ee4e24dfd2da173d1ac905919e2d688ad32942f52bafbc92c9a769e5cd3f0f379f55a6b81edc9b7c5acfabfdcc8452b5f7f030db472f3ee6c457637cf70d5cf6ad351aff1c8f273f3f4c12359b0d0e592fc3dadb7bf171daad69da2b4b962c89d42c1815d870d266ee4a24eb2da154814da82a969950aaaaee1c5d63a01dbd03e3c8f51046efcaa3105255ed56a4b10f6c1e28835d62ca53bcfa9aaba7c1cbc3aaafb47d65ed60f958fad008e07deb805786d787ce357e4f69da8fd3b46b6dbcf1bb5034be65fc28334aa3458009a5d1225725e5c8a04114f97fc764c6e2a22675719cf197a234767b16047c3e5f002e8884582c1e55d56cf62cd9d9e32204749ddb04a1b4b52899ddd610024c28d550670fd554ec75b8115b323661a47a81954fd78d0fe203f14beb9e9d8787c09e3d7b267322771da7713b61a9d733bc522cd75811c0bb4bdf33d3c060acb4f2cbd3465b7b3a31fbf4e9e833f9e9ec7a6210b0ac0927863aa35a31082412bd3b93c9d4e5f84dffc2621a537a7759d7ec3c7c0420884e0a86e081c2447b99d8710e1030aded248f4e8269b0eab03975bfe50f8f8791425320d04279657f7089227b4283953312a915d98cba839ee7d3182c7f71fa48ea2a2e5b8bf76cf36c2df6fa206d8640a21fe687b0ddbd0d3fed56fcbeafc106dab7a5d3e9ff19a4084b1e040160f723183d4c1be4314b1e67048ce3c793c05c1c4a534ac662fd1b4b3da74eddc3f3ea6360e3683cdcbd1b6507751da53b94ad8e4ccf6462399fc6709b3092ba864bb39af3314da99a7b77946d83ebff36ac27998bf5b02a5b344a32355decf0e1c3bc288afb6b1a8473d8783258807ba19e7530e726ff715e59823fb99c4fb9c63af932d2a4c8f71d694a3cbf4ee034f5d684c67f21007f77e44b4e96ddedc46e295f7386a6dae9593e0dba97fafce1a1beadb2ece98060e365f8a1b37cd53505dc2d43d565d2038f5eb37e4f07f9ccf33634cc820fbb8e5c9a6458bef8a8be5a39ca462835a043162d5a64a3b82843814f1d5feaf960e994976892d3422b8f752e4587a5e5108029387c68715fc5dd3c86c9c811e8ececd4b0b176fec84bb212a341207ec51534edeca7b2865dfa1ebcbfcd8fc7e34b0d9b675e3ca3bd409a942188ed06a74f328c56387c109e74daf5ef8763b10704a7733334acf7505941d7eb60a4b2c0660bd6a555ee214ab38e7c1a946617f51fc0cb439b6e1837ba05feff232d4d10f45e2a6fc0bd5022cb7f77a8badc91f09feb6db6ff03d7486b389be7d3c75389637ddece5bbc4e6e33798cd00dfe3d24dc2c1e6ae15c3642299dd6161e38f0fb6c2a15bb7230e0f3e78d49b040d05c65e58553457d6693d260dde79f1389ccdb6009b5ab8df6cbd14eefb3cc3de7973ddb75fe7cf1d9f256da7318397c193c3f5b697c9703bf0b162cf8345ed1cf95032f35c103f9aaeb3b34838fd944e33eba4d5e71e941fcec4d9f7186c127ac3c9c20743a44fd140912d570f5a7db0d678c341d5d0f7d0aa35fb35c7f195ce4d3088713cf618d69ab9dd71eee8a26cc35274317a6a0fc56c1c8de248ac6f366d91275d1f70bf45b8e4522661d89c867f7c242c3df57d7d14f77c7721bb1e17142b419701f543b47d908a568f4b4d9a9a150ecbf06839f462af03060ce1bbbfc8d17ea6aa6d5ca9b4c2485239d3198310f3c22916ebc1cc6d156ecd8cea73130e7c853ccf96223131c79c9f22f413f584ce5fd6bf9735a5e1c6edebcd90ee8f675f3dd24d4d9710e10a07795aa69c56f3cdf375cf050a7db9a5a816d5e225fa8586c8976b5df45d4597dcde5d1c0f4cb72c1d0de118ea56ee731d33369d224d950330f4153fa882a3ab75bf4f3cf565dc42f31dc1c74cea4e73edf8f7cf942101f36b33d9082537843e8179af9b4aaf57a50a1c4632aed5c363a3770805b430c6b069b57cd9f3716b5c49dd0c12ff5f9a436e49f0d4de955730e177c63ee1873bc52874ff1f4ed77309d259aa3907c1af4527969fed99cd3958c26685a0d0d17638a58de4af3d2e4d0311f039a1f26dac8bfd62b7b7614cf172bb9782b1d5437caae2d19c7c5cc231f54b08b7cd122ded6d7d6837db15a0c3fe2b180fe0a8a8d7286ff7c2ed8f54811a077b90e3175a87f475a76a4f9610e3e076e65be84a9bbba650b97c58bcb93cb19e2e56cd3d4c5e5d8fdd00850fc23ca51e7f52ee57b43ffa66ac2e7e8f7d56b8bb80c8ef737347867f19ab652d3f98fce9cc93b39437c3e9c125fa6f84a1879dd4d912be8fb015f78db36606d4a3979f26b54ae117d2564229f57757e753e0d08a046c1f4b527fc8ebe07522af9f41d5d77245186c36ffba04d4b7f829cbe3637f39ec1ea3210889078a0752d55eb79c4eb4b35d3f7001fe5968022dd4aed3178de1b49f3b535b821796dfd519c0e45f2ecf0fb1b5b282609c51c993183735acf27f20cfce1e6c663b4e1eda07a280e4973509945d7103846a3dfd5c2e5c538510281f98aecda44e5acfc9487e28e4c99c279ac7273719d8ba3e21e1027051b1daf32f379bd6d8ae4de6195b1da4c3c4cad7793ef371323131fd9b59fee3175d862e6976533060af1918b73025e1b1b1b7c41df95841fe5e98fe3c2b50908bd62b6c92dcbfbeb7dae25260d490a057d9e1c2fa87372403263a850bb2d3c281ffb1b3906d0a8f12ebb3beaebeb9bb130bdd6ef75b5118e32fa68ca9429e67b325eb83efef8e30d7bdbf7ee1e8a1ec5dda17ec508d97c0f4ae5a5b83e8d7def57a9e72c6de4efc14830b3be2923293396bc33d0df63295f6d650b34252dd3bb241a4f2cedd5932bc83b2e0610624f8f7b1e3ae97c1c03e755f3e68db386f30d84848ca1434c3597ef9b378e34389291a8b493462fa4b62f3dc1f516309f470361939fa33d0abc966d8dc6934b49f3a132a74ec9f750799bc0dfa53b03fdfb1762dd77bea219c234d262b46ce6bb26ddbcf9628a73022fc1612c7277a555f769c8a9be382e1b57c3ebf61db4e8994a732b293a253cff4e73d98d6344033fb1f09d91e41f72d7dcd1cf84127fb6aee9cc8ed1232064637f6c52c4abbbbbbb8fc7a3d1f5980a31e7f9b558f4d4ac5927faa76d465f03c7eddcb9b361efbebdff00574393e098f55343d1eaea7a2986d1745853f941ebaee629e1a1b0299767d637e55cf173e4c891f4b9aaab22eac997b214c5101fcc55a4b14c83bb14374697d6083e3fdf445d53bd166d68291d9036a61604cb841d96c662e57142abcb8fb248111c290f45860cfaecfd5a874503a365535322fa160d1a2dd3353acaac8746a7348aa5b65b7ce49f490bb3ee498b9ad1283720a0589b35eacdd1cb4581cc8f146995219e2d8dcc8d36916647cff2db3ad8b545839d47364a268dd42bbbb7529fa29f4d2d9cfa89fa5951a40d8180321f610cb6ca885a4aef02f5094c8457e177d086fb8e46f4b1a9a1cbd256ba275ad407b2cfb71c8393a7e65c32fde754eeda8facf80a4c9037d1759dcfbdbcb89fe8b784fca021f5d74379249f0fa1aca5fd54ce9c0d80360dde508fb4d5af482bfaca99cf4bd12dae87dd8fecfd6078951f5e059a5202c60658084cba6ddc3c474343d296e9fd7cbdddf3f2b990aeb45780eac11ad1aac1e655cfcc1b4b4b5d594f17cdf37a15695320d0d4027dc31fcb709fe739dbfe946a3f406b4544cfafb8d7e4caf1fe3aaf04a17b66ee59c76819e58ee203f419dac3c091520513d21e357b9a2c7068af83b5d645b474217609a5917939c56d310d2b4acc4dd33c7538fc5a88136c779156e5c55e045afb229eb10e7613d100f0172454fe01e21dda590b3e406ba8ddb96bf77aaa0fda5f04fc9bd774cf8e912390baeaaa6ba1dd2ad4a7f8f06bb44e187ff3cd6e500a0704dbd74cd731bcf847bc0717ba5ceea92943ba48d0b3f3c9d457757b6e88c5d453be3fbeaaf8bc894fc14477ba6af0b75c8575023241960de5ddcbeebe7ff3673f7bf3f4fffed5c35fbaeaaaf81d09f705deb46a149812d33aa5d09b788316c061a6fc763daf19439b10271e18ca44398f0cbb6408540f02c523059a7787cb8d4d94aef4ad7f14e729f77bf48ea9f98c854fd03047d5c534287d2473c0c4cb78f053cc07bb1ff9088fd673482369431f92464a67c2d1adf8d642eb5e6b5d436b0ad18c018c5dd66230b184d67810de603fdd5be5699df0d21937e7d629d1c7b46e45e5a9aff3b5724a230dd95acba27bd2ea2d2db94fe382618e0cc39adc7a57bef64debbba44951dd729eb64f742af10f0e802fa844be19cfe7ee7d2bd094687d05268e330c81eba45f9796757a6937345d57d28117c8fc3a8c856790c81fd0f693a2f491cc01132f74f4136017e7140168e02bac0abbfd1ad671f49cd9f0993d21d8bc669c31b915c4d7a035bd6685be0e87e3bbddb0c4728b99d5d8e4b89e3ab2eeb15d1fd8bba7715b47e72e738f495ffff6ed3169a34148c1911f7e3ba7791b7e9bc867690df36c26c4a54c940b8857d88d2070f742305d58616c3376cf21020542c930d2f3a3b1c4ed3a67c3b4167e9a82e63a87bcb0aa1802e38e0076dbdf4626baa6d96ee78967eb6dce3aaac4e0859deb319d371907990aab3ab78a4c8293e19e8775980793c93e4de1d2546cf194f0fd5fbbef9acfacfaeaa3508a5aeaeabcf3f3a787c998854c8969aad86a4c2ad479d4e084c7682a17aadaa36494134d73ebfbf20e69423cd044b9f20689160e7486008fc0e8e75108675ae3630743600002e63497954a73dfe9d4eb5be16ad78b1fc3018a095f6fb3d7bd160ef75ba05979d99921502908e0032820f89ed0dedeae0e97672a830f68bfb64c1a0e694474debd67ef339974efe21b6fbc71445653168de1f260e51b6d39ab7c399da1257d0c42e941f0f40236c25f0748cd017039f1c87839bf08140825628516db8ddeded5f83d4e71bbc5d55d5dd1c3e79745563b43a07c10d8be7dbb88cdaf97203cc50be5c355e57002015beff1b88fe3ec84de74389bd5fe17f3425f39fd772e381d2094a852bc30e6b41e4c67eb5d6a22c004d3b9e80a5647a520b06fdfbe6dd88ff4a51b16de90f34f56298c97099f308b7f008edffe0fb1034d29852fcedfc39dd5e632618fb1719e1128104a7eff850155edc6a6cf3347c0654c7dbd3b79fc4c0abbaa2604309dd282f64caba6364d745b962c59fc1684ee1176edda7564a2ebaa46fa3caf4f067e3fc6e0573ad33e632f2647ef86707aee4c1abbaa45040a84124c51377804fd37ddb038aa45306ab1cd18b5aec46ac9476bb1eda36d332612e07f33d884207e5a4f4fcfc9d1d2a9ed72fca568bf697462e1001b550aba773b04d3092b8d9d6b0f8102a144b1e885647459349a24cfd03cbc12f8dcfc295f672875b4f6a0612d66080c8d40fbfef675baaa7ffff4e9d3ddcb962deb0f9d307429f61401f53e8e2d623fb190c014de5f75ddf8642a95da6fa5b173ed22506012ee527dbd9ac6dd8f0d823afeb4e2a9bcda8589b59c213010816c3a7b2f94250f5ccbff7cf7eeddbe8139584a69048435563a04d27f2493a92b9940b21061e7024d89a6ef244edb6f05ac2297fff52f3e3bb99bad29b13785213028027bf7eea53d492ad648f8dedede3d2335151f9470153ec074f15c183998eb4698aefb0aa6ea5aabb099ac496340a04053b2212c70963316d08f8b0ef2f965d70c333efd18ea60451902558dc0e2c58b77606d690f1a29c370e4ab301bafa948a123e95c68460b72f98d7b98401a0972b593b75053aaab9b2f64d24fe737dfefd666bfd1d5cbf62ae583c2ae1902832000ade93dbaa0b9f5ff700000400049444154675e3dfceaf32b57aecc0e92ad669365d9b30d5676af40207da96641600d1f1281024d29555f7f40b1ebd3e10d99a7bf44d314576f8d85e21d122df69021701604a0353d251aa23173d6cc7f4514dafab364afb9c7bacefd17134835d7ed236ab0a92961a6ce74a9426b480bfb8befe35e7cb11efb0932d2509b679b9a9a1620d8de3ea8e51dfd45c770b1e58107ae71381c8b0cde98c31bfc0beccc70a8c8f7c030de87dfd5ab787fed15c93ffbfdb1efcf047c7f211a1ae1f2ebbea144842994c8c0c1c5675ecd88fea7b94cacc07d0a694e4399844f696cfc3627083dbaae6f1baaa2e13efbee77bffb9ad3e9f4085ec1a947f5343b331c2af13d4014da66bbddfe5ecc37fca412f967bf3bf6bb9b88f7561445dbfbdef7be217da916ac29f18d8d52500b3777f5ad21f1975f2ed51f3fe21fcafaae4f28bd71e2c4896f0f57f0b07c0c816a47807ce491a9384685cbaabdade5d0bee6e6660f0e2d1c0e3bb2d9ac0d567ee9e3c78f27c793b79933673a61d0320bc62c7f1d6fdae3c967a5d3ea5f5322c0839a5fe0b2a2d76a94a7e3f5c5365d28d8756d3d6367860043607004f0e172624abbc06868f0dcecc9581188a5525776769ee8cd647a3f8e599bf99168f4df295448438377d658695be5c361d191cea45fe0333d53adb4919ce5babacbc8aa792465ca2d2f3958a001c044f2d52f944ea04353a9d7a329953b409d497fbc9e7ed4a9dbde98480618edda4480d62fe9e5a6c110c2cb0726fa453f5728d347271008b4ecfddd4b37ebe94882aee9c308ad49413baf1a0d1f8415959de80f9ac57b13781e0d9fe7b34cf4f4e967a8febee08c3be2b1d84704b767762aa5bd3c732679241ffbd1d5f5520cb1b2c29aca2358e4288e4cef0b18a818a328593645b458f4d4ac592746d7fe61b6a25f2825c8da2e7197e810b89b2deb3b3ab3584ac34492651b1102c14387dce148f8cf9d9dc75f1204fd924824f25b980b8f8bb1cc881819f7cc6d7c3a9b697ff88557af8f9e3afe085d67d3eafbd39a76b9aaa60f8ca63ada2fa8aad9036d70fd359af2c32f93e33da5a5ef1c7e99f2c86909ec757d110e88ab6857d7610a88950a3b2f242d0521ee37c87d811be9390d8410867e0706e01d5ec5b39fefbb4740c80df42e5e8c8104e5f30483cd08f84821eb0f0a9cd11761189bd24ad0a4fc7448debaa53e9fd246f55d10f434cb7eff12ea3ee2615260d2151440d29babdb58ce2f1711ee7e93991f0129a92d7d75ee27e5a0deef594e3411457983c987a298e918a82c219e280fd54179ac836814d3947cbe360a7849c12c893eb5bbc12f5d55dc0e0a5f646262e280c094c086e89296442fe0f3cf4bdfa472565de37e26c13d96bfa6c993bf0d0bbc2f8c85062b3bb63ea854fc6060b3caa7b8d75afcc3b595d106a768d67d259e61067ee1bdb7ce7bf6a35ffde1df13ff6e4559db1c74d214122f49ee8ed1b6c92d793ace0536d4277eafab6db47c9eaf72397c07be3f1e490a4d0e042e05f6608d94943681de33caefc97bdf14455a41184ff3f902944ff2d52f91257728189c8d60c12eb32ca5238fd1e877b5703366384bd1a43c56bed9418e841a3f3b18547274dca1850b391b3d27be7c8ab4169af4651e08a486807bbe594e513610fe12d2e91efe4703563d2032cbbaf62881a5165f748ddfd106ca6ffd79e48134f3db4e7cc107e1d6c1da41ed6c0e2ab3881ee164b6398759c8c2c8aa6bbccffd9a1298640743e09c22804d94123c949be10b687486e83adcc6607046fe28721d46bed2995164c81aa10d18e5961a19168d5669a447234d1a4106bcee15d458cca92df7e29e469c7eafbcd61c2d2bca561a51d20894469594cf3a305a5d913f3aa51130f14b79977ce0636f8303f17bda7ef9f2ce7dffbcea712a03b6fac233b46190c9fb151a3d23af579676d0f352236294e1a9cdb97a3c66b45bcadb8ac89b3ca243a37c8846f1c5a371ca631df97c511bfab48083d4560923640af76e4d6bd1f4206142ede035f57ef44bc2a253f967c30f382184787ce095558ab2713522dfde810f3416778c30614a6d8cc5120fa0835a8e452261ba4f443ebb1785fc31aea7c92e72eb288d0e0a654f675777bca998263ece24eccc83179c37bf91f244c98f680f976eeaee7e394e0fdadb8dfee8c78a43df0a67be2f72babebc37c3df4dfcd938eea44b706db11bce18f587ae873e05becc3ab3aa2d63170d93175d74be28f6f145d7b95af3fe1b03691a46ab6ef0e2e6a0e2b9095ad3b575a2e38e21da71f4d3ddb15cbc305ed82cda0c07b50f0d0c7f02d31a79354dc825d43ca95fca3636ca0d54f570ff98a6347cac868b69ade4232d42913df8182a6bbd5e4f1bdeeedc1685fc51a4d77b875f71ad204cb8295330c02c3dca1d3832f4b4d1682f7fb4eac2e8113fc8a5440b531f2d0862d980d1668785378d08a7d6bb9b25c5b79646c9f5f5f5cdf9a342b7cfb7dcd2225cfec6167aa60494f90f3ffcb0fb7b6bae7f546eb97acf6fda7f3303da461b694744d7baa6b611ef346aa6f4dc48d439abd488d82dcbfb69644af9649f4c533734aa3f18f4f9ae020d1266264ec5edb3da4167e28bce348a5624f70eba06dee628dcbc96e5ad565ba8dd3366706498519087ee2be98ff0cde757421b4983c8d736ace7567f14f42fca5bfd4665e81da07eb6b493be7e30df9152342dda7446379bfd2f05265f46ef584e4b7187ac3ca429d1bb46f7b83e58e7732fb79ed199fab60db306a4c9101f665afdd466abcfdc79d74e68503ec5d9ff0d1f8c26a5e734360f0645eead743f583b507f077e71d6ef71c7195e3d21e28bca4ed41f1137c86d3c8d3c29c85f22ae7f95466a8b16f1b640a0a9a5b14ebe0c9dc10e86c004202070a2a07746a3d1f59148a28dde45ab126b146968ea1ad9c1efa2740326beb4d07c494383943fca8d46e35bb8012343c796e2d1aa4d96fe29a5738f92a6a2eb99f7eac9e4329bc07fdfaad310c48d29d5782b0d9d4581fb7a7777f7f18235555dbf5a72185b297f2ad479949efddd822bdfb9eedefb1fdffda7a3f5b6d32f3c3378345ad2948ca32f7575c5ccfa04f12e55b3394b8d8879439fd319ee7d8df2c5c2b18773b8f05c0aeb4a7681ff4f0ba7e2f69974fbfe19ba300523edad8291bd49148de729193febb84be0b698d7a2ebdbd088649e5f271096478e18e9be3cafd2b9d20e2f5ca411cfb44e43ed461f7738787d5b389a5c130ebf16e204db5d390d55dee1f349e6bbc6dbec1fee51b3a729bf9966f74e0fa7c49703d08655ade711af2fd54cfd6c70c2635416f3788f92a6144d73eb4bd1ccc72c99d29e0d428be6b3893bdd6efb0da696024d99d6aafcfec6e97817fcd1b4b09eb4d5a4cff7ce5e957f88b473f0b2ff4218fe08bcb06d83e4e9514e9efc1ade797f2359eea5c35fce6a7c2b19a20899c8e7554df85c5393d260b7d942aa2eaeced7ea4bd124fec85803eff7518fcdf822dd976a07cd5a600aad25a048b7521ea8eade489aff72ee5ad8b91e11248847ba9f90c3fc0e2c5c68c368a983461ac57fd6888df295fa639a52695c4a61c5d20ab12a5e53b2f0c91f45d2e83e7fbe9c46f5d6dc78fe28b7d468b378b4aaf48d5ead79f4dc1c7dc17a41078d0807e3cb0d0d4a915dfb2d3e77fffabe2f3449f38d1ffeea578a0b6b10fda3d8be7524ca77664d89d632f247ca9ed00c8c824b8d88a9fd2546ce1dd8f364a3fcd63a5c71fb2cbefa46e5b835b862beacdf33ad9910bff8a8f469709ca5c17504bc9e5516ad6a3a535be9afb84d482b18f953bf94c833a01ce5198c263d233aa5ea2ba66ddd17f33192b2168de27331cde2e7d63dd5351ef559f4c67236810633fd07a635a60b8220a357626fbefded6f9c2d7405db3cdb0f1dbb180102a48567b2d1768cd2318510b8c4da8cd897de61e3f96d931a13b7bd3275a1e639f0fb2c3484bb5483bb42b673df78f374fc455a0b32d4ec4318fd6f1304e37054f6dfeb89841318e1fd092a41a44eacff40b7dafdaadb665f06cbb7652e17bf31d96bac760adc9fb29815113815e6c389ef638a6787081e38417cca4c9bdcfc2f5267e7b31ca7fb14bbb128df9b09adbd48070e7461ec1846bdc7d6fccbfadf6dfcec9abb511a750aff6318da2df686c9816c57d73e2aef9e2acd49bd91c25e25dd1708d4bfed74e87412bffca3f8fd1f5214fe139d9db12e19eb57d08c6ee405f187baaead86563827622831311bed1038fe31d4c58976ef6781558743e06f0b412bc49a902172dc63882a383fbf7df9eec0284f0e8b02be3a445edf1989253f227b032b383ddddad494baf8cd2edffb4d2cd10e8ccad18bba8fd22ded6904ddcab23204c68c408150e2b16744c27ea53eaa47f1c1f0c7e2c921d5342694c6dc078cc03010a0fd4c478e1c31a798f2b34338d0289766dccca3f89ecabdf2ca2b19e43187b58b2058f6eddba7e797299566d12b75deb163c735768f7c8b4be457437be95fb82e95b7380dfcd16fcee4c57a562a8d9e15b7c5ca9f7f2e6e5ffe3376cd10a844040a84121695964b5cf6d5ae70c20cc24596415ebdb78e46a683358e09a5c19061e9d58a00a2ccbe35994cbe71f3cd37e7d687aab5a1ac5d0c81f380408149382454f0ce48f20f161f0e55c27a9df16eeb9e9d19020c011841d8c59f9ff69ece322c18020c81f147a04028791c4d0fae97dc9adfaf2ca75dcdaada7d7aa69cdc32fed5328a0c81ca4460ddba7542da48bf7fc5c215d6347765368471cd102853040a8412990bda6c0d759ac65d8bc54eaede66af7beeb8912c53de195b558200ad8bd4c1e495b625947b935a5b5b7527effce1ae5dbb668e8457cbf71dad1f8da41ccbcb10a83504b081b8f030edd639eef6c25476c7109838042cefcb1e31391bb51c2e55137963f00a42c2b2d22b95e76c6924107c3edf5c843730d74ccf967fb0e7c978f2ef92527244d377d92c375bcdf9af83e11c99fb0d3cc8075922143a546c083130274b6108542f02059a52f53693b5ac9c11188ef7e5f1f04e8cddf917ea6aa675ac58689aa636f00d3f8115df87874b2b1cee3abb20ac022fd2c3c583e563080c86c0004d69b08c2c9d2130de089075a798ee5d0f03e9b7e57b5f26ff7086667c005b122ebc6a5eb2e1b9971a0334e7d5e79df8e729ceee878fb62f41a3788f1519193ee9d63a05f5b59e70f2618b4ff2aa8c51d7495d5757ad4da4de0257cc77ea1c7f696e47bff3795d4fff0bed19c254f5a56ef7b439bdbd6f6cc27d4ce4b518790220ff71f9f5bce9a93b2545233be102e180ae738bb8a957cebde94a4579ecd1fdeb69bf15f19aefdb8cf830bd43abeae770697a1ca03473bfd373077e82dde8ef1079e377e6be21d48527a617e9294ef7bae399ded5f91814d3253aec6008542302059a129cf4adf22aeefdf90d6573e0f968d4de35a2794e9b885637c0b1a8d09b7823168b7f241e8fbfddda6844ef9bcbc16fa5348d175e78f18fae85f137dfec060fe18060fb1a6d5740a88b5e945b60c0e96522cb7f97f8b30942bb60b71db47825f7399caeae2617466eb73487d2059bed1181d79f8c4693eb62732fdf89a416d9c17d5170d83e9e442cb1466cd68dc562b767747e35850228aec774732488ed82a129e02f5077fa0f7f7ea6a7e9da1dbf7e64abdb2ebc78e490f322ab7e3acbfee0129b9ef95be45d9a9837afc17a46a1287cdec4a7101a66ba6af0b75cd5cc7bdcf6466cd835c273e726fee1e5eeee7831065659766608543b020542c9b07b7f0537b2d368e199fec807d2e4807469b583c0da571a0159765c0e19f1a5d24fc7963a98f7655a4f49a5b9951477069e0ea6b9ecc6314ac3224cbf77e2527edd689d28dfa381e511997c96f5a692c77e3a83b3670de71b02cfc74c72fbf6c12102d4a850e2502cb4fab7a4899d3a25df03abd3b5f0877797ee0c844ad54365dc36ee1b74ee498bbf175fdaf58fbc61fbeddce9757f7cd7e7ef7f1f8541a76774c0bfdedfca4e7db379d3571f5d471a1cc94854da497551bd4b4f70bdf95ea489bf620c4c1aec1f43a0061028104abcda4beed85b28ac30fde9a9e4cb36511db08bbe0670a9f926229cf774c3b0fd1a409c98083078b8e127e792443ba78d1b7e9bc8675de40c525767c3c9ea1ab8bc396445f9c4c7db9fcbbb4e30d4cc43a461a9a273bbc51b59eee587be264de902577c0d05aad4e0c2a7fba4eb16c3a63aacfca660c20d9d73ce3251012fde479a15ea5e7fe2c4cade52f520737f5807bace444fe9f0eaf0b33f1f8f471c2eef25f593ea973ff6d8637d5684c2c9684ad84875c2237990ceadf03ee186934db79831b538b278000838b5917c328fc130b09eb33343a09a1128104ac92b2e3dc88bc2573067be997eccbcd37549af21f4ff08ab1908d6b63308b85cae9982c03f0561d1ccf3da7f9d79327e5783795f76653d5d58f7b989e20de1e5bc20a1f20f50ad069ff34e3ccdf7231ff967238fca362dfd09126ccd98fe0a2172ad91cd9e996a9cb2d9857836c7606a3e5f30f479c1c9bddb88b68aa939af226df222d612d1a5184a74e66c9e797d1ea3111194621dc19174513d81e9d3fdbcaead8a83a720d6c3785dff285daf83aba3d329fdd55f7ef9d66b5fec8cbdea96ddd713c9d4dc2bbea3a12da4ad71f1d87d9416f0ca2b78ceb63fa5da0f506c234af32bee35f95ea49d2e5777290c282f3b1802d58e40819b219a0317b4d4327872ec8c219480e46fb84a115269e666a8da5f8333edc31ad23b208c7e81dd348d480d2512498af9923a93637caf484b027d5218467dd0fa542a75ec85783c393d9f08d186a76647299f79f9f9f2af51a4c0975efeb3e15e93551efca1df128bc63e4eae88888fe236964a1b2e7d968f2150cd0814684a86919e1f8d256ed739db296ab42168ae6a6e3c6bdb1904e82389582f6b208ca021990289de800726522051edc51feb331c0dffaad71671cd9b971ab09995688f4420f5f163d95c0c9f81a29c98ce7b2893ce7c42f00ace3e9a0384ee78b4bba85a76cb10a80a040a4cc23d8ee68d347581ef13d660bd170970a5ef845787aa68296bc4a0089076e4f1b8d76375e75d79fe0642aaaaefc5dad27b062d58460ffefbbf5d1c782d1b8e162c58d032ff3df33fb1ecc6655f2e1ba62a80117c7b3ae0ecf6f50a6095b1384108144cdf511d647167f4628f84a14f71bbc5d5f9164da578605ec24ba152396964d0208afcbf43202d2ee29ae206fda5288ddd8e0001b7db23a55249b6263b02ccb0ff6b13849219dd7704c558d62a42a04053a2764df6fb11e5f9e44687c3ffc6585cba54114655dd94542ad581065e2b49ae1bb193671346aa17f435b8011f88dbf181f865550330418ddbb9736783dbe3fed9c2050b4da38709aa86916508541d02056b4a7eff85013205ef4d690f472291e3753e6955d5b59835a824028944efce64327539d63a7e6165c054de5dd6353b8f1c01433772967d232fca4a30046a168102a194d143ffe816b89b63f1c4db69c77a2f6fef6e6a521a6a169d1a6b38041259db7d08b670eba8e9d09aae713a9d6fab3118c6dcdcedfbb6cb9816fda2aaaaccc3fe98d164046a0d8102a1c4397cd85771e6e039fbab46da20d36076d410028944a20deb49e628df66b32daaa1a68fb9a99b376fb6078de07b6081f7f9ebaebbeec8980932020c811a43c086d130ef913caff21cef8753cc7086833f30593a4a38f0b8b6bb8ca9e702138a3773e9a597a60e1d3ae4ce66b3364c1f4630721fb379eeb9e0bd1aebc09e9f0d9224f9d0b679d5d8be8968d3934f3e3969c6ec19efe70d9ebdb7130130a3591308d046410372e958bdcd7691cd66bf1216435efccda16b45f14e9a7159eae4b940229dd6161e38f0fbac9a4e7d48d7f5f74b92476bac932f3b17750fa70e1ebe009b028196e1e42dd73c3400f1fbfd570d973f18399039331c85b263280408d7f6f6f6bbec76fbbb33466617b4a41f0e959f3d630830040647c0b4be8bc3e3727e16fcc6cc693dcdedae3f7448b908cf4a065ecb2f33d6eb68f4f40e68685c281adf42b43c5e7f43af9ab915976be8fe7c1f9e53a7eee179f531f071f47cf332dafacd7842d9482bca9b2e76ce4687062cc8f3af67cb57cbcff7eedd7bf5eeddbbbb394c33749feadeb16cd9324c36b08321c010182d020526e1647da7aadda7a1a598f48c5894739da3e93b1a6d52bdeb20105b69da4ecfae7220a4402eb68e4ec209e1098cefeb4ee9577014bb11d962f022adc412c99be9e389d8392be096f9efb1167279003c8774579d00a1a61bdc3c97c8fdbf9ec8dabd92bcfea7022ffc11210dde138d279716c7db31eb453de4cc333f6f2c71f7fb3d927a2bbc01ce0a78bd4faabcd162686778526daedfe4d7d51d8eef2e8e09f4fca1e045e0fb6151141ed134bd159ea837ea9c7048d7b51f23a6ce368aa96382def78f5ce7e4c7f7b13ba7ad4ba55e7f013ee9fe33164bac9514653d6fa8f3e2f1d4425996ff4d806b28d0fd000c15aea07b603305fed340cdb84976f073c85594a825fae30951f806c22dbf4e763d72040441f8ec51eee8a7572c5881cdc7ec60083004c68c007d97ac3fb7a26ca8f7494bacfbe19c9b264ffe765353d317869377a83c6808092503e1aa97e0a3ba29185466517e25189c45e98d8d8d0d8140e0328fe446728e67b72ceff729eeb56e9f6fb9dfeb82074d838336d03269d2a4c9525f3e38d614a83ce8cc5664d77eca8329ac965c7a8e169c6b2a6dd8a463d1a53af3f352ba073c3504dc14a88dcfe7c917f45d595c17d1b6f8271eeb7d2e13538f2485823ecf55263df084b0209759d7f9f55b693366704eba7623efd47a77b3c7eb6da3f69a698ab2767690533cb262f2d597b681709002932f932577c8a4e30b5e853d48b8049681c07cb48b9c809a9ba6298dfd8d0e833dfbf67c167fb7fce637bfa963188e0e43861bc3add43b50607d274ad2b7b286318bb4161c02694e4d01770b3e62e7ec807dc31e0ab4667992c822c401a27a863b3b3bbbb24ee79b60386c316373b93e8d0d9eef818674b5e430cc5de0e47d3a9a11dcf8ee723e9fb24a5136ae86767247acfbce239a214c238fcd5a36f3dd52f1762cbac8fb4a7e5e335d103a1da27e0a201af93ca555f7e9e2ba8876a978387805c37746927f207a50518e7e2694f8b3756dd6d1f78f3435d2718ae3fb24274dfa86aa73f7aec373d1d066bcd465c438435fde9be1efa6b642ed3de9125c5b34838fd944c3f44a4d9edfc19f8959413ca1fc0ad9f58810c0941d3c84f3c7162f58bced861b6e40ffb38321c010182f040aa6ef5caa0ffb66a3f743b3b89f2ac0541ec7d9b9e9e355d95074e8634f6b4a74cecf67737109236bf8292d7ef1c521e9c0effdebfaa6f8b44c66895de09e8292c3457bf91f20cb02cae7341c11159ffd4824f67dbaa783046c389c30dbe28160ba68f2e4c9146f071ff6dba1816ca0783bc8b685f2fa101e213fef4c73afd619f99dcf53a9ba281e8e836202618a101ad66c2b2610d16e35e5115d0d7e4d424d92ef35e3fbbc16098772b973ff3d8ab26dbd74af562ff6fb247ccd6e331eec09c71eb6f279821734737df65fc1439deedebe07663ca17c9b7fab003b8f0c0181bb11afd7ef465688e5660830048683c0992f2d7227d2275a69f32cc552a2bfc4bcabed59045e1b0ea1b1e6517cbe36a2e12bf2226124127793d009fae525467bbbca098edb36489e1e388c5dc16bea8de168723dc5add10d710e845a87a2604a8f8ba088ed2ed28abcb2bc0334db74217609399bc5d4dd125ac3e9b0d962c5f176ac3614e73dd219ebe20cf1f9704a7cd9e4238fa770f8b550715da5620205024d2dd07e5afc8ab486fc0be6aec9092ae9597c0431750ad7248ae2fb90ea4a794559fe1c698ef005650aaba4cff7ce5e957f88e20b51db2ff4fb037c6fe8df544df8dca245bc8d3c68232e909f34defc7842448b1da346606a7777f74ba32ecd0a32041802832250e090953e96423ab132124b991b277dbe697e377fcad7194a1d1d8cc2f970c84a538b8893632f0e4b40e950b4faf788581f724bfb2a2e47cf078bb7539c77b0f65be9448baeadbaacf4b19e898ffc360d466fb8f9062bcfd28787006225d9d01fdf5fb468d1cae19560b9f2118047fa0b9817f07c44d8753102059a92aa6993283227a6ef74fa234b3cd166388a0b9def7bfa48170b24e2a9f8e38d7bf3b0f8c54d41397a588a8e456bb06716bdfcb35911fee5a78dc73548f60bd9a1e80d37df5034d8b3b3230061a44171ef78e28927584897b3c3352007ac44ef850ba60b073c60090c813e040a8452aabefe8062d7a7f74fdf354d71b170e8ec5d61089c4180061fbaaa3fe37038a69f496557c34500f0456078f42834fbc070cbb07cb5854081509a924c8a0ec31921973ff427f5f4c012cf26d51624acb50c81a111d034ed65e4580d2f0eef1a3a277b5a8c00ac659f41da1cccc4ec83609a54fc9cdd33040a84523891795b8f9a3ddd9b4a1d4370b2289749bfe0c90a5d0c26860043e00c02d75f7ffda9a79e7aea634851f7ecd9f38e334fd8d5d910e8ededdd096d298d7c104ceea79917fab321567bcf0b8412ed69a947f8f318c256d0141e27882c9e4eedbd13acc5c340a0b5b555c707f6202ff237ecddbff736f20e3e8c62359f0502a907f6a60fe580e067d96ce27370fccb8c466afecd38034081f51dd469d3828c1ee3e581eb9ec00ad9967d9e5cd49c295278753eacef0a3960776341008bce2d283f6d2c346ab92c3ea8b69b6fbef96f107f2c866d0afe9ffdec674fd5321ec3693bcfeb93795efc313e37794b03c65eb886be1b61539e1b0e0d96a77a1128d83ceb0e04de2564d24f537369232b1d53ddc9bc17c74c62ffaa0801f86ebb9ee78d8f565193ce69537a7b93dcc30fff9c1304519836ed82d9f8ddbc3f9d4ef7c2a7e1b0ac26cf29b3655399084e789ac2cbfbb6f08b71df0a217f3b04d389b261953172ce1128104a29b7fb0f012e33e7343423d29a485b3ae71cb10acf2902f8006c4685f4c78e312240bf995dbb765d80c088b7207cc5b7c648ae6a8bcbb2fbe3104a3fb11a88cfcc5f75ddf8642a95da6fa5b173ed2250b0a6641c3f9e0c5d3eef2f64793765ca14b75c57775943837756edc2c35ace10183e0234885bb264c9319dd74fedddb7770d6db41d7ee95aca29f487a30164ff914ca6ae6402a996fa7fe8b6160825a5a9a901bee5b2647907c7a8c7c9face6f330a7caf0d4d8e3d65083004e0a8f5c72aa7fe061fdcb730340a11c0f4dc5ca4cca154ccc37c05a1569601a768612e7657cb08148ce4f464f20e78db7ef7a9d3c9676a1914d67686c05811b01b7611b379ff083ab78c9556359587005a005cd024e31e08a46f5653db585bc60781024d49f078eecfa85cffbe8be6e666cfb90e5d313ecd62541802e71781c58b17bfa0ebfa3f9d5f2ecaaf76b8199a070de9abf1381348e5d73be5c1518150d2d2e9d9f07d772f79d7a6bf48249c2847df77e5011de382213038023bda77d4c320efc1c173d4e6137874f82f18d77ca9365bcf5a3d1c040a841259df51e86ccbf79ddbedf1e6c7021a0e41968721c010e0b854572a01abf0650c8b4204e021fc7b8529ec8e21508840815022ebbbfc8db25d5d5db1a1c256149262770c01860021b065df1657c3a4865f61fde42286084380213032040a3c3a8cac682e777363e3a70c9eff0ec7f3e312167acb962df3e0817991c11b7378837f819d190e95f61e18bad1c40b7c67a5f1cdf865df9b09ffde1ac664847ff997a1644d8150a290e1575c712cd6de6ea84315ca7f461b069b9a9ac6cd4dcd7df7ddf7069c347a04afe0d4a37a9a9d190e95f21e38b3ce003c644cc5df3588dbfc834ae19bf1c9be33e7ea3bab7b75f1030b3f10ce9721c5d70542c98d90dd62368a48e1c287c3e1d8c3c599d93d43802130108175ebd609ef7ef7bb6f8073d685d974762379111f988ba530041802c341a04028cd9c39d3f9ca2baf64eaebeba7f4a6d3eb45413f7ce595c9af8e44731a4ea52c0f43a05a10d8b56fd7db455df4221aed4508fef74b787488544bdb583b1802e7038102a144ee85b09ea34552a9b71899f4a3d8e2d682d9b96dc498d7ebfbd47118429c0f26599d0c81724560dffe7d7b53c9d4876fbcf1c6ae72e591f1c510a824040a3c3ac4555bbd980a7760b7f5518fdb76435757f4303586d68d744481c64980451173d25a493dcc789d10041075f6fd203c379bcddeca04d28440cc88d628020526e18441c0654cc56eebe99640a2345310f1c2e636c827ba670743a09611d8bd7bb70fde1afe82e8b36d583f7abd96b1606d67088c370205d377449c5fb4c8163c74c86d4de3b945359d2fa0c69b01468f21506908404bfa3e066abbe04ae89795c63be3972150ee08144cdf995ec263d15329700d57f230db33fc7e459854ee8d60fc3104ce2502593efbfdeb175d7fe85cd6c9ea6208d40a0205d377e425dc032fe1393743f1009d8f74c6d8026eadbc0d55da4ed2feeb101baca94969186b13376fde6c77f08e5f8c960e59b8122fe4ec78b4345839864035235020949897f06aeeeada6c1bedbd930e3c7b041b5a4fc712fc8a80cfdd4648d0acc06804436767a7a666d50f8d36805f382c3ad28853c6677aa60ed6233c04575320d032d873963e1001ea4b12f874f6fbfd81458bf88259a08125584ab9225020949897f072ed26c6d7681110b2b13f3629e2d5ddddddc7e3d1e87ade109e275a1aa6a967cd3a911929ddd6d6565d14c54558535a3ed2b294bfabeba598c1f1e1a11c1d7b4e9dba873732c1d1d0afd532b14c666a67e789de5834fc1d6030f7f7073cd93a9fb4ea5ce24191bac952f96c750e37dfd9e854ebf302a134d04b78c3948cc6d694aab5f36ba15df0cbf8c2a9b876df85183dd39686d3d1c40ed292e8cbf1fcf3d237ebeabcf36545d9aac8d2410ad742f1c3149f6f95cfa7b4e1be83a6fc68fa4f56e4ad74ef533c5bc3d9eccf776dbb6f616373cbef1445d944e5eafdcaf233d79e0102cb130c362b260df9a080b55a0b7bd9ef5f82f4fd56dd3cbf4ee034f5d684c67f21e09557f495339fd7fb07d2b5e8d4fa39dad57558e7b8a3abe3c9cf84c3e1ddbadd3b3da319f79f535c32bd2f9896ca67ab74b8f9ce46a75a9f034432f92ef89b32658a4752940d92e4311afdae96e2e7ecbe102f8647f9e2c12d5c684308ee1df42ed39f4f716fc06f99f7489ed0349f2f407d2729beb5b2e40ec19349b3cf57bfd82bbbb752ba33189c25492ec3e79b16983285f3501aca197371fde31fb73536484163dd4f1e5f4acf89f6c2859c8d0bce56a80ce5b5fe8245696ee4b57e574a40996fd255024b15c9bdc3bc96e54d0d01f77ce2530a042ea3b45c1d6e5c9ea1cbae0bb100ae1dd407848b5b96f7fb15d70aba260c1545da20c9d2fe7a9fb484d2e4c6c60619386330b01f7dd731b5dedd8c6fde0a5976efa7e70afa83d2db38f8ea403f505eaf576e43da41f3fdc173f31ee5cdb23edf127a07a89ed9c1a04234e8cf3344be067fc315543f5e18f3fd5cc62d138beb71e39dece3d1a8f3b997134dfa36236dab8436529d3eb36ee9205d132f56dd957aeeffe15003fcfec616fc80cdc6d10f530904e603df5995da38c677e18f763478b8ddee69a329578e6572c2c163d087863e6074263edd104a10566bad6b19020b1f9c55d07cd6faf011e366cc70d2078deee9874fe538ae4d902477c7aff7b53fba73e73fcff32afea3541e078ff4507efb49b8f9bdae362bcd2349214b28c93edf72fac0d0c7c8cae3f17adb9a834ef37747bf49f3c385ba49705a34d879e0bb8d01c341f4d10aea2312ea8491d977524e98e7facc63709327e3337746c0d300c5ec53eae73e8c7383995c5f7b64c51c24103d370482dfeb69a381c5ec20a7507f9310cabd5bee902514adfe395b3e7a177c8ab43600c1e981d66df19dabc7d5566a5082ca3058caf14f42cf1a04d1350dbaacba2bf54ca3004ef1fbe9876164e18cd565e3d6c085c3b6483cf5d1e8e9d3cfb03d4a84506d1eb2ecb81c535e151d2554f67a5758bdd7edd7b086a473ade49d84e3faa7d078de48587938417c0d5b215e8b4462df8f620d2a1c8eef769f3cf935b798594df724765acdfde4ad982de2b884d1f5119bcd214e51de31e9c9f6f6b9f8f00d5853e0555b26abf128862f98b9e660f86d229fa5a93a43cd3c148bc53fa28aceedf4bcf848e337b9269e58149b3c794877ffc5e56af11e7de3431f6dd105716332c399517f5dddf126a00e4d53c12063e36a5114ee706a5ab35d34d65918a15cd8bc7ee563599c73d7fbf669d673ced097f766f8bb8906ac274eba04c7165e70defc46ca138500d47bb8745377f7cb71ca5fec277438f91487bef5f4e9d32f727a713dae2d76c319a3e95d5d0f7d0a2f96c95b16ef93c5bf2e3a5f1445ce6c0b5df7f35cc117a650b2f1eedfa3638e0a3cb7b92792d86308e2336825306047ad22000d69ba61d87e8df69fa8640ce01eeb365a2ff27abd6ba5ce13cfd6db9c75d41e831776ae973cda641cbca6ad54756e15ad2725c33d0feb50845026441f83a05f5ec273b6fd29d57ec08b912c95f52bee353490c34fa4e5f60f7ef2ed1ffce03f36bc1ef9adfba78fbfd8fa787bf3141bc7fbebbcd252ca4b472ad479d4e084c768e087a91af894e4c3d134b7de305a75183d505d076d5afa1324b89a9b790f6788cf8753e2cb54b7c00bdb36489e1e05821179fd8d75f26539aaec7f2904d661dd30198daed139be051acd06a7e180835c83b3061974ce1f24100d7ce85ae8dc77b498e7e06c99ce3480c1e935bbcd78d0a2d1190a1df538d59769cb0ce750e6a452d9274a0d46a8fc70f3515e1c03ea293528e1451b094ff3a06bf3238e3bc3a63a68d055f147be8a17841a4ad308a4fe067d9eab48856d6c941bf2f3b0eb81d306d58609e259cdf478dcafd37b2049ceeb2bbd7df8910a0bf12e8fa41d54263f3fee4def27f969c5d79b366db23ff1c41317ecddbb973c3e144c8dd3fd70688c67b952b4aa358da641e97db5d603395a17c77dc0eb5985351873da95d66ebc987a230cf0d05cc7c107cffcdeb5f5f537a6f23aa89cb5ce43eb38448bd61231ad4bc630fba7610d91a6fceab19643df4b6b8983f2605aad23bf9f87cae7f34d9e4e65bc98be9d3183730eacc717c0bad1569a4ec6b4a4b9c63f99a6f94c9edd5897f4b798eb4b784edf695a2723deada9e14aed6bf38746bf96fc83a618d0d8359caeddeb776bb3dfe8ea351db3e6e761d7d58980c7e37907baff17306c6d440b43894492164ec9c9073b8689c0defd7b3fcb69dcb3d75e7bed0160674aa3611665d9260801faa611e9fcfea034baf7c0aaf2ee44f22dad39ad88a65869403240e5284eb742fd108da1d81e6e3e8b46713db837f9b49e57fbd9d2fc0ada4920d39e8e84cf2f0db59fa2a010bba96804e8c59765cf1afc749fea1348688ff1005e05269046d8b38b172cfe2e27727377b7efbe76844559f6094280be6974e493b7ee21adfad717e939d20708a452e9478e1c495b34f2e9165f0f379f55aeb8fee1d46195ad8673494da91a1ac6da307c0472da11b71e72e95d79a542aaaadd8a3416b42e0f94e15e5e76d965c16baeb9e6ea1ffce0078f0fb70ccb8739529eef482693e7ccf3bab936a869d7da78e377a1687c0beb83f38f00134ae7bf0fce2b0764d0208afcbfe373b0b88811f83c34fe5294c66e87890066807804cd6c3e75eae41bc32cc2b201015de73641286d6560d42e024c28d56edf17b41c7b1d6ec45aef268c542fb01ee8baf1417c205878060b90119cb76fdfee86e1d0e7172d5af4f511146359c7880079c870dbf563ddddb123239df622bf798944e29d914864cf48cb96621bbf25fabe164c1996cac7d20a1128b9a6549885ddd502028944efce643275397e43fd1eb0b1b674572db47d22da885df68d3aafbf3a11b419cdd208c8dec00a9bae5ec165052facdaf49923f40a9f4864dea6aad95d6d983690fdc1258aec0995aea9742a09213883bd8a9ef21070b084a368dda68145e9122cb5140265a32961aa43b9f4d24b538710609018a52083c78f1f4f52a78e74b4513ce2190d8d5260d54a1ab6bbb7e1a7d44aedcd66d54bd2e9f4ffd44adbc7a39dd092c4fa86fa2f61cbc8938b172ffeed78d06434ce8e00ed0333f70e21eb687ef3540626ddaf52e46daa0db725adf006e3843cd2dbb391ef46e349738fda48cb0f46b7d6d2cb4653eacd666f3c70e0f759359dfe5016d7e14838b10e2fc558473ce33d62a985b00298c268c37ad25afa31d86cb645b5f6a3186b7b31c0fa872c97fd291348634572f8e5257f83a9a160c3f3d6a02f380fdf8d5769333479f4a0cdc9d8e7633aceb53c87173bd9cdd5d4465a8d69898772f02fe76ea774c4c2584e1ba7b1011b6970da0b0dac94a35c514bdc894dbb97c235551b0c283e0c4da987be6144035b6c36f539f90d35f8a5abe8bb843d4e07892e5c5875d066ed99337927e5adf983a63ccbe58f369e59bc60fac37496890e32b5392b7d38672a934f0bf7051b21874363b03ce497ac091b8b077b5e4de9b0cafb7ff8db524d6d9ac8b6fcbafdd78dbb77efbe684ffb9eff3b91f530da03bf5996535ccbc92ef99ca34da439df777dce724ddf76397f76a59cecf6f93334fd0be6fccbe51cebe25b64fedee9b76f39cd2de9930ebe4215d9455e3ff802df795eef2acb39acb5a997f258feeda83fe14076abe5fbb0d6fbb76c3425d3657fdf28854611364e9deb6d6898658d78e81aa3940e6bb4a2289efde858ee6c231e32f9b4462c14b20034b0abdbbb16a39410b982818acdd328aa6f147390ee892e1dc413852ca0fc5ed9b3a330ac0046607de10d882fb834594b7152e0c87303ca98ee6988462e8f7c9046421478acaf1d07fbea33fcc80ffaf04e2cc183b5a7acac8e60e4f06534e1596a073b064780de995dbb76cd7473ee9f225762f1c2c5ff36786ef664221088448e997ee13e012b05a24fae9ccc7a4c7f76c651f24967d0bea23eff7191064732129576d26f9b7ef04b4f70bd66febe7faae1eaf787885018cfd11a13af655bada9b9923ee90ce71b02cfc720540c2ecf779ea1a96b6507bf8b481b5892a0785af034efc66b137709dc164ae745d7b70d83375d1bd17d4d1fe52295699402016498eee0e102c41a3558231ee293ae9bfbbc96535e1a099d6dc4933f6221371c44271792c08df713210c0678003ee3cd99464b18f9eca73258c06ca133b9f8b0c20ae44653e003747d41df95d0ce9085c89207697823c6d9724142aef4eb7d2ed36d3e790626374e263de49b1c90ccf004d4a6b671d4ea883efb9b580c208ca6edd9b7e7d37bf6ec598cbf0b19de138bf750f8d26fce7a4ebf312b8c43feac09fdc6e8774f5a4ad067efff0d22d19c91415e5353cab9ecc9694a96fb1e2a47f4c9bd0f7d8be8b74a9a98e5bd9dbe2bf95eba2d7ea8aefcf43c1ed65a2e81245ffd12eb9b67b5a156cf65153298e78ca3707a88bee6389a77a573ff88876ee034f6d3ddb157cc2b5ed82cda3447c4ef48aa6f4a4f62c4f39835e279deccd0f78f462c92c7bc89757676996b4ca9e4cb17fb52d27371c3806f29f2003c059acb1c38d284076057bfb7e658f79daf78a47ba791160395f2311059ca0942a743cc9ec20b6360613363e38c30426477e15a12b96c9f37625ec254f21de47053f66e5c09414b6ff33497dd38468ce0671bbe3392fc43ee9a3bfa9950e2cfd6359dd95119086cdfb75d0e8ac1362dab7d77c992257fac0caeab934bafb7ce342ec0ccc35a5e54f01b36fcb10cf77958e41dc257a4a5a1c13bcb8a78007f76cb7af57e27bb9b091172b2ab7beb5e425e38d3f52e85905a403287c2d2ebd94c077d9bf03bfe0c66413eacd8b45b05de6639cafd21d6914c47b92ebdfe0d554faef62a92c2f14efa5e70341b939a7bf53ff0582f076f275583bb4271f073924d331c4267e71793067f05b27d042edda66675fe56ac2b7de3c811234d656bf62827696c8d52f279ca1ff16074d2618d6890be834642671bf1102d6bc4824ea6e06efd0e0b69ae18740e5ac1b3f2eba56bd2c2ac341a19cd80d3c3fc5837f9a3a9dc9cf699182d548e464ed61cb41bfc5aa3a2fc760c766dd5cbcee76fe43d14f670ba3abbbdbdfd0ea61d9567ff0cd577d633fa1e58d7a3398fb4fc0c6855a3a9a7d6ca94cd9a1259bbd028854240a3b3cd2300134b6bc4436b3160b625a048b7d24384b9f646d2fc974b8515c88d9a72e103ac11148d582080103680e392baedbdb48e2418d9ab933edf3b7b55fea19c858ebc9fc266137d3a742176093cf8eec0d4dd129137b61de98c75e58715301289bb6934452106c2e1d7429c60bb8bb42aaf2cef200b1c57d6d38551d44d4403bc5f9050f907a84de0a1c5af486ba84db96bf77aaa0f5a61042336f39aeed9519e08ecdcb7732af6205d81d83d3f59bc78f16be5c965797205c399fecdd9e79b437cec31c61dfd31d2f2e4036ff4b5d54e4973a450e9cda585e691be20c56d0689927b12281d231cfb705f28e285688f959f62fed87df920000de92be0e639786b78b47cb8aa0c4ee0f4779ba619ff904aa59830af8c2e3be75c968da63496968f8700008d413d030f5720511b88173ac6d21e56b67c1158b76e9d90e5b35b9f7aea2973cda07c392d4fcef0d38820faeba318bbf5cf489427a78cabf385405508a5f3051eabb7f610686a6a12edbc7d4f6b6b6bc9414ced2132b216c3e1ea33283107ebbcfb2098268dac34cb5d0b0830a1540bbdccda386e08ac5cb9320bf7418bad69da71235c23847a7b7b77425ba2b5150826f7d38872fcb61a693a6be630116042699840b16c0c817e04046e25d69556f6dfb38b61230081d403939e877205f859369bf81c7c2d322c878d60f567ac0a4387eaefa6896b21e229b580fab489aba1fa28373436b8df36fbe249cf3df787e3f013a8565f0b27b6453caf4fe679f1c7d036a53335197be1d1e06ee0f9dc993476558b0830a1548bbd9ed7661aa5c276f1a37949ec721808b8b1f1cce7f306e3c944381e8d9aae6d86518c65e94780bf149775fdb7b8807910198fdc0ec174223f9d5dd716024c28d5567fb3d68e3302edfbdb9f48c693ff1b7e02a3cb962dd3c6997c559283f7ed8f637fdf4facc6614aefaf0828f9499889efb7d2d8b97611606b4ab5dbf7ace5e38040c2487c14b1bfdcc186e07df08337651c48d60009618dd54808a4ff4070c92b9940b2106167a629b1778021300e08c0edd03b0541b84cd3b43ffcf5af7f3d685ae98d03dd6a2381e9e2b9d85e6eae1b61baee2b98aa6badb636b2f68c0d01a6298d0d3f569a216022007743bf3dca1d7d0037f2cc99339731584a2300cd6841ee89710f1348a531aaf55426946afd0d60ed1f3704562c5cd17bedb5d7b61b82513f6e44ab8c902070f3a0217d1521c7bf59654d63cd192704d8f4dd3801c9c83004f2118001c443d864fb30fce3fd677e7aad5fc321eb9d300af95eade3c0da3f38024c531a1c1bf68421306a045e335ebb359bcd9a31b3464da40a0b328154859d3ace4d6242699c0165e4180284c05475aa1356793f61683004180223438009a591e1c57233048685c075d75d17555595b9cf19165a2c1343e00c024c289dc1825d3104c60d81ddbb775f23dac4cf8d1b4146882150230830a154231dcd9a796e11c09e2541cdaa1bcf6dadac368640e523c08452e5f7216b419921000fe277c1d9680ba6f08e94196b8c1d8640d923c04cc2cbbe8b18839582c0ce9d3bbd2e97eb0af0eb8729f8af2a856fc62743a09c10609a5239f506e3a56211d8be6fbb8c3020bf52793501ef0e8f566c4318e30c81f38c00d394ce7307b0ea2b1b8147f63de2f719be2f604fd20f3807e7bb7ee1f5872abb458c7b86c0f9458009a5f38b3fabbd8211787cdfe38d2ecef5770227742d5cb8b02f9a6a053788b1ce102803046c65c0036381215071086cdfbedd5ddf50ffb77025f4cb858b171eafb80630861902658a005b532ad38e616c952f024f3ef9e4f46030783f04d2d3583f6202a97cbb8a7156810830a154819dc6583ebf08d8edf6b7226ed2772090fe7a7e3961b55b083437377b1032c44967bfdf1f58b4883f6fb340b2dfbfa4a1c13bcbe28d9d478600134a23c38be5ae7104d6ad5b27600fd265215ba8a3c6a128abe6c73299a99d9d277a63d1f077c0d8dcdf1ff064eb7cd2aac198549a9a1a48800df67cb4e9b237b0c2a6ab577059cd3b5a1ab55e8e193ad4fa1bc0da3f2204f6eddb673338e391450b17dd34a2822cf38423e091a58ebb13c9b7b41a86ee0e34b588d94807e236f1a52a465ee36fe625ededed865aeaf968d364d08dc71325eb1c2dcd5a2bc734a55aeb71d6de3121002b3b1542e9196c94758e89102b3c2108ec5bc899df345e8d3f60178cdba812b9aeee32af57de202bf2fea05f5e425a12498de79f97be595757375f96e58317043dcdfca245365951b65a1a96e253da20643ae8cfef95be48f9bc8ab249c2bd224ba19933f9827740f2375c45f5298abc35e80bcec379bf57967790a05ac7f38284b2be1ccd50835fba8a87a6463c99bcc97208340f62ea7109eaa1eb50f11464213ff2da625e15c5b33f57bfb2c92b4ba8375777639d7c19a557cac18452a5f4d479e21341d9a69da7aacbb65adee04fd9ddf67965cb608d3206411379fe79e563240464bbf68fa1686a0b8f75262ed3fb42341a5f9388af5dd4ab1abbe26ffedf1e40140e08b6af9d3e7dfa1983e79f35785d32dadb5543100e1b9c3e8920e41daead38b5288af76ac1c6efd00561b728a89d897862bac60b3bbb4fb9eea17cd661e73ce61a639d68bba33bd27d4037b83988b4fb94c3e19c73afd7fb1907affe2e1289b5257cfee694ca1de04e9c481982d82e189a128fc7033ac7bfce1bd9f9740dfa2f1c39e4bcc8a24de7427eb8df18a2ebdbba619879e81942cdbf87f21976e97b1838119da586cd332f9ed15ea0f44a399850aa949e3a0f7ccab2e372ac9f7ce93c545dd65546f8c82fb0376906b4a586b266b4c6983338ce178d46b7e882b83199e11ea4e6bbbae34df89c73d0505629cac6d5a228dc6118ad90175cf8139148c48448103a2da80c834f58d759d596e13923dcd9d9d975fa74fc45fc16e22e81db42cf790804e495adbc748e448e85e9dc4f17d78a43df0ac1f7a2a1a96b6407bf8b9e1bc78f270d8e0fcf9dc2b9e9de6de3be41674e149f7709fa16bae405a19dcef947313f3a6febb69eab86ab9f6fcde06336d1b88f9e25afb8f420a8997c5979cbfdcc8452b9f7d079e20f2e73a61b86edd7a8feff6fef4bc0e3aaaefbdf32a39979cb2c5ab0166344f09212c00db6f3278d13242f50532034c4b440284e5aa09f214953db2cf9b7b19c36498bedf49fa481c824adb3990f4c128a1d1c13db922129254030292131769001dbc2966c8d669566e6bdf7ff9d3773e5d178b45acb2c77be4f7aefdde5dc737ff7bd7bee3df7de738e4f130b055bec0d4d37044f759d7a0c76eed671c15458cd446ab25828b416b38e46bf57d9e4b22a20782c088cf04310581be94a1c6356e5cfe63c6148f6ec48b08c6b996072b88528661c03e9301319e8f821acfca26845b269201eb24e10d6634d2b3bdcbe97e41f8513c2e7ce845bfe978f0bf16c9ad9f767d29db93b8b1f47aa0279ea298598885e2e66848f283b922c57f56b9d1e525516d38f0ba5626aad29e2159ded1c49129fc5c8b041148d5f4e51b14555ccca952ba943d9498209e796d21d5a51d5a0b498d5fdfe9bd099357e55f3fc806a16f7f9d59429ae91acee9b05c9712fa9f4687dc7e7535b28de82fa6da3aa181760fbb8287b7e144b88cfd19a8e6499b30c53bc95b6975bd1e87d0296a8681d8ad48092697e3e9612bf4cf905d3989934c4dbb3d795bcdecaeb28caefd5d605b0d102a5f843fdd2464a135fb0e0fe24f8a138ac236dd32bc4cb84d9b32b44d3581d4989dfc5b9b706d1346fa57b12aca2251d09c6a5ddd9f4b3f9a172fafdfeb70c4bba99d6bc242bb116b32f3f6d4517fb7abe9532a4cfd29a549fa3d74de175010ff8298e1fdf7d571ced34655c620de98310463f1645a11685f644a3b10674bef12963a0c80adabb77ef0cb84eaa46dff5f9647ff2ceabaeba6a60345d6455296976f14edb1306bccbf66c26b7b2143f545c6eda7379266177e8d0a1fe73a1919b77aa78cf2d77b29eb9509a2c648b8c2ebdd8aaea59834ff62bb8cd1c3cb4fe1fb6d466a91c8aac5253c82e7c28dd82e2fe609aa6176b08fb309332a6b0785e1447a06410e042a9649a72fc1549cf8e848d10461fcaa2d2934a19b7230c3a79fe1b0d023e9fcf79eb6db7de70f2dd931d4f3cf1c44ba3c9c3d30c4600ef5b472c167b6770287f2a2704b8502aa7d6ce5357dad020cbe2b7b154ba2427ba0b3af1dfe584f1c75120507dde79f5a7bb4fbd6b9ac6d90bdea3c85fce494c53688550a2add8fc57a60870a154a60d9f5b6d5575afc0a26e2b46aae7b338d3b43e860ee227ec995f4787003014f7b5edfb8621183f58d6b4ec7f46978ba79a2c04146c227027e2979f0e45774c56199ceec421c077df4d1c96454d291aeddb158bc5e763b1f7c7ac22581abe97ddf3ebe811a005f3be78dfe7654b0e8f3e174f391908d8e686fafb36e2e0ab7d266832cae0342716012e942616cfa2a686be9476dbdd8863162d54110cf8af70b95c171775a5a689f97e4fbf848dbd0f4f53f1bcd80c026232fc4aad16fd6c30187e9c83521c0870f55d71b4d3947389cd0f6b7056691376e3dd138d46bf39e50c944081d82efec1a54b973e5f0255298a2a906d398724741a86f9595849582e38cf3f188bbf138259f767ddb2b5a62b18b5379f786b6ae69af1d8e30e87f3cbc954f231da2bae3bcd0ba30ead0253dc47444b08998275edba684c7e50d31ecea64934c8ba388c41c0d3b075090e14bded72cfbab6d9d5cde50000331249444154afef682b8671615934c2c1506cad8a334b0e31b9c030ade680cbbc25e8f4258448f86b94c601734364022997df6ed5ffba1a0a7d5bb4cc8bb16f7d3ef1d4d9133f5214e04f2493181d0bfc8f6390ef1d8060fa27fc6dcd17c7c3867f677edef6f32bb04dfc518ed3f0384d143e8ad7bbdaafbb57113da1be5e515505372d92826b4d405f8c3ed31e80b3f290a0a75a57aea367450f5c873555dce21ee13e5dc5e1d7c0a5a079f7d934059168b6600196d2ebbaba8a9e67cf165cf4ecc1fdccaaaa06baceab16742a775e75b5eed6f456561e8cae36e6e7571055ddb74e533d3d55a031cbe70b10cd72fbe3eabb8994f025460b9b1cbe802abd5062d59a92ea18fdc61bf178fcae29298c1702eb40a97567db96dbe2864c08ca56f2283af6418766d1d507bbc2b19d045d34741a1b20ced8871bce5eddfb6a6a54b287b73e634a281c5ef73d9a699d3ca93de0f57ad73924f15ed3e5ea1125d7f547e34a08c2d13c25f4d73934f51fe2a6f014599630cdc435f9f9153cb45d5396842f7777771f7b2b18ec21fecaedc78552b9b5f818ea4b1f3254777c5d640c985152cc90febec255f1e577de79875bc2182376e34e9ed7b6dc711b7f872c0ed882cba6bf30631055f3572f838aee3bd971f67d1e9abfedba3b0601e627f344942663dc55f08bf2d7c8b61eac916f3c0683ab8a2b75d0f6ab54a15f168f27778ba968809ea375f56ec3b0be29e4a14db6f06057a2ec2d82f035a5b3de441ec011181f02b60340cb9a8fdca9e6e6e657c74785e71a0f02e40b4979f1574927662a7078f57ecd297ca5dfd2c38964a8036b4a8fd6d6463f79e8903560de47856f24cc78c80afeb39264b5f5f6465bc85e1da57720fd79487f786693914bf35d580b273b7b16ad45211df2be9112959d622af622d142871a0a4763d743a577dae370aeec378c956eb7b839d667ad7149c2ab49d8a392849410bafc035b72699fa8aa7b43edec8466c2f4e94eabb92cd793d0f85c288de70be07938023908c05ab8d7e5717d1e6aa1d77eb1ff17dbd6af5fcf0fcee66034158fa3b52d475e6ae17976ce683ccf0e45134288d69506da39f799f21d3e7c38411a07aa3b062a0e0c5ce002e94c9ea1684f0556855a06174a85da329cafa240803cd0c252f87a74344fc0ee5d72d9b265ff5b148c9739939829f5d4d7456bb3674f650e49c1549faf29154c5370468a0d815dedbb6692075a8c90a3cf3df7dc012e908aa305694bb8240abb4e9c50bf541c1c9717977ca6545eedcd6b3b8108ec6bdf77bf65588fe02c12b9d7e63f8e0047600210c8b82898004a9c0447a04c10d8bd7b771d76d77d5fb4c4f54b962ee102a94cda9d57736a10e042696a70e6a594100249573219124237ac6c5e39c81d76095591578523306d08f035a569839e175cac08a8a2fa237fd2ef2d56fe39df1c814246800ba5426e1dce5bc121b061c306296125fe7af9f2e5c70b8e39ce1047a00410e01b1d4aa0117915a61681b6f6b6ff816b8aab56ac58119ada9279691c81d24780cf944abf8dcba28674a29fac37d3614418bc0cd0fd6455dc4819775454543827927e4d4d0d0c05f817627b399952e33f8e40d922503042893e4a3af14c57fa2bb48f53f7e9aba9a31b0f5f7a5d5d4d65a5972c15f3df242150fdda6b9e606ff0b79d9dc77e2f49e6fbe05ae0bf354de9988ce20c87111765f11fb10baf72a2e82793c2bc542af9620bacac0c4593dea3c914b64395cbc33902538940c108a5be6472c58bb05d9548f4ddd69748dc46d675eb029ec6a90443abacbc349fd0d1746d9bc312638944c24f7ce54b331c9f5634be2a9948d9ae98c9f8a3ae2963b2fe2b62f45f1708d8588c27ff70bc954a5c57575758901d1b6158f3a1d3a743bf8844227f8cfebd71034cc14c741daf6ebafaf092a6257f876de10f6e6ddf0a4bd4e7fe0b06bb6c5f3fc35132c2a19373e71e4f0c9786c771048a1d8109ff60c70b4838188467482bd8db1b7e28dcdbfb90253b36c453c203e3a537ae7c89bedfc05ccc2013f7343a855dfc9b7b42a1ade8f88ec333ab9c9b66a4b2cc0a7d1bccd1db568823c1ee3d9168bc6aa43cd9f1cac9930f8856a29ac2c6933f9b5629df5b96a8c2cab24a75a453fb789f84cdd5d5b3755ddbefd5b41de4368084143957f3f9f4163cf7d4f8d585949e66205a3a4d875757f6d3c0433f93ee003d93e3363b1fe89d5fad3474bdbefb852dff77dbde05975cf468c0eb594574c858a717f940eb80dfabadb3c3d26575a0bc0ebf57b1c3289c7e9adfbf2c5dae3668a0829939f8d30ee8e0b1b95974d07b4853a8975f56ff8578a67c542faad3540fde6cc6f93f8ec06421407d7021fc91432e15cead6c99d0d4e420c75933ab3c0df4acc2e1169c696d5235757f954f5d46615a6d6d0d3e5a7cfcea7ecc5e3ac8b116ec596d0b7895d576bc57c347edd94ff7d5d5f374a4db46e97dba07de54d38ebdbc484334a91cd5e75b063a1695434eb9280dfda1035bc7c2359fef2f70dfd302075f085fa5a9ca01a249f1ac5c0ff8c8f06455fa3c37110db7bfb691958b7c9b185fe8055b8907d0d886ba93aa49243e58fe5abfbb31e3a8acc30bfefd28333b7fda9999ba039de726ca4f7cebd5d573c14f473a4cb15859ac3ea57cf5a0ad300b6d45ddd779bd0a9a296d70785c8edbe094ad26e0594c7881ee260893967c8edb667fe4fa5bf7b6ffecb66ffcdbb737362d7a5f2d9cc575308cd93b9c6913ab16ef6c20a05ecae2555fd532f65e0878e7e93d02d3345014d19473edb2350defbc7b1985815e0f73fca6c3711dc593833a5df5ec6034f9b530fa33de0ee36f87821048d48069a1a41ca04e973ece05f5826287cf9eed42878bdb813496306386cac2289c3e56fa98155ff542f691a73b02e64d7264cf9024b840b3a7a94970104df6471d079545e1833a0e9b2f251d9eb9271e4880525e9f6f5680f1982d94b2f9f2f9948569fecf78c1ccd7d990f0a20e923aa6ecfce8243b5827457c92c74aa2479d6743a653a38e91841bab4f295f3df0dae9f7ba5b72eb4842890d700833764fe9280e8edb346afbec7c14aeabca0e0c1a569390ab256fa1b68752c5a2f79384060d8ce89efe9afef2efb67efc23ef6999bd62f577181d12662450a8fd59dbb038ba527c43b5cb163ed4b64487de218aa3ef80064868bf0e96867867f11820ddc4065af9ea9c5d4e21dd7b3c9ef30b891fcecb99beae50b02818f51d3e4afc2c5f24145a4bb6e00f873d775388bb3b5287ef159dbc8ece61f31a5996ee7619468353b636503cfd20ae8274354547375de997b2dcb6b32c51dc00db8b237b86ecee3e689fcecf35656f3a3cbfa312ecf0f676c3264eff0e7f028ec3ac23146e1d3ad4cf78705aae30a9554cb3e76f50aecdd7401edc30be282c188cbea4e8fa36a7683cde158ada6b4e9629d523ff36c94a5e2bcbd6cb765e49eaac90cd9378695018ab17f44982d0f8766faf5d46b4f7d3fbc083df4e2f0847eee80e1fb6ef45698becb02a32e1257d21076950e10def242d8f73b55cc76d1990de723aacef933a999cb775f6f41c19ce71db8b3b5a6fef8cbbb7773e7bf25303209bc68d1e87f83b875b88e2d3676d33100df973221497365300049cad9e5d0fb7066e32186aa6e6c161dc5a4b105f3352a2bd8e84f6b669d03b6da5128f85c3915b52b26b7b16c182bf9524e14108a60b0a9e51cee0f4215028d291f860a3552133f398015547f68c83f14a234f360ba1309a0db4e00b774175e5d5dcdbec308c6ad9e894e2d98c82d160ea113530e35252b964ab0f591abaa647c3e919173dd36896c583870e764f65a015459aa5102f540756bea76a66039bc165d3f360b4cb6840c748bb0e69c46ed37763e6c346c08ad7dbc246cb83f2a32c164e380d9487113598b1cfa061c4bf237b66c0f82db5ab1fef04cd2a08cffafa7a7b964d75cc845ba4fe9c3d5b70d16c97dacaa7abeba0badd46ef18a5a39907b52dcd3e6cd51f6850bab48a56dd3f0bf8e2b9a7ca56af6aadf4fed00c36809994e6f5ae469ed544a7ae5a7dfafc0fdf74f8f6bf58fa14da7c1d85b1d93f533d5318fd315e58b974f5ebeaaaf43b0f5532666a5009605d29ad86f6d86a5e7a976d5e32bcd9aa5fab3ea35960b40bf5aa28ee6fa19ee4003150a83c72bea677f634a0a69aee86601f2e7d94c48b2710584c1f297dfc884bafeba083a50e83e2a9b3a5782c16d96b3a4c105018fe685199d69aecfca4d6a37b0aa30f9d84476e0793a64979d36b3b0c0fc61775287a467d13d095eb54ddbf8ad16779690d89d6b5d091f5b0359d1950e7311aa40262f7e7f9fdf3293f7596a41ec2fd8116acab9de908cf74364c6d443cb0fca4924b0b67eac8b0d684ba51c7c4d62f0670c49a04adb3b0faf06bfa839b8d41433e2cf06ed8ea331697fb4cf9e8fd61f14d1072b96928ec891dbbaf7bbaede9992cdd70d76c7ac3a52b8538f89efa04bdf7f823c1745e29d489d761628558d15874a0dd4f78894988d28cc4fe51183d9317c9fba2b18bd6673c3ab270968e5d113ec85364ae674896ee5caf43957fae7487cacfbd570e85ccf485b7b5b5cdb724eb034bae5cf2c8f471517825e3dba85214cf315c21dcad379249e3cffbfbfb5f2f3c4e3947d3854081ad290d0d03091ffa65a760cf4cd7cee258387b6657840fb82ea6b043b416841f8b9fa8eb64d01c8e37aac770f13c6eea11784b7ceb2096227d535f726197886f03ae3ec4c7d25c8a731d0ef925a828ef2c6cae3977538940d1cc94860285ce850886b1d4215acff784225b874ac7c3f3238045e746c4ccca1fcb43c78b80dbed903ef399cfddf3e0831bbf3e5e1aa59a4f14cd19a228ff27664bea993a5afbb049e5be68343ae221e23379f85d292250f442a9141b652aeb44a35428416f9dca32cba12cd8c67379bdfeaaeeee93dc9a78de06172f41f020334dd059ec44d85d104c1cb3bc98954760510825a5babac19d885f7e3ab36dba3c9a86d7b29811d8b76fdf12433242cb9b96f3917f4e43e240f76dd84ff23d160c95de1f4cd3faeb783cbe9f85f16bf92250f06b4a9e405da3dcdfb7d194244ff93613af793121804d0ed74b9274b395b070c68dffce46405acbc220909e88c5e2977381c410e1d7829f29e12c484f831e9d7ba8d3eae2cdc511287404dadbdbefea12ba7eb8b289bb4acfd75650172fc03e5a7bf60875dd17a1aa5b9f2f1d0f2b5f04e88c4541fc4418c4547b7b1fc308f3a069a66e9ce9512f3b2554c19683e57f37a23e0123946bba60018198a5cd0d622a799b20c9cf9aa6f120595658b4283ee7e597032b4cb31f0bcbe26bb0ef7049d417785f2ecddfc39a3419eb34e37132003bdf29999f74b82ef8515fdfd156e40bcba2110e86626b71207213a69127c0cbea75d1f8450fea813f7388c905866935075ce62def74c78ee1cc502bac52771a86f9598f4358deadfa5f5743a16f8b967931b6f4cdd79de6859d3df12305013067625211d8d9beb35a31950f63f1fea295cd5c200d05366646570223445b0fc0b8f1bf0c958e87972f02053353a2b346350ee7e56f05833de49e414cc5b6c39a76250e939a6a85fce1ae9ef02ff142dbdbb7c9a19b0a3717ba2e9dd7d919eec281d51d15b2f172f0f22bfe99c2b50af1b29820f95209e3fbb9346547cd7b8c54d79be1482c407402afbe7c457fc278aebe2ee63e74c8ea071f56c0e59ed5db1f7f3b128989e4dbe99eeeeee8bfaa8a31cb13f31eec1622307caabd03f71a155622d6138a6f4d0bd420067d31186af5ad15cdc4e75d6ee51235958a517dcaf7f52afd9aa38315f7b6ef5d259a2239fddb0f9f60074bbfd6e3af217c5c3d8a5d7687f1b1fce3f8a99c9d93acbce367c46231192e66644ad145ee4cc6f1a37ec1f7ca2b7f5ceb741ea4412cb531eb7bc6418e6719230205b1a6448d8eb1d35976dcd22f821894ade4d1412f457b13ce1b59474820517d2d77e06f0d53a81332b6e94ef4445f0b4388e5a3d9e78cd53864eb6b76beb6b6544fcf9affa671dbc993da035eaf779d4312ef15dcee5396286f810508ab2f1e7bfb07b305a728b9ae3f1a574238896e9e12faeb2c23b50ec2efe7369d63c762b051168411590f1d84829b8a2f7777771fe30289d029dddf33cf3c733e36345c0c815483f6fe3e174823b7b5690abf9c688144a5861389999d9dc7fba2e1de2fe2306e532c1efbcdcc1af75cd896dc5fe953578fccd99914be57ded49370b8d89b8a54d903ce71f8503b438ddf8d19019a7c14c21fd98ccb67c78dac35e7da6e233b754ac6461cf14e36c1980d333261c2ea938f26d9a163f6e5583a32ed936d1b8fe8cfab166cf715b6db02983ecab59547e1cc9e1dd1211a005f849dbad5cce619a3cfaf85f18e4d743b40207def276d3ff14f345d4e6f7cef0bbef70e7c8469ed0f4c3db5e4988c1a0bae448be517ce81ce58cae469d3ed5e10332534ba6039bd1706e3f2c180d7bb2a659c7ad2eb8b3704b0f30e31fe60bfb471ce1c324bc27e2df4ee09e4008d2c722bb2f51fef9e8efcaf174ed8280573ae968f66acfb9d6382283f4ab320f831da5159a92c161ccaa253a9e469a2055b743b84190f7b302b7abbb2b272b164998baa67d43d1a8b1b2f54c3b19a988cdee3f138af8e2f58707fd214d75059e4995687ca1046582b44c3b833650aabb9e335d656a577c50c49c50ebb2fa0663fbca1e98660e9d5b0786b3467b6605bc4d77efdab3b5beaebddf836ed9912ad23e39bef803604fecc54f84d53f6b35ae63a5464e174a5f56b0c744f6d80893272b488bcb0bfe95d87bea3a7d2ab5e474a1ed8ae644e236d67902c7fa6cc037ea261f73769878c149eee6b26def124f1485e0688a7f13a9e64fc4fdbb5d0a4f3508632b3f9a4990c194ecd0e1bee3e1f4d004e5a3b7b54c5f2e279c01827c5e5e6cb35c649f972d3305afc3abed16e31e08619d27c08a639c5c06b39f108ad0a2caa6be4e4113ed9d2fd0359d867d6f6d39a93b4f344d26ca49d689eed509130633325b2e44eda9716f40d64a19fe2c81b01695ba88f50ce720639d89f17697aaa61c099f2a50d2ba73d0e503859aa0fc0603378bcdbafbb6d43d469c79d19ad4ba65cca0bdf5aabce2e2bbfe349561e846163c6ab4007d1b079004dd23c31c3cdb98e2759bae9bc16ccee3b34b0fd1b9d1d379a29d9e67158b661aff96802747aa906fd10444b42f62f133fc8a65c3e3af9c2180d7e2d4d043038fe675996ffb6346b57bcb542b7eb0b852377510d309bb16742b67f2d5160e68c72fc8c1915f49d63a7ed9d70e64823d4596ea7f5f62004689d5a55eca070676797bdc6148f1d7caf2faebe14b12c6cb2baa92f21d6c3dfdb650e413ce196dcdbb3f383a760573846962a8468e8f40e6cf4189859eb15e6b677ba4f1fc3e6aaa734b7484e3c050bebd3a01984e349f5482c125c9fe993e05b6b2bc2ff6d705915db1396f8f2d1b880b56e41c05af73c87a6fe433c1c3a89199d20cbc2dd66cc149c92f810d1a69f25c99be3a9e41f2545c7610778eb449d104c7f05f32b18f5dd581081ef9b95984d3f5ae5d76f1a4b3e9e962370ae086cdfbe5d4ea552f72e59b2e4d8b9d2e2f92701018c18882a1c33da4e33731d3fae47bf6c976a59f5a225458772a8c838cb0c4e05120ea4aa537a83513aeaf1d2312b8699c842a47b2bd71924cbcbae0bb1018aee6957318e907c87850f5c27c9f1a46158df942b2af6a44c0bc76632bf111d4fb284d3774d2f0a4e5ff9bc648e40d1218003b2cfe380ec727e40b6709a8ed67eac54f23159b41eed0dc76e21cec439735c6a67e70b38eb28382b5c9f4824faff17b3864f92e166da95e710ccdf4b72f5fda954f7698cce779a8278be249abdb2c3777b2219ea9045618b20ba76e2ece3531592707dbf29de095af0082ddd8d5d8474c6f1559c5fd94a820af95f1544b1b75276dc90bdeb16b39b03c8331ff2ec5949b2da7a7ba32db4564ef41da2f8e879b5d14f1e9ed9642838ca02deee4d59c2fb35a7f0155a23677542de4791f78d90e67f707059553774a7badff4389c2bfb0d63a5db2d6e8ef5596b5c92f06a127e46252125a0bc87c0c30e996431ce755218ce616ea473988269ac713bc4e5ddc1c89ec269c9cc9a4a2131c479292c0470f66316ce7e0c566914168b53cecdcfda7fd6988aa44e5e7bedb5b1292f9c1758900840700cf2d5c698a4f397ff67516c4e5b9b956261435d87f28b964b3bf739d72f1c8e263830703231cb1b588ec81736141fd31dce674ad3dd02055cbea655ccb72ce73d3857724701b339e5aced69dfb3d8213abe10ea0ddd78fdf5d78feb80e69433cd0b9c1604304be9a9af8bd6d2c1fc6961a0080b2dca35a522c4b9e858869fa50b2dcbf15330cedd08e4b4deb2a665bf68bab2e92acdabfd1346adf61a464e12fec8111068ebb7240abb4e9c50bfc4e1183d027ca6347aacca26a5dbed9e03bdf93ef4b73305c1b83a12e97ba66c2a3f868aeedbbfef8e94957a4e366473e9d2a56f8c212b4fca11e0080c8100174a430053aec15843fa2084d18f31feaf05063db0e7d700dd74bc5cf118a9debb76edf26256f92560f433e0b6bba9a969c4b5839168f2788e403923c0d577e5dcfa597547872ae20cc55a08a367330209b1d677b940ca0229cfed8a152b429148e43e1306f080d59fc1d2c387f224e3411c018ec0281128b8c3b3a3e49b279b40046876a4289e8dd88cf9a1ac15929e54cadc8759c04726b0a8522615ba68ee45be5b6fb9f5abd75c73cdba52aee864d60d63a30eecf67c6732cbe0b40b1b01aebe2becf69974ee6843832c8bdf86405a9253184e7973cfa939988cf828cb0e07dc9d34e04c4cecf4e9d30575527e44e60b2001ceffb442286d2b0056380bd38400174ad3047ca115abaaee15385dd78a91eaf98c37d3b43e860ee227ec995f478700a942f7ecd97321fcfa74937a6f74b9782a8e00478010e06b4afc3db0118846fb76c562719c4bb27ecc20812aef5e76cfafa34700185aa2435c805d8cdcb3eae861e329390236025c28f117610001f4a5b4dbee461c046fa1400cf8af70b95c170f24e037a346e0b9f6e77e9410135f1d75069e9023c011b011e04289bf086721108dc6374075b796221c0e47f3590978c088085c7cf1c58e0ab1820e1ff31f478023300604f8eebb3180554e49b196b45955553feabca89cea3d5175851338513085eb278a1ea7c311281704f84ca95c5a7a1cf5846022efaa2f8c236bd967712beed596647da0ec81e0007004c688009f298d11b0724a4e0bf6a8efc3e554e789a82b0ed0ce039ddefebefeff9a087a9c0647a09c10e05bc2cba9b5795d271d01d8c3fbb46008bf8523c017aebaeaaae8a417c80be0089418027ca654620dcaab333d08ec6cdf59ed313c5e499616342f69fec6f470c14be508143f027c4da9f8db90d7609a11807fa52b3441fb8a61189167f73ffba969668717cf11286a04b8faaea89b8f333f9d083cddfe74ad4b705d82f35c75a9fed46ea8eb4e4e273fbc6c8e402920c0d577a5d08abc0ed38280222a0f2513c9fb962f5fbe675a18e08572044a10013e532ac146e5559a5c04b66fdf2e5757575f8152fccdcdcdfc80ece4c2cda99719027ca654660dceab7bee08549d57f5311c8c754220716bd6e70e27a7c011188400dfe830080efec011181502d5d8d4c06748a3828a27e2088c0d012e94c686174f5de608b4b7b73b044ba8c23a12774951e6ef02affee420c085d2e4e0caa99628025d5d5d64e5a2afb5b595abbe4bb48d79b5a617012e94a617ffb22cbda1a1419933678eabb959b43b76728ac7c2b2aff0e0aad35f36489436100834d6d478e766878ff79ecaf3fbfdcb180fec1e1b191aea504e2edd952b571a922075353636cecc8d63cf43e565f11375256cc0ef42e23d1f4d0a27acf2d5235f7a1ec6112804040a4628d10786856372256d7744437d68d3059aeed3575307361ebef4baba9aca4aefe2e9e2bd90ca15c50d526f28b4abb3f358df9baff83202a7450cf6f61eeb3e71f4e6702231b3b3f3785f34dcfbc5fefefea6583cf69b9935eeb98aaeefaff4a9ab05a145ec4f26da92fda98f4e44bda2d1c4c5a954f2e72d701f957ddf97487c2e6ef4df93af0cac27bde1743a6fb355797912c493c93b86ca9b27f9b8839249611e787fb105bce72792c66a385ee87d26c1963f3f0fe5084c3d02052394fa92c9152fbef8ab6422d1771b3a84db545531eb029ec6a98444abacbc349fd0d1746d9bc31263706fed27bef2a5198e4f2b1a5f954ca476501acd5fbd4cd7949ee1d2e7c6899855b0d1ee78f2e7d29bce67cb5a6f46172e5c4afde8a77a7b7b89170a1305ebad9e507c6ba8abeb0d53108e04c3d175a15068476cd107e6dcd1dd7f38160e5f79ba37fa10a51524f921cd654e88b1d3dedeee97c1c191f5f06c987d6f56f8fe4d14ad483eac962e5dfabc699a3f80bdda3fdbb061c359df90e5f43e922fdf448705835d2f0d47d3c655766c1caa1e94d7edafbdc04c25d60f4787c77104a61281b33ea8a92c3cbbac7030f8383a070c98c30f857b7b1fb264c786784a78203bcda4df27fa7e93b18c3d5014cd7204cbb8b92714da8af584e3f0cc2ae7a619483cc48d59a16f9325e13b141d0976ef8944e3554324cd1bac9c3cf9806825aac79b3f2fd1690cb4dada529620befa759fe7e3c4862750d7e872585fce6669ce6ca1829eb55fffeace96fa7a370606999992ed11576569759f6fb5cfa7b7689ada5157a7d7b070bad2e041d5f556f8363aa0698a252e5ce8a40106a5f5e94a663b770bcd32c86f147e67ee2d23e54c9972b3a6eb94de0a78b555944283aa4f072f1ffde8f57ff8af978f5cb078f1e2f7feb075c3c5286307d1f5eaca7eca2b60cfb89ddeebdde4f3a92decdeebf5ae032f1d1b4471d0b7879938eaa01dd035b587d49ade9a9ab9363de4a7f275d0b509e21ff1902e4fcb3bb811a171d0516fe2533452df847376db30ac0295248511bd2abf7213d1938de83da6205e423ce6c78795caaf1c812942001d2c46aad3ff870e4152554f0ff1223435391455b16656791ae8590d042ed5757593aaa9fbab7cea320ad36a6b6bf061a2c351f763f6d231b3aaaa41d5b46d01afb2da8ef76af8c83dfbe9beba7a9e8e74e85cb4569feed944618a1eb8ce8b344493ca517dbe65a0838f5fdd34afba5aa734f4874e6d1d0bd77cbebfc07d4f8b2048085fa5a90a3a3bad95e259b91ef091e1c9aaf4796e221a188d36b272916f13e34b415ee20134b6a1ee1d687291f860f96bfdee46c205587478c1bf1f6566e717eaeb1538e2db810e6813e527bef5eaeab9e0a7231da658ac2c569f42b9a6f9f4801d4bf0a06e8429e30d9542e7aca1534dd78bc215afb7c5ef75b7b0fb866ad75cc557bdd0ab79b65198cbaeb71bb767de658fa6ed270c294cf369377967ceacacaf17147aa6f76b01ee07bd7759ef20b51930b5e9a571562ce2510fe88bedfc787f74d5b363cf9e47667c585d646dfef14fe73efef8e332de9f559417b3e1560d3c57fb9485943e538e4d0f6b4e7a767d112922682ea5239eab7c6efb1df780c7864c38f14b75517d55cbd8bb44df09bd7bd9b46cde10367bb6e0b2e90143861b7d4714e6f3cd0ab0bae981c0625d73b7120f149e8b0fa5e77f1c83a97c07068dd6f0624ef34f7c0b1ff226156abc3ff2c5d477ba63c74875256006130a45d64623eb9afb52d6cfc5da5ad50af79e0c87c37785c3912bf1c9fbffe6d4a94e4b767fd5b4acf75025c40a3775561fa1fb58fc9d506d6df493943e618a6bcec788d132fb9faaab886c8e46a24daaa8863cce5a38b3b3820b1644efff7d575798f2d93fa9e215840b141e79fffb7f84307b541d9d31e351943b7fe1c2c8ddd1ba7a77c210be49a35fc9342b892787a3bab23f253c96a13270915cae2d8c2fa76c3e8299610b785ee191c4cf20dc02813ebb4e92ebfa6852fc86adae12a5675c4ef3a16038fcddecfc9edee06fab1c8ebf829a6bade050ee38168fbe9d517f357a5dc29648242a9a96f891a956830e5476981be213b325a1b2b272b143348faf87fa8c254717e00ba1ada85e92e4f80c85b3d13e4b638799c966d46f05664aab2bfafb3fea70c8cbb3e345cbbcac33d8f716858583e1c7436e77b437a4eea2d90a4d8fae3b2ef465a7cfbd97656b038559c78ec548a5d8de04c1694af5986d6c93ace4b5887f79d9b2635dbf7574f7ced62bd4aa9aaa754f3ef9d473a2ec489a9670a76524d7dfd31bfbb54d036a474b94b760c061f5c5636fff60b680d954fa47ed1eef17eec4006513789ee5765a6f67a28edcd11d3e6cdf8bd216d961559866e24fa1badc6287b5b71b997403175ab3832a3478e890d54f81982cbec9229d962b4c3325d3ecf91bd43f48e149cb755412c530f1d05b53111b0b3e8cee58ae8aa29c3f96f43c6df921506042c9f245d01151ef7438ecb99b9ac3dd1da9c3a785d19dbe5ad737af9165e96e97613438331d06a58170b03f30537474d333fd5296db5659a43f52413879527b803a238724de6bba5c3d223afda371258491a6794ae8afebee3e68af1fb4b559a93485f47fd3e1f91d956087677702873f9144f8110ab70e1dea673ce4fbf0b3e931be282c188cbe8405fc6d4ed178bc2b14b5d79c723b3d3baf247556c8e649ea38587e7436b4e5aaf1edde5ebbeed1de4fef23e19c29ebacce2c135e501751aaf86422d1ff5c40aaf8d2598cd9d5130408261b17ac8b449960020c76db626de92db4c15ba4f245ba8dc16064cf603aa250e5f3ac64619e1327bee491136b282db012d623b32df43309b2ef29086212ef1ede3ea8c324c1f2b7b763fc904a3c8641c32d29d9b59de23003b2fa53277c9ffef8c78f9829f3a782247cfa732be7071c9275af50e1bd6ca3aa1873e6882e7a0fcf7747d6d240c190e4ef749f70df9cce8f771caa3ac94ccda3811704f56b464a4cb038e2d1beb7ac7ad192506fe944282e6da630680b6c95eefa2c814efc8063ff7b6b447b1309548910c0926d28b63f19ea581b89368767ccf83aa36f3952b69a949ef3e1c3d24dd4559284073d1ecf0513458fd3294104f05516ccf41c2a85b4fa6ef66c17a9256604d44bb3550d8cd76cd50a85916aa3055f2ba970bc9a3d43b2d5735a861ec5cff2f9022c3f5d99ba440dccb85455dd1dd96a9cec74a426443c82d238115f67ee3d1dec9ecac0eb2192ca857811500756bea76a660353b964d3f3f87c3791da8d681043d879a831b58a1b6a1aa67621d515a9ab28dda0fc288b85134e03e5417d078ab65d43a8c276303528e3b550ae845136b676fd6c4c148ba9e5282c9d4e3d40ead2ea79d53a54960708b7d9c84faa3e84f790ca93a97659fdd2ef0954b2a4e254951da4b2a5f623d520b517da649d9e090be8ca75d9f7d4669436ada23da35ea47c19b52da95c2d527741ad8b762455a9baedc28b2fdff857cb2f7b5e552fb2df03528f515c5555d5225c7bb0457b31a98c997a8d784dbfe3c4a7b283eaa643ed9c51c35a7ea803290da9f54825c854dbac3cbab234acde03fc00af3358092e526f13564cb57be6fb224c94d67cf8309a13755514f7b7c0f3abf856067d8f13459fd3299cfe7cbc6d513802c95e3f38f38179321f33098f81751d742e5eafd24295a5ce963e48ea60e8ca0401dde3af83adcb507e5a7ba0700aa30f9f84073a979e2a7bfd466b65028a3a1ceaec289e014a6b3894973abcec4e4bd5fdab283c3b2fad219dfde1072e65346afdfe46767f9edf3f9ff2d35a113a095ab73ad0925e3f3aabd3639d05f1c0f2d3fa02eb74edb526d48d3ac8a13a33569f52bca2bd06d6a3f2d52f3b3ebb6df3a5cd0dcbce9b1b97fbccd2eedebd5bddd3b6e72f9f6e7b7a66761a2a9b046976d878efc75a0f56ce48f9468a6774c67b75bbdd9fa0f71e7f2498ce1b2f1d9eaff885cf506d583456c2d3da2a5bdf82a173fa4761a898a560d7d37dd1d845eb336a0c16ced2b12bc2a9f31a58bba0039c870f1f4e100d966622ae43953f11b4f3d1a07a1c820a315f1c0f9b1e04f6eddb779d2449973535359dad9a9c1e960aa2547c1b558ae23986ab0b5ff31bc9a4f1e7388ff67a4130c7992808040a6c4d69684c4870d02f3b057bc6da0a5b4bb1a35978765aba47f88040a267eac8874a4bf1e3fd4d06cde178e102693874a6270e0269170ed9daeb61d3c34161968a6fe314268c990d40e25c6c4e79092ac63b0b935bced57420503433a5a1c0819d959b04c358ea10ade77b4291ad43a5e3e1f911c0a273236266e58fe5a1e345c0e7f339ef7fe0fe471fb8ff01fb2cd678e994623ecc926ab14be73f701d386f8621e33e6c64b92f1a8d0e7b20b814f1e0751a8c40d10ba5c1d5e14f63458046a95082de3ad67c3cfdf00840532c62fdc4138fc762c3a72cd758f112d4bc32bbf6d083ecc4f35d104cc7b3c3f97d7921501442894ea2bb13f1cb4f67b64d8fd44464a7ceab79b71e3f7e3c4eaa34b2598717fd4f60d566ef54abd646e295c79726026d6d6d5fc41ecc70f395cd1b4bb386e3af150e74df86bd29df6314f04dfec134adbf8ec7e3fb5918bf962f0205bfa6442668e4febe8da6247946d34cf9ecd4651bda1c0d0d9e8623702e08ecd9b3e78f52a9d4f797342dd9742e744a37afb496d50d02e989582c7e3917480c117e2df899124cf1f434e8d1b9873aadae919a8becd459e1e0c948248ebd0f584ecdecb6c355c456ef372391d88523d1e0f11c81734160efdebd8b4459bcf154d7a92fc0cdc5c021d873a1594a79a12e5e80f5247bdd08eaba2f4283b1be94eac7eb72ee08148ca33238d451d4dedec7b06be9a069a66e9ce9512f3b2554c19683e57f37a23e51e357d774c102025519f6e15a24237583e6346fe895d5a4d417ff85c721acb4604093cead92b9164b72bc88b310dfda802da838188b5cff6aefd0aba979afded777b415222b2c8b4638188a0d8cda8836ff7104c683c0ae5dbbbc2e974bc7fbbb3299483ecc05527e143133ba126344445a0fc0b8f1bfe44fc543cb19818251dfe5b3e3c64cff789cd2ffedee8dbdcc1a2a16fafb2f626ff8fc7761d72c7eead4712cd43f6f0bac21ecd4b17c743ddb0e9ed2901dcfef390263450067921adc1ef7d3c964d2eceeeefe87abaebaaa63ac34ca253dcc0c2dc20ce99fa1b598508144ebc6745e8faecc27db783125b352e463eabd190793a469192fade1f291b5777256c9e8e7963b5cde528e2b889912350aac290cb2e3a6aaffeaa74d09b0901094ade451ba670d4136ca547df3966a5db9362e39e3d8c27337c5919d3a2915b5edd4d90dadc20874d68fec8fa9d8849ab183174ddbc1f3e735ff9f958ddf7204f222f064fb937ebfe0ff28220fc142dd5d575f7d7567de843c700001d3147e198b45ff7d2060826ec83924cc401ec437bd190eb7f61ba6f1753887bcfa749ff311b7643e46beb8465b94ef9537f5249c27f68afd1742836340e312457f4207ef07faa0d1d21a2a9de60dac7208a91a21e908a2ef33e7d4e9e7f9e29529562ef28587ca5bf2e1847321fca5cdf4a7edbb65db718339a19e7cb6dbc81d05992bc9b691966d178eea44f1ac6e5853b2edea9129a15c3b782c0dbf16c6bb500ced808e41dcd7b6efdf314bba86ee8b81e752e7117d4807a4467a9d1c6e3d5a46303f351c1e448be517ce81ce506564f74da03ff0fe64973b54de520f2f18f51dbc755e188ccb07035eefaa9471ea49af2fde10c0ce3be89efdc17e6923595a46e30dfcbaba7e1f867986238ac3fa3c0bb4a2d1fb684da9daaf2df37a2bafa3f04aaf0abf49742ffae91e2e1e169d4a254f93097fd89ddb61cfa818017ee5088c12811d3b76782cd3fa697373f3d3e824266c043dcae279b2211018ca39e4704e13731d2c6693a6c3f91020a73660a6441ba9603f13f637c951a3d643fd09f51fb05dd99a71347920bb3ff1c22d0bd277904345bc270e7254e9f72aeb547fcd422a835ca054fbaa1761a0fc66ae7b99e1e866f35792f785267527ca60e548f542630e6bc473a4fc3cbe7c67557bdbf77e9a6649fc1d28ac77802cc60fe71c32ad8d493b53248d49da89e6900e16ed99125965a7594d0bfa0bd2c4509ba71d4a7a6820222a9ade5a13f0d88e1f3d590e15d9bb41653247932873078533abf04c63939d86cd9446a2cbe897e2b520d694b2a5fd54d97143630eb28397cd03bfe7080c87809934ffaba7a7e7d8706978dcd423001109e79091bba864cc66f6d3d5f6c1250a5849b67f397ec68c0af403161c8b928345d2a1653b584ce7201f6a99b5e970676797bd4b381e3bf85e5f5c7d2962af79dfd49710eb3153bacc218827dc927b7ba62cfb2242331349469fc4aedf0fbb24c176ced8dbfb7610824ef8144ef3532251106d9f68d9f9e0cc6b58ba83d296d843c109a512c39757a7c41020b50aac35ec7efdf5d7df5762552b8deaa07d68913cc739e440ddd6434ed90f19a789e460b1821c2c4662d7e14ce4bc6c078b94ce165a9a2aacc72096da1eb39da8ee342f7ce99815a31d7a48f296d3617dff143c1bdb7473fe45835d2fc17fd6fc78fceddfb07392d9345972872c26d97de63a2cdd9cb425f558306b4a25852aaf4cc922d0d2d2222612896bd6af5fcf67da05d4cab4f683ceacd1a7797ec8d812b1455c348c3b0d53bcb5b2b2f2128a0fe8eaed146f89a2b7b75ffc823ba9749982782dad2f23fefc684afc2ead65630f78e3664d79387b6d1aeac1a7686f78cc745c43eb489295fc40cce7fb93be94f898ae41758835a30bfcfe002b7fe02a3bee86ebe281dd7f8ca6dfabad63ebe6e184f0b9ec72474577a080d2ba49ef5429ad3af1da4c20028aa2cc8ac5626f4f20c9a2278599d2f730dafdf7254b96fcaae82bc32b302108601235c857db84100591c9a23b51fc4d061d0c0ef88f23901f014dab988f8fe21ff3c7966f28ecdafd1384920c6c26e55065f9225bbc35c7fb302933e7c9a25bc84873a154c8ad338dbcc1cfd28596e5f82958e06e0472da61f9f2e5870459b8606fdbdefbb860ca01873f7204ce1101aebe3b47004b313bfc00cd9165691f3adc9982605c1d89f43d538af53cd73a418db71423592526c59ebfb6e9daee73a5c7f37304380274d294ff38025908600de983b22c3f9b1648424f34daff5c5634bfcd42000722c93fd7bb9aa87d8f0cb26645f15b8e0047609c0870a1344ee04a2d1ba9a1344d598b55120824a1365d3febbbe874e3a556d789accfd2a54b5fecb3fa569385f0b6fd6ddfdcbd7bf7206faa135916a7c511280704b8faae1c5a79843ad2ec08826823e4d287b292f6a452c6ed08b30ff86585f3db2110b8f5d65b3f02d5a7f6ca2bafbcf4eb5ffffae410c978f03008e07debc06ecf778649c2a34a1c012e944abc8147aa1e6d689065f1dbd87cba24276d174e73fc2e278c3f8e80802c3b1c814065f5e9d3a74e9aa631293bb24660a1a8a36145bc1542695b515782337f4e0870a1744ef0954e665575afc012632b46aae7b35a99a6f53174103f61cffc3a3a047ed6feb34697e8da90ec4fb670df4aa3c38ca7e2083004f89a1243a2ccafd168dfae582c3e1f6b483f665040a5772fbbe7d7d123f0a74d7f7a443085079d4ee77b469f8ba7e408700408012e94f87b308000041276dbc56ec439c0160ac4ace90a2ce05f3c9080df8c1a01cc30e11159bc62d41978428e0047c046800b25fe229c8540341adf00d5dd5a8a70381ccd6725e001232200a114e23b1747848927e0089c8500b7127e16243c801040a7ba5955553f6e177144c68e0076347aa18790c79e93e7e0089437027ca654deed3f6ced2198be80042f0c9b8847e645c0adba17605de9cdbc913c9023c0111812013e531a121a1e01f513f99e7998233136049e697fe612a7e5f47577773f3db69c3c35478023c0b784f3778023308108c0a2439dcbedfa5ad3954d374d20594e8a23503608f09952d93435afe86422b065cb16e7ecd9b32f75ba9d0b52c9d45726b32c4e9b2350ca08f0995229b72eafdb9420b073e74e45d5d5ff342ce3e1a3c2d1ff59d5b4aa6f4a0ae68570044a10012e944ab0517995a60e817dedfbeec186865d587e3b0fc6599f9fba9279491c81d24480abef4ab35d79ad261981eddbb7cb5555558d3820fb9e254b97bc09a1f487492e9293e7089405027ca65416cdcc2b3991086c6ddfea9e25ccfa5b53305f5ad6b4ec1713499bd3e208943b027ca654ee6f00afff9811b8c0bae04a6492963573813466f078068ec00808f0c3b32300c4a33902d908405d47da85ae6432d99a1dceef39021c818941800ba589c191532923042449ba0e2e29a26554655e558ec09421f0ff019abe7806d6ce8cc00000000049454e44ae426082\n\nNote that the diagram also shows a vfile being obtained from the system.  This is not actually a requirement, as the vfile can equally well be one constructed by client code.  However, it is the normal case."],["paragraph","To perform deserialization, client code first requests a stream from the system, then constructs a processor which will be passed to the stream with each event produced.  It then carries out the run, using the stream callbacks.  To do this, the client will ask the system to initialize and eventually to finalize the stream, through the callbacks.  The client will also invoke callbacks on the stream as it produces events.  The below diagram shows the sequence of interactions and responsibilities."],["paragraph","\n\nDiagram 2 \n\nNote that the diagram also shows a vfile being obtained from the system.  This is not actually a requirement, as the vfile can equally well be one constructed by client code.  However, it is the normal case."],["header",["link","29769590","2.6.1."," ","Processors"]],["header",["link","57e70045","2.6.2."," ","Processes"]],["header",["link","e6fab0b0","2.6.3."," ","Streams"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6."," ",["link","3f34774e","C library"]," ∙ ","Streaming model"]]},"49ddff38":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_bool_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_bool_type_make "]]},"2a70fb79":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_let_is_next)(struct modern_processor *processor, void *processor_state, void *stream_state, uint64_t n_items);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_let_is_next"]]},"63aaa17d":{"title":"C library ∙ Hashing | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_hash     uint64_t a;    uint64_t b;;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","729bfa8a","Hashing"]],["modern_hash"]]},"5a57647e":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_int16 = 1251"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_int16 = 1251"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_int16"]]},"f5b438cc":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_int8 = 1344"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_int8 = 1344"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_int8"]]},"b5d9a0cf":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_apply_left_set)(modern_library *library, void *value, void *left);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_apply_left_set "]]},"bfdf36e8":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_non_numeric_float)(void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_non_numeric_float"]]},"38c69090":{"title":"C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_deserialize_input_stream(modern_library *library, modern_context *context, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","126a6c7a","Deserialization"]],["moden_deserialize_input_stream"]]},"f493d468":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat32_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat32_type_make "]]},"28af9534":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_float32 = 168"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_float32 = 168"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_float32"]]},"7b84405f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","int(*modern_node_mutable_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","48d4fe32","General"]],["modern_node_mutable_get"]]},"748cf53f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_int8 = 10282"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_int8 = 10282"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_int8"]]},"4ed2c6bf":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_float32 = 1200"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_float32 = 1200"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_float32"]]},"51beee50":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_float32 = 137"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_float32 = 137"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_float32"]]},"43284c40":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint8_t *(*modern_node_utf8_data_piece_get)(modern_library *library, void *value, size_t offset, size_t bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_utf8_data_piece_get"]]},"50538e22":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat32_nat16 = 10287"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat32_nat16 = 10287"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat32_nat16"]]},"30259ef0":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arctangent_float32 = 928"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arctangent_float32 = 928"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arctangent_float32"]]},"126a1964":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_maybe_just_make)(modern_library *library, void *type, void *content_value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_just_make "]]},"d3fcbe83":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_int16 = 1537"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e nat8 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_int16 = 1537"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_int16"]]},"fe3451ec":{"title":"Builtin identifiers ∙ Logic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","or_bool = 64"],["paragraph","\nValue type (abstract notation)\nbool -\u003e bool -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_or_bool = 64"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.2."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f3a2e7e0","Logic"]],["or_bool"]]},"bb4c38b8":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float64_nat32 = 1325"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float64_nat32 = 1325"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float64_nat32"]]},"abb07080":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_sine_float32 = 992"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_sine_float32 = 992"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_sine_float32"]]},"66905640":{"title":"Builtin identifiers ∙ Sigma value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_builtin_identifier_get_sigma_successor = 2016"],["header","Semantics"],["header","Synopsis"],["paragraph","get_sigma_successor = 2016"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (b : a -\u003e universe 0)-\u003e sigma a b -\u003e b"],["paragraph","\n\nValue type (detailed notation)"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.12."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","87ffb088","Sigma value"]],["get_sigma_successor"]]},"f996ad1b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nint32_t (*modern_node_representation_int32_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int32_get "]]},"85f6b463":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_tangent_float32 = 1056"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_tangent_float32 = 1056"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_tangent_float32"]]},"5230ab23":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_function_type_parameter_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_function_type_parameter_get"]]},"51cd2052":{"title":"2.5.2.3.3. C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header",["link","4d47e4b3","modern_node_lambda_make"]],["header",["link","3cd7b0ed","modern_node_apply_make"]],["header",["link","de1bdb8b","modern_node_type_family_make"]],["header",["link","ce6e6fb3","modern_node_let_make"]],["header",["link","6f36d4d8","modern_node_backreference_make"]],["header",["link","9bce70e2","modern_node_builtin_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ","Combinators"]]},"3884dabf":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_maybe_type_make)(modern_library *library, void *content_type);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_type_make "]]},"e0a0e51f":{"title":"1.8.4. Semantics ∙ Values and types ∙ Natural numbers | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.4."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Natural numbers"]]},"876c25a7":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_buffer_index)(void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_buffer_index"]]},"9c18d936":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_int32 = 1602"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e int32 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_int32 = 1602"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_int32"]]},"998d92fb":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","typedef void modern_context;"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_context"]]},"8f1d32a0":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cosine_float64 = 801"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cosine_float64 = 801"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["cosine_float64"]]},"badbedf9":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_immutable)(void *client_state, modern *node);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_immutable"]]},"73da3d4a":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the system | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nsize_tmodern_vfile_memory_allocating_bytes_get(modern_library *library, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","42ce4736","Memory managed by the system"]],["modern_vfile_memory_allocating_bytes_get"]]},"5c9440ea":{"title":"2.5.2.2.2. C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header",["link","463219aa","modern_node_maybe_just_content_get"]],["header",["link","98ec6036","modern_node_int8_get"]],["header",["link","5fc489b9","modern_node_int16_get"]],["header",["link","dfae4300","modern_node_int32_get"]],["header",["link","7990d169","modern_node_int64_get"]],["header",["link","5d1aeba0","modern_node_nat8_get"]],["header",["link","f6754e5f","modern_node_nat16_get"]],["header",["link","c367986d","modern_node_nat32_get"]],["header",["link","8efd7d21","modern_node_nat64_get"]],["header",["link","641677d0","modern_node_float32_get"]],["header",["link","9af249c4","modern_node_float64_get"]],["header",["link","c0f09e47","modern_node_utf8_bytes_get"]],["header",["link","43284c40","modern_node_utf8_data_piece_get"]],["header",["link","b0c7896d","modern_node_blob_bytes_get"]],["header",["link","db40e7e1","modern_node_blob_data_piece_get"]],["header",["link","c4e051f7","modern_node_sigma_field_value_get"]],["header",["link","3dcd5ada","modern_node_sigma_successor_get"]],["header",["link","3be7b8d7","modern_node_name_value_hash_get"]],["header",["link","14dfa666","modern_node_named_value_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ","Values"]]},"8a29697a":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_apply_right_set)(modern_library *library, void *value, void *right);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_apply_right_set"]]},"f58c5097":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_float64 = 201"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_float64 = 201"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_float64"]]},"b52f80c3":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_apply = 45"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_apply"]]},"de7edd11":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_negative_infinity_int32 = 322"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e maybe int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_negative_infinity_int32 = 322"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_negative_infinity_int32"]]},"6f51f2a2":{"title":"C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_context *modern_initial_context_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","b053f32f","Contexts"]],["modern_initial_context_make"]]},"15ae97b7":{"title":"1.6. Semantics ∙ Canonical form | Modern Data the Reference","body":[["paragraph","Modern Data contexts are essentially hash tables containing modern nodes as their elements.  The hash key used for indexing them is based on the canonical form of the modern node.  This section discusses what that canonical form means and how it is computed.  Though client code need never be aware of what are essentially implementation details such as these, independent implementations of the library do need to know them."],["paragraph","It is important to note that each node, independently, has its own canonical form.  It is not meaningful to speak of the canonical form of a document as a whole."],["paragraph","The canonical form is computed in the following steps, performed sequentially:"],["paragraph","1) Compute the flattened representation of the document as viewed from the node being considered, as described below."],["paragraph","2) Do a pre-order traversal of the reachable parts of the document starting from the node being considered, outputting modern-stream events constructing each traversed node in turn to an imagined accumulator of bytes."],["paragraph","3) Compute the hash of all the bytes that were output to the accumulator."],["paragraph","For ease of implementation and on the general principle of consistency, the format of the accumulator is the same as the format of a modern stream.  However, to compute the accumulator, it is not sufficient simply to output a document and record what has been output; the flattening stage must be done first, to break cycles.  Furthermore, because the exact sequence of bytes changes with the exact sequence of events generated, the events must come from a pre-order traversal as described above.  The flattening stage will have ensured that the pre-order traversal only needs to output value and type events, as well as a single family event at the top-level.  The pre-order traversal will not output any lambda or apply events, nor will it output family events other than the single top-level one."],["header",["link","cfc6d1ae","1.6.1."," ","Flattening"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.6."," ",["link","fcb65d5c","Semantics"]," ∙ ","Canonical form"]]},"98f87da6":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_bool_value_false = 1"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_bool_value_false"]]},"20705b23":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_satisfies_type = 2480"],["paragraph","\n\nValue type (abstract notation)\n\n(supertype : universe 0) -\u003e (predicate : supertype -\u003e bool) -\u003e satisfies supertype predicate"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_satisfies_type = 2480"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_satisfies_type"]]},"265ee3d5":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_nat16 = 261"],["paragraph","\nValue type (abstract notation)\nnat16 -\u003e nat16 -\u003e maybe nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_nat16 = 261"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_nat16"]]},"8f8c755a":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_nat32 = 135"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_nat32 = 135"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_nat32"]]},"2541c750":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint16_t(*modern_node_builtin_identifier_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_builtin_identifier_get"]]},"eeab5b70":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_name_value_make)(modern_library *library, struct modern_hash name);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_name_value_make "]]},"87a542db":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_int16 = 1633"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e int16 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_int16 = 1633"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_int16"]]},"f3ce60a7":{"title":"A. Normative references | Modern Data the Reference","body":[["header",["link","fca3a56b","A.1."," ","IEEE 754-2008 (floating-point)"]],["header",["link","ef76ddf9","A.2."," ","RFC 3629 (UTF-8)"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["A."," ","Normative references"]]},"463219aa":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_maybe_just_content_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_maybe_just_content_get"]]},"2a44a032":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_int8 = 10261"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_int8 = 10261"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_int8"]]},"9f37d149":{"title":"2.7. C library ∙ Predefined hashes | Modern Data the Reference","body":[["header",["link","6bcf9494","modern_hash_initial_namespace_compute"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.7."," ",["link","3f34774e","C library"]," ∙ ","Predefined hashes"]]},"7a5794fd":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_data_piece_blob = 1889"],["paragraph","\n\nValue type (abstract notation)\n\nblob -\u003e nat64 -\u003e nat64 -\u003e maybe blob"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_data_piece_blob = 1889"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["get_data_piece_blob"]]},"7dec10eb":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_satisfies_type_make)(modern_library *library, void *supertype, void *predicate);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_satisfies_type_make"]]},"5a79decc":{"title":"C library ∙ Node-based object model ∙ Evaluation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_evaluate(modern_library *library, modern *node);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.5."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","8ee82a69","Evaluation"]],["modern_evaluate"]]},"53c59bff":{"title":"C library ∙ Library instances ∙ Allocators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_allocator_realloc)(void *client_state, void *memory, size_t size);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.3."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","4ab6f44b","Allocators"]],["modern_allocator_realloc"]]},"60249b44":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_nat8 = 1380"],["paragraph","\n\nValue type (abstract notation)\n\nnat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_nat8 = 1380"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_nat8"]]},"8cfbf938":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_maybe_just_content_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_maybe_just_content_get"]]},"ef2e72f4":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_nat64 = 1671"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_nat64 = 1671"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_nat64"]]},"b7d3384f":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_int32 = 1378"],["paragraph","\n\nValue type (abstract notation)\n\nint32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_int32 = 1378"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_int32"]]},"495e95d6":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_float32_set)(modern_library *library, void *node, float value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_float32_set "]]},"415baff0":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_named_type = 2432"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0-\u003e name-\u003e universe 0"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_named_type = 2432"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_named_type"]]},"dbc0c09d":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint16_t (*modern_node_representation_builtin_identifier_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_builtin_identifier_get "]]},"4399cff7":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_nat16_set)(modern_library *library, void *node, uint16_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat16_set "]]},"605066cc":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_nat8 = 1508"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_nat8 = 1508"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_nat8"]]},"148985b0":{"title":"2.1.4. C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header",["link","b9e0bd13","modern_node_representation"]],["header",["link","ec2d30b8","modern_node_representation_node_type_get"]],["header",["link","7b1dac80","modern_node_representation_value_type_get"]],["header",["link","a48fc6b0","modern_node_representation_mutable_get"]],["header",["link","db7fc63c","modern_node_representation_canonical_hash_get"]],["header",["link","8cfbf938","modern_node_representation_maybe_just_content_get"]],["header",["link","67dd7b90","modern_node_representation_int8_get "]],["header",["link","4e877d85","modern_node_representation_int16_get "]],["header",["link","f996ad1b","modern_node_representation_int32_get "]],["header",["link","a181f1ba","modern_node_representation_int64_get "]],["header",["link","9ac0453b","modern_node_representation_nat8_get "]],["header",["link","e0da9916","modern_node_representation_nat16_get "]],["header",["link","c88e55f0","modern_node_representation_nat32_get "]],["header",["link","74c277d5","modern_node_representation_nat64_get "]],["header",["link","93a3b5d1","modern_node_representation_float32_get "]],["header",["link","ac5a1771","modern_node_representation_float64_get "]],["header",["link","5ee2eda0","modern_node_representation_utf8_bytes_get "]],["header",["link","8e69cf9d","modern_node_representation_utf8_data_piece_get "]],["header",["link","ffedeb39","modern_node_representation_blob_bytes_get "]],["header",["link","bb3ebd17","modern_node_representation_blob_data_piece_get "]],["header",["link","2547b1cf","modern_node_representation_sigma_field_value_get "]],["header",["link","e992808c","modern_node_representation_sigma_successor_get "]],["header",["link","95fd4282","modern_node_representation_name_value_hash_get "]],["header",["link","78d92532","modern_node_representation_named_value_get "]],["header",["link","7ed7d06a","modern_node_representation_maybe_type_content_type_get"]],["header",["link","46ef606e","modern_node_representation_function_type_left_get "]],["header",["link","373bf4b2","modern_node_representation_function_type_right_get "]],["header",["link","881f473b","modern_node_representation_sigma_type_field_type_get "]],["header",["link","664cbd63","modern_node_representation_sigma_type_successor_get "]],["header",["link","b6e428e0","modern_node_representation_named_type_name_get "]],["header",["link","d09dda29","modern_node_representation_named_type_content_type_get"]],["header",["link","4f8130fc","modern_node_representation_universe_type_level_get "]],["header",["link","562142c0","modern_node_representation_lambda_content_get "]],["header",["link","2f6cdea7","modern_node_representation_apply_left_get "]],["header",["link","59d5f6f9","modern_node_representation_apply_right_get "]],["header",["link","35d798e9","modern_node_representation_type_family_count_get "]],["header",["link","18e4596e","modern_node_representation_type_family_item_get "]],["header",["link","6753696c","modern_node_representation_let_count_get "]],["header",["link","ef9b86a2","modern_node_representation_let_item_get "]],["header",["link","31ed21c3","modern_node_representation_let_content_get "]],["header",["link","22325861","modern_node_representation_backreference_index_get "]],["header",["link","dbc0c09d","modern_node_representation_builtin_identifier_get "]],["header",["link","bf1336af","modern_node_representation_bool_false_make "]],["header",["link","7bce4fbb","modern_node_representation_bool_true_make "]],["header",["link","676418ff","modern_node_representation_ordering_less_make "]],["header",["link","3d712c92","modern_node_representation_ordering_equal_make "]],["header",["link","7995e362","modern_node_representation_ordering_greater_make "]],["header",["link","13aa82d6","modern_node_representation_maybe_nothing_make "]],["header",["link","126a1964","modern_node_representation_maybe_just_make "]],["header",["link","d0d74fdc","modern_node_representation_int8_make "]],["header",["link","5e339cfc","modern_node_representation_int16_make "]],["header",["link","1ca5208a","modern_node_representation_int32_make "]],["header",["link","6125e274","modern_node_representation_int64_make "]],["header",["link","6bf8fa56","modern_node_representation_nat8_make "]],["header",["link","5381979f","modern_node_representation_nat16_make "]],["header",["link","d6ab5dc5","modern_node_representation_nat32_make "]],["header",["link","401a88d0","modern_node_representation_nat64_make "]],["header",["link","7ca0b494","modern_node_representation_float32_make "]],["header",["link","e38b6c87","modern_node_representation_float64_make "]],["header",["link","3efed93f","modern_node_representation_utf8_make "]],["header",["link","4a801122","modern_node_representation_blob_make "]],["header",["link","1ea5b951","modern_node_representation_sigma_make "]],["header",["link","eeab5b70","modern_node_representation_name_value_make "]],["header",["link","1b647394","modern_node_representation_named_value_make "]],["header",["link","49ddff38","modern_node_representation_bool_type_make "]],["header",["link","41c0b592","modern_node_representation_ordering_type_make "]],["header",["link","3884dabf","modern_node_representation_maybe_type_make "]],["header",["link","4044f056","modern_node_representation_int8_type_make "]],["header",["link","bdb784e2","modern_node_representation_int16_type_make "]],["header",["link","ef7659e6","modern_node_representation_int32_type_make "]],["header",["link","602a29b1","modern_node_representation_int64_type_make "]],["header",["link","9348736a","modern_node_representation_nat8_type_make "]],["header",["link","de2d3f19","modern_node_representation_nat16_type_make "]],["header",["link","f493d468","modern_node_representation_nat32_type_make "]],["header",["link","a02ca261","modern_node_representation_nat64_type_make "]],["header",["link","f75b895f","modern_node_representation_float32_type_make "]],["header",["link","4eb040c3","modern_node_representation_float64_type_make "]],["header",["link","3dd9378b","modern_node_representation_utf8_type_make "]],["header",["link","dd366eaa","modern_node_representation_blob_type_make "]],["header",["link","c139e8ef","modern_node_representation_function_type_make "]],["header",["link","23b095af","modern_node_representation_sigma_type_make "]],["header",["link","7ddb72a8","modern_node_representation_name_type_make "]],["header",["link","5de93726","modern_node_representation_named_type_make "]],["header",["link","591e003d","modern_node_representation_universe_type_make "]],["header",["link","f4d4503b","modern_node_representation_lambda_make "]],["header",["link","ae7e3048","modern_node_representation_lambda_apply_make"]],["header",["link","bd4ff68c","modern_node_representation_type_family_make "]],["header",["link","24e49a45","modern_node_representation_let_make "]],["header",["link","2d2c593d","modern_node_representation_backreference_make "]],["header",["link","e8bd5af7","modern_node_representation_builtin_make "]],["header",["link","c0129577","modern_node_representation_immutable_set "]],["header",["link","361f5e8e","modern_node_representation_canonical_hash_set "]],["header",["link","db9f1092","modern_node_representation_maybe_just_content_set "]],["header",["link","a5f45bb8","modern_node_representation_int8_set "]],["header",["link","eddc5997","modern_node_representation_int16_set "]],["header",["link","373ffaa3","modern_node_representation_int32_set "]],["header",["link","f783ac6d","modern_node_representation_int64_set "]],["header",["link","9e26a056","modern_node_representation_nat8_set "]],["header",["link","4399cff7","modern_node_representation_nat16_set "]],["header",["link","747d4a78","modern_node_representation_nat32_set "]],["header",["link","e7ee9192","modern_node_representation_nat64_set "]],["header",["link","495e95d6","modern_node_representation_float32_set "]],["header",["link","305aa3df","modern_node_representation_float64_set "]],["header",["link","5f68caa0","modern_node_representation_utf8_data_piece_set "]],["header",["link","38afdafe","modern_node_representation_blob_data_piece_set "]],["header",["link","acf486d5","modern_node_representation_sigma_set "]],["header",["link","ef684447","modern_node_representation_named_value_set "]],["header",["link","9f2bb03b","modern_node_representation_maybe_type_content_type_set"]],["header",["link","d022bc46","modern_node_representation_function_type_left_set "]],["header",["link","c8b9d92a","modern_node_representation_function_type_right_set "]],["header",["link","4f9dbc18","modern_node_representation_sigma_type_field_type_set "]],["header",["link","56308959","modern_node_representation_sigma_type_successor_set "]],["header",["link","e8d73000","modern_node_representation_named_type_name_set "]],["header",["link","a318c92b","modern_node_representation_named_type_content_type_set"]],["header",["link","51926536","modern_node_representation_universe_type_level_set "]],["header",["link","27aee270","modern_node_representation_lambda_content_set "]],["header",["link","b5d9a0cf","modern_node_representation_apply_left_set "]],["header",["link","54b25a13","modern_node_representation_apply_right_set "]],["header",["link","67994263","modern_node_representation_type_family_item_add "]],["header",["link","bb506db6","modern_node_representation_type_family_item_remove "]],["header",["link","62b0ea3f","modern_node_representation_let_item_add "]],["header",["link","bcf6f048","modern_node_representation_let_item_remove "]],["header",["link","a7da8c90","modern_node_representation_let_content_set "]],["header",["link","d0b38749","modern_node_representation_backreference_index_set "]],["header",["link","48f05be0","modern_node_representation_builtin_identifier_set "]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ","Node representations"]]},"e168d7b0":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_float32 = 352"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_float32 = 352"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_float32"]]},"a32c9e1e":{"title":"3.1. Builtin identifiers ∙ Flow control | Modern Data the Reference","body":[["header",["link","4e178e4e","if_bool"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.1."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Flow control"]]},"54b04657":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_nat16 = 1259"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_nat16 = 1259"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_nat16"]]},"adf7b580":{"title":"1.8.8. Semantics ∙ Values and types ∙ Aggregate values | Modern Data the Reference","body":[["header",["link","43bac615","1.8.8.1."," ","Why sigma?"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.8."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Aggregate values"]]},"39f45ce0":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_float64)(struct modern_processor *processor, void *processor_state, void *stream_state, double value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_float64"]]},"59499a3a":{"title":"2.5.2.5. C library ∙ Node-based object model ∙ Callbacks ∙ Predefined | Modern Data the Reference","body":[["header",["link","d38f7124","modern_node_default_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.5."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ","Predefined"]]},"752b81bb":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","ceiling_float32_int8 = 1312"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_ceiling_float32_int8 = 1312"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["ceiling_float32_int8"]]},"72544560":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_nat64 = 10281"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_nat64 = 10281"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_nat64"]]},"ab6bbaeb":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat8_type = 30"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat8_type"]]},"f6fd2928":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","maximum_bound_int16 = 1409"],["paragraph","\n\nValue type (abstract notation)\n\nint16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_maximum_bound_int16 = 1409"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["maximum_bound_int16"]]},"a566522b":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_float32_value = 16"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_float32_value"]]},"9f73db86":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_nat64 = 10267"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_nat64 = 10267"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_nat64"]]},"9c16c0fc":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_int8 = 160"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_int8 = 160"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_int8"]]},"489889d3":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_nat32 = 230"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e maybe nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_nat32 = 230"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_nat32"]]},"99f37fdc":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_nat8 = 1288"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_nat8 = 1288"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_nat8"]]},"3546b7a3":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_nat16 = 10307"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_nat16 = 10307"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_nat16"]]},"416197f1":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_int64 = 1571"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e int64 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_int64 = 1571"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_int64"]]},"95351019":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_nat64 = 1263"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_nat64 = 1263"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_nat64"]]},"5eb1c812":{"title":"C library ∙ Streaming model ∙ Processes ∙ Predefined | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_processor *modern_processor_input_make(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ",["link","305c53a5","Predefined"]],["modern_processor_input_make"]]},"3d712c92":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_ordering_equal_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_ordering_equal_make "]]},"9ac0453b":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nuint8_t (*modern_node_representation_nat8_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat8_get "]]},"bbd93c4b":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","replace_data_piece_blob = 1921"],["paragraph","\n\nValue type (abstract notation)\n\nblob -\u003e nat64 -\u003e nat64 -\u003e blob -\u003e maybe blob"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_replace_data_piece_blob = 1921"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["replace_data_piece_blob"]]},"3b97abbe":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_canonical_hash_set)(modern_library *library, void *value, struct modern_hash hash);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b640fe27","General"]],["modern_node_canonical_hash_set"]]},"bb1f7d6a":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_int64 = 1475"],["paragraph","\n\nValue type (abstract notation)\n\nint64 -\u003e nat8 -\u003e int64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_int64 = 1475"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_int64"]]},"de461cac":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_error_handler *modern_library_error_handler_get(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_error_handler_get"]]},"4e178e4e":{"title":"Builtin identifiers ∙ Flow control | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","if_bool = 0"],["paragraph","\nValue type (abstract notation)\na : universe 0 -\u003e bool -\u003e a -\u003e a -\u003e a"],["paragraph","\nValue type\n(lambda  (function    (backreference 0)    (function      bool      (function        (backreference 0)        (Backreference 0)))))"],["header","Synopsis"],["paragraph","modern_builtin_identifier_if_bool = 0"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.1."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","a32c9e1e","Flow control"]],["if_bool"]]},"d487484d":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_nat64 = 1479"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat8 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_nat64 = 1479"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_nat64"]]},"6a495f10":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arcsine_float32 = 1088"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arcsine_float32 = 1088"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arcsine_float32"]]},"61f4f571":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_nat32 = 1196"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_nat32 = 1196"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_nat32"]]},"4e877d85":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nint16_t (*modern_node_representation_int16_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int16_get "]]},"4cb295e6":{"title":"C library ∙ Node-based object model ∙ Evaluation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_resolve_backreferences(modern_library *library, modern *node);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.5."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","8ee82a69","Evaluation"]],["modern_resolve_backreferences"]]},"d4ce355e":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","natural_logarithm_float64 = 609"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_natural_logarithm_float64 = 609"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["natural_logarithm_float64"]]},"589d4271":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_nat8 = 10279"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_nat8 = 10279"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_nat8"]]},"32fc446b":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_int64 = 10305"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_int64 = 10305"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_int64"]]},"c4d768e7":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_satisfies_type_predicate = 2257"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (a -\u003e bool)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_satisfies_type_predicate = 2257"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_satisfies_type_predicate"]]},"2e4523cd":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_end)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_end"]]},"20fd156b":{"title":"Builtin identifiers ∙ Logarithm and exponent | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","square_root_float64 = 577"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_square_root_float64 = 577"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.6."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","3e1499b2","Logarithm and exponent"]],["square_root_float64"]]},"f2c7d09e":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat8_make)(modern_library *library, uint8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_nat8_make"]]},"8c502048":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_int64 = 10292"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_int64 = 10292"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_int64"]]},"4ed9735e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_int32 = 10291"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_int32 = 10291"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_int32"]]},"2a5d25f3":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_float64 = 138"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_float64 = 138"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_float64"]]},"82cdeeb7":{"title":"3. Builtin identifiers | Modern Data the Reference","body":[["paragraph","The meaning and purpose of these values is described in the section Semantics - Values and types - Builtin values."],["header",["link","a32c9e1e","3.1."," ","Flow control"]],["header",["link","f3a2e7e0","3.2."," ","Logic"]],["header",["link","f13295e2","3.3."," ","Equality"]],["header",["link","6ca9cb9d","3.4."," ","Ordering"]],["header",["link","bfa7b17a","3.5."," ","Arithmetic"]],["header",["link","3e1499b2","3.6."," ","Logarithm and exponent"]],["header",["link","1e80fd32","3.7."," ","Trigonometric"]],["header",["link","bea8b63b","3.8."," ","Rounding"]],["header",["link","85a08cfe","3.9."," ","Boundary value"]],["header",["link","906c6179","3.10."," ","Bitwise"]],["header",["link","d9ae90ca","3.11."," ","Large object"]],["header",["link","87ffb088","3.12."," ","Sigma value"]],["header",["link","eae0c2b1","3.13."," ","Named value"]],["header",["link","f91f8b86","3.14."," ","Maybe value"]],["header",["link","32b774b2","3.15."," ","Type manipulation"]],["header",["link","684e715e","3.16."," ","Cast"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3."," ","Builtin identifiers"]]},"401a88d0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_nat64_make)(modern_library *library, uint64_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat64_make "]]},"fa53f24a":{"title":"2.6.1.2. C library ∙ Streaming model ∙ Processors ∙ Predefined | Modern Data the Reference","body":[["header",["link","76ab482c","modern_processor_input_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","29769590","Processors"]," ∙ ","Predefined"]]},"3daf5544":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_int64 = 515"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_int64 = 515"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_int64"]]},"8c19af37":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_blob = 10315"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_blob = 10315"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_blob"]]},"5fcf74fc":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_name_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_name_type_make"]]},"7995e362":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_ordering_greater_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_ordering_greater_make "]]},"8e2fd97c":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_int8 = 10247"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_int8 = 10247"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_int8"]]},"c32c4c42":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_nat64 = 1511"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat8 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_nat64 = 1511"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_nat64"]]},"b3ac698d":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","length_bytes_utf8 = 1792"],["paragraph","\n\nValue type (abstract notation)\n\nutf8 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_length_bytes_utf8 = 1792"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["length_bytes_utf8"]]},"5bf9233b":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_int16 = 1282"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_int16 = 1282"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_int16"]]},"4bca3315":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_zero_float32_nat64 = 1198"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_zero_float32_nat64 = 1198"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_zero_float32_nat64"]]},"2daa42b2":{"title":"Builtin identifiers ∙ Boundary value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","minimum_bound_int64 = 1379"],["paragraph","\n\nValue type (abstract notation)\n\nint64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_minimum_bound_int64 = 1379"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.9."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","85a08cfe","Boundary value"]],["minimum_bound_int64"]]},"f3a244bd":{"title":"C library ∙ Library instances ∙ Error handlers | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid(*modern_error_handler_not_applicable)(void *client_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.2."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","7e5377c0","Error handlers"]],["modern_error_handler_not_applicable"]]},"adfc76c2":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_float32 = 1296"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_float32 = 1296"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_float32"]]},"bf492e42":{"title":"2.5.2.3.1. C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header",["link","731046f3","modern_node_bool_false_make"]],["header",["link","c2a755f8","modern_node_bool_true_make"]],["header",["link","ff9c6bbb","modern_node_ordering_less_make"]],["header",["link","b0511aaf","modern_node_ordering_equal_make"]],["header",["link","f8ccd35a","modern_node_ordering_greater_make"]],["header",["link","5140e2dd","modern_node_maybe_nothing_make"]],["header",["link","e1657c13","modern_node_maybe_just_make"]],["header",["link","13c7ebf0","modern_node_int8_make"]],["header",["link","ffe82695","modern_node_int16_make"]],["header",["link","7f706129","modern_node_int32_make"]],["header",["link","f9603d47","modern_node_int64_make"]],["header",["link","f2c7d09e","modern_node_nat8_make"]],["header",["link","5532c170","modern_node_nat16_make"]],["header",["link","85f6b645","modern_node_nat32_make"]],["header",["link","c541dabb","modern_node_nat64_make"]],["header",["link","dca07038","modern_node_float32_make"]],["header",["link","97d666e8","modern_node_float64_make"]],["header",["link","831df03a","modern_node_utf8_make"]],["header",["link","2e3fc5d4","modern_node_blob_make"]],["header",["link","edbeef50","modern_node_sigma_make"]],["header",["link","e5fe1d6b","modern_node_name_value_make"]],["header",["link","57cb51c6","modern_node_named_value_make"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ","Values"]]},"c067d1f1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_utf8_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_utf8_type_make"]]},"38e570e1":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","make_sigma = 2272"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (b : a -\u003e universe 0)-\u003e universe 0\nTODO this probably comes out, doesnt it?\n"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_make_sigma = 2272"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["make_sigma"]]},"23b095af":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_sigma_type_make)(modern_library *library, void *field_type, void *successor);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_sigma_type_make "]]},"d0db85be":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_nat32 = 166"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_nat32 = 166"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_nat32"]]},"d432ef82":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_function_type_result_set)(modern_library *library, void *value, void *result);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","b1d9f5d5","Types"]],["modern_node_function_type_result_set"]]},"b3bc16fa":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_int32 = 514"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_int32 = 514"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_int32"]]},"b9e643af":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_stream_initialize)();"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_initialize"]]},"23c02190":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","multiply_int64 = 259"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_multiply_int64 = 259"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["multiply_int64"]]},"426e149a":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_ordering_equal)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_ordering_equal"]]},"83e06a32":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","negate_float64 = 453"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e maybe float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_negate_float64 = 453"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["negate_float64"]]},"85f6b645":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_nat32_make)(modern_library *library, uint32_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_nat32_make"]]},"4149d06b":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_nat16 = 1509"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat8 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_nat16 = 1509"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_nat16"]]},"edbeef50":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_make)(modern_library *library, void *type, void *field_value, void *successor_value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_sigma_make"]]},"6212803d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_set_let_item_remove)(modern_library *library, void *value, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_set_let_item_remove"]]},"48f05be0":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_builtin_identifier_set)(modern_library *library, void *value, uint16_t identifier);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_builtin_identifier_set "]]},"46242350":{"title":"C library ∙ Virtual files ∙ Predefined ∙ Memory managed by the client | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoidmodern_vfile_memory_buffer_finalize(modern_library *library, void *vfile_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ",["link","e83e3ae3","Memory managed by the client"]],["modern_vfile_memory_buffer_finalize"]]},"31ed21c3":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_let_content_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_content_get "]]},"cc2c7c14":{"title":"1.8.7. Semantics ∙ Values and types ∙ Binary large objects | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.7."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Binary large objects"]]},"bd28e96f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_blob = 10313"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_blob = 10313"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_blob"]]},"c7f348e0":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_bool_type = 23"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_bool_type"]]},"002d71dd":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_nat32 = 1356"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_nat32 = 1356"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_nat32"]]},"45e8b51b":{"title":"2.5.2.2.4. C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header",["link","f4e9849f","modern_node_lambda_content_get"]],["header",["link","ebffa57f","modern_node_apply_left_get"]],["header",["link","7e8a84fc","modern_node_apply_right_get"]],["header",["link","1acdc0da","modern_node_type_family_count_get"]],["header",["link","8cab3cb1","modern_node_type_family_item_get"]],["header",["link","7ec1f05e","modern_node_let_count_get"]],["header",["link","6f5499e9","modern_node_let_item_get"]],["header",["link","cfb692f8","modern_node_let_content_get"]],["header",["link","67388783","modern_node_backreference_index_get"]],["header",["link","2541c750","modern_node_builtin_identifier_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ","Combinators"]]},"ce5d9d75":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_magic_number)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_magic_number"]]},"3efed93f":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_utf8_make)(modern_library *library, uint8_t *data);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_utf8_make "]]},"f5c07453":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_nat8 = 10293"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_nat8 = 10293"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_nat8"]]},"aa483fe9":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_int8 = 1248"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_int8 = 1248"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_int8"]]},"5e928996":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_int8_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_int8_type_make"]]},"b0acb26c":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_negative_infinity_int64 = 419"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_negative_infinity_int64 = 419"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_negative_infinity_int64"]]},"885c4a42":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_nat8 = 292"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e maybe nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_nat8 = 292"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_nat8"]]},"94b62d57":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_or_int16 = 1601"],["paragraph","\n\nValue type (abstract notation)\n\nint16 -\u003e int16 -\u003e int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_or_int16 = 1601"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_or_int16"]]},"f4e9849f":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_lambda_content_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","45e8b51b","Combinators"]],["modern_node_lambda_content_get"]]},"f939c614":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat64_blob = 10319"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat64_blob = 10319"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat64_blob"]]},"a2c79c5e":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_int16 = 1219"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_int16 = 1219"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_int16"]]},"ef7659e6":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int32_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int32_type_make "]]},"1b60cd5b":{"title":"2.4.2.4. C library ∙ Virtual files ∙ Predefined ∙ POSIX-style file descriptors | Modern Data the Reference","body":[["header",["link","cff03eb7","modern_vfile_fd_make"]],["header",["link","8f95a0d7","modern_vfile_fd_initialize"]],["header",["link","3293f042","modern_vfile_fd_finalize"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.2.4."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","cd55e7b6","Predefined"]," ∙ ","POSIX-style file descriptors"]]},"21203c40":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_nat8 = 228"],["paragraph","\nValue type (abstract notation)\nnat8 -\u003e nat8 -\u003e maybe nat8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_nat8 = 228"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_nat8"]]},"b0c7896d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","size_t(*modern_node_blob_bytes_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_blob_bytes_get"]]},"a670b483":{"title":"Builtin identifiers ∙ Equality | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","equal_to_int64 = 132"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e bool"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_equal_to_int64 = 132"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.3."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f13295e2","Equality"]],["equal_to_int64"]]},"1f14d0c0":{"title":"1.8.9. Semantics ∙ Values and types ∙ Builtin values | Modern Data the Reference","body":[["paragraph","Built-in value is a special node type, which consists of an identifier from a sixteen-bit unsigned number-space.  Each permitted identifier has a name and a semantic meaning, described in this section.  Unlike most other node types, the value type of a built-in value depends (solely) on its identifier.  Thus, this node type could be viewed as an extension node type, providing a larger number-space."],["paragraph","Many of the extant built-in values exist to provide primitive operations on the other value types, such as arithmetic, trigonometry, and introspection.  There is also one, \nif_bool\n, which provides flow control.  Because loops can be implemented with cyclic structures (which is to say, with let-bindings), no other flow-control constructs are necessary to be Turing-complete."],["paragraph","The reader is urged not to inspect the ordering of the symbols within the number-space too carefully, as it will reveal embarrassing details of the order in which concepts were invented during early drafts of Modern Data!  They are presented in this document in a logical order and grouping; the actual numbers assignations are purely an implementation detail."],["paragraph","The human-readable names, numeric values, and semantics are given, in order to attain some approximation of brevity, in a top-level section of this document, Builtin identifiers, alongside the C-library names."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.9."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Builtin values"]]},"7fff48a1":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_int8_set)(modern_library *library, void *node, int8_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_int8_set"]]},"caf64b90":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_blob_float32 = 10310"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_blob_float32 = 10310"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_blob_float32"]]},"db1eeac0":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_utf8_data_piece_set)(modern_library *library, void *value, uint8_t *data, size_t offset, size_t old_bytes, size_t new_bytes);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","87e59ff8","Values"]],["modern_node_utf8_data_piece_set"]]},"e8d73000":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_named_type_name_set)(modern_library *library, void *value, struct modern_hash name);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_named_type_name_set "]]},"cac572e9":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","absolute_value_int64 = 483"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e maybe int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_absolute_value_int64 = 483"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["absolute_value_int64"]]},"75711392":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int16_int64 = 10249"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_int64 = 10249"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_int64"]]},"8d6938ad":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_float64 = 1233"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_float64 = 1233"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_float64"]]},"b053f32f":{"title":"2.5.4. C library ∙ Node-based object model ∙ Contexts | Modern Data the Reference","body":[["header",["link","998d92fb","modern_context"]],["header",["link","6f51f2a2","modern_initial_context_make"]],["header",["link","be46e3a2","modern_copy_context"]],["header",["link","4a1d1710","modern_in_context_get"]],["header",["link","c8935e87","modern_to_context_add"]],["header",["link","61b07337","modern_from_context_get"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ","Contexts"]]},"e077a1b2":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_cosine_float64 = 1025"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_cosine_float64 = 1025"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_cosine_float64"]]},"1bcca340":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float32_int64 = 1350"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float32_int64 = 1350"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float32_int64"]]},"602a29b1":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int64_type_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int64_type_make "]]},"87ffb088":{"title":"3.12. Builtin identifiers ∙ Sigma value | Modern Data the Reference","body":[["header",["link","40e1a953","get_sigma_field_value"]],["header",["link","66905640","get_sigma_successor"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.12."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ","Sigma value"]]},"5d9b1a34":{"title":"2.1. C library ∙ Library instances | Modern Data the Reference","body":[["paragraph","A library instance is an opaque structure which represents a single configured copy of the system.  It is a basic type which, once constructed, is passed to every function.  It contains structures of pointers to callbacks which are used to accomplish all the low-level tasks the library needs to conduct.  Callback structures are used in several places in the system, and not all of them are part of the library instance - only the most fundamental ones."],["paragraph","In all callbacks, the library is written with the expectation that the client code may \nlongjmp()\n or cause program termination at any time, and will not crash upon these events.  Allocation failure is also not the unrecoverable condition that it is in some systems; it is permitted, and will cause neither crashes nor memory leaks.  The test suite verifies all of these behaviours extensively."],["paragraph","Library instances (as all of Modern Data) are threading-naive; that is, they use no thread-local storage, but also do no internal locking.  No special action is needed to migrate a library instance from one operating-system thread to another, but only one thread may be in the midst of a library call at any given moment."],["paragraph","The callback structures are the error handler, the allocator, and the node routines; the client state, an opaque pointer for the use of client code, is also part of the library instances state.  None of these can be changed once the library instance is initialized, but they can be retrieved and inspected at any time."],["paragraph","The most fundamental task is error handling.  In order to allow the system to be robust against allocation failure, it is necessary that there be no heap allocation required to process an error!  As such, each possible error condition has its own callback.  This leads to a verbose style, but is typically what one wants in any event."],["paragraph","The next-most-important task is memory allocation.  This is straightforward and does not need further discussion."],["paragraph","The final important task is to handle primitive operations on the representation of nodes.  The library provides a default implementation here, but in order to bind more closely with non-C programming languages, the capability to provide ones own is also provided.  All access to the internal structures is indirected through these callbacks, with the result that all the basic operations (serialization, evaluation, and so on) can be performed regardless of the actual node representation."],["header",["link","60132bdd","2.1.1."," ","General"]],["header",["link","7e5377c0","2.1.2."," ","Error handlers"]],["header",["link","4ab6f44b","2.1.3."," ","Allocators"]],["header",["link","148985b0","2.1.4."," ","Node representations"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1."," ",["link","3f34774e","C library"]," ∙ ","Library instances"]]},"73388ca0":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_blob_value = 19"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_blob_value"]]},"7416569c":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_odd_float32_int8 = 1280"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_odd_float32_int8 = 1280"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_odd_float32_int8"]]},"67dd7b90":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nint8_t (*modern_node_representation_int8_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int8_get "]]},"f8ccd35a":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_ordering_greater_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_ordering_greater_make"]]},"c0229d9b":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_universe)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_universe"]]},"f262492b":{"title":"Builtin identifiers ∙ Maybe value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","fmap_maybe = 2592"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (a : universe 0)-\u003e maybe a -\u003e (a -\u003e b) -\u003e maybe b"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_fmap_maybe = 2592"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.14."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","f91f8b86","Maybe value"]],["fmap_maybe"]]},"9bce70e2":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_builtin_make)(modern_library *library, uint16_t identifier);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","51cd2052","Combinators"]],["modern_node_builtin_make"]]},"87f38654":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float64_nat64 = 1231"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e nat64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float64_nat64 = 1231"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float64_nat64"]]},"e315b0e0":{"title":"C library ∙ Library instances ∙ General | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_node *modern_library_node_representation_get(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.1."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","60132bdd","General"]],["modern_library_node_representation_get"]]},"6dc0f0b0":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_int8 = 10254"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_int8 = 10254"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_int8"]]},"40a534e7":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int16_type = 27"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int16_type"]]},"9b538c74":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_int32 = 1442"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e nat8 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_int32 = 1442"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_int32"]]},"d5aa9720":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","hyperbolic_arccosine_float64 = 1121"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_hyperbolic_arccosine_float64 = 1121"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["hyperbolic_arccosine_float64"]]},"f660a0b0":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","replace_byte_blob = 1856"],["paragraph","\n\nValue type (abstract notation)\n\nblob -\u003e nat64 -\u003e nat8 -\u003e maybe blob"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_replace_byte_blob = 1856"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["replace_byte_blob"]]},"2b5683a4":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_sigma_type_field_type_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","a553ffbe","Types"]],["modern_node_sigma_type_field_type_get"]]},"672768dc":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Mutation ∙ Combinators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_node_set_type_family_item_remove)(modern_library *library, void *value, uint64_t index);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.4.4."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","57107061","Mutation"]," ∙ ",["link","4874b022","Combinators"]],["modern_node_set_type_family_item_remove"]]},"97f6a69e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_int32 = 10277"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_int32 = 10277"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_int32"]]},"22826ee9":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_lambda = 44"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_lambda"]]},"93dbabb0":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","add_nat32 = 198"],["paragraph","\nValue type (abstract notation)\nnat32 -\u003e nat32 -\u003e maybe nat32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_add_nat32 = 198"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["add_nat32"]]},"573e1b20":{"title":"Builtin identifiers ∙ Named value | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_named_value = 2048"],["paragraph","\n\nValue type (abstract notation)\n\n(a : universe 0)-\u003e (b : name)-\u003e named b a -\u003e a"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_named_value = 2048"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.13."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","eae0c2b1","Named value"]],["get_named_value"]]},"ef9b86a2":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_let_item_get)(modern_library *library, void *value, uint64_t index);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_let_item_get "]]},"59102192":{"title":"C library ∙ Virtual files ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_vfile     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ",["link","952df493","Callbacks"]],["modern_vfile"]]},"ef76ddf9":{"title":"A.2. Normative references ∙ RFC 3629 (UTF-8) | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["A.2."," ",["link","f3ce60a7","Normative references"]," ∙ ","RFC 3629 (UTF-8)"]]},"748eccc8":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_not_nat32 = 1670"],["paragraph","\n\nValue type (abstract notation)\n\nnat32 -\u003e nat32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_not_nat32 = 1670"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_not_nat32"]]},"151849d9":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_nat64 = 1639"],["paragraph","\n\nValue type (abstract notation)\n\nnat64 -\u003e nat64 -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_nat64 = 1639"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_nat64"]]},"743fd8dc":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","arccosine_float32 = 896"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_arccosine_float32 = 896"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["arccosine_float32"]]},"a7acb748":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_int64 = 163"],["paragraph","\nValue type (abstract notation)\nint64 -\u003e int64 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_int64 = 163"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_int64"]]},"783e5670":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int16_nat32 = 10252"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int16_nat32"]]},"c42d4fb4":{"title":"C library ∙ Node-based object model ∙ Canonical form | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","intmodern_node_canonical_hash_compute(modern_library *library, modern *value, struct modern_hash *out);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.3."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","c0003f6e","Canonical form"]],["modern_node_canonical_hash_compute"]]},"76e2ead3":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_xor_int32 = 1634"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e int32 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_xor_int32 = 1634"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_xor_int32"]]},"74716475":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","divide_towards_zero_int16 = 289"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_divide_towards_zero_int16 = 289"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["divide_towards_zero_int16"]]},"7990d169":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","int64_t(*modern_node_int64_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_int64_get"]]},"cd9f964f":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_float64 = 1265"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_float64 = 1265"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_float64"]]},"1ca5208a":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int32_make)(modern_library *library, int32_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int32_make "]]},"2aa71bc0":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_nat64 = 167"],["paragraph","\nValue type (abstract notation)\nnat64 -\u003e nat64 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_nat64 = 167"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_nat64"]]},"9e26a056":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_nat8_set)(modern_library *library, void *node, uint8_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat8_set "]]},"57cb51c6":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_named_value_make)(modern_library *library, void *type, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_named_value_make"]]},"a063e391":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_left_int32 = 1506"],["paragraph","\n\nValue type (abstract notation)\n\nint32 -\u003e nat8 -\u003e int32"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_left_int32 = 1506"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_left_int32"]]},"8853ac42":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_utf8_start)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_utf8_start"]]},"e5fe1d6b":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_name_value_make)(modern_library *library, struct modern_hash *name);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_name_value_make"]]},"7b1dac80":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_value_type_get)(modern_library *library, void *value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_value_type_get"]]},"79549be3":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_nat16 = 1541"],["paragraph","\n\nValue type (abstract notation)\n\nnat16 -\u003e nat8 -\u003e nat16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_nat16 = 1541"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_nat16"]]},"5490cd41":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_int16)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_int16"]]},"857c8ce5":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_int32 = 162"],["paragraph","\nValue type (abstract notation)\nint32 -\u003e int32 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_int32 = 162"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_int32"]]},"9364e92d":{"title":"C library ∙ Library instances ∙ Allocators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_allocator_alloc)(void *client_state, size_t size);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.3."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","4ab6f44b","Allocators"]],["modern_allocator_alloc"]]},"73d5dbed":{"title":"1.8.5.1. Semantics ∙ Values and types ∙ Floating-point numbers ∙ 80-bit and 128-bit values | Modern Data the Reference","body":[["paragraph","It is worth noting that, while many platforms support 128-bit float values, many others do not.  Even when the compiler does, often the system library does not.  This is, not least, because there are no standardized names for the functions - though GNU libquadmath uses the q suffix on the ISO C99 base names.  The C type which would be the most likely candidate to be a 128-bit float, long double, is actually an 80-bit float on most Intel-related platforms, while non-Intel platforms seldom support anything longer than 64-bit floats."],["paragraph","This creates a situation where there is no one agreed-upon format for very large floating-point numbers, and it is a significant portability burden to write code which uses either, let alone both.  Modern Datas purpose is to be an interchange format and lingua franca; therefore, it leaves out support for these types entirely.  It is expected that, should a standard emerge, Modern Data will be duly extended in some future revision."],["paragraph","This decision was not made casually; in fact, an early version of the design featured a 128-bit float.  The only way to reconcile this design decision with the portability constraints Modern Data aspires to was to use the largest available floating-point type on any given platform for all function parameters and return values, while converting these to and from 128-bit representations for interchange.  This was actually implemented at one point, but was removed for the above reasons.  A type which cannot be used is - axiomatically! - of no use to anyone."]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.5.1."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ",["link","f0a5fb67","Floating-point numbers"]," ∙ ","80-bit and 128-bit values"]]},"a958cbec":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","subtract_float32 = 232"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32 -\u003e maybe float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_subtract_float32 = 232"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["subtract_float32"]]},"c367986d":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Reading ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","uint32_t(*modern_node_nat32_get)(modern_library *library, void *value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.2.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","3fd8517d","Reading"]," ∙ ",["link","5c9440ea","Values"]],["modern_node_nat32_get"]]},"d31241a2":{"title":"C library ∙ Library instances ∙ Allocators | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nstruct modern_allocator     ;"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.3."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","4ab6f44b","Allocators"]],["modern_allocator"]]},"2dc5c4f3":{"title":"Builtin identifiers ∙ Ordering | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","compare_int16 = 161"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e ordering"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_compare_int16 = 161"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.4."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","6ca9cb9d","Ordering"]],["compare_int16"]]},"6cf5c23f":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_int16 = 10240"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_int16 = 10240"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_int16"]]},"6c3da5e9":{"title":"Builtin identifiers ∙ Trigonometric | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","tangent_float32 = 832"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_tangent_float32 = 832"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.7."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","1e80fd32","Trigonometric"]],["tangent_float32"]]},"9620d0f5":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_name_type = 40"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_name_type"]]},"cbd810e3":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_nat16 = 10272"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_nat16 = 10272"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_nat16"]]},"40354576":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_blob)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_blob"]]},"584370cd":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_away_from_zero_float32_int16 = 1218"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_away_from_zero_float32_int16 = 1218"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_away_from_zero_float32_int16"]]},"2fb18049":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_blob = 10312"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_blob = 10312"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_blob"]]},"007219eb":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","rotate_right_nat8 = 1540"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_rotate_right_nat8 = 1540"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["rotate_right_nat8"]]},"c340332d":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_nat32)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_nat32"]]},"1852468f":{"title":"C library ∙ Streaming model ∙ Processes ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void (*modern_process_flush)  (void *process_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.2.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","57e70045","Processes"]," ∙ ",["link","b234d424","Callbacks"]],["modern_process_flush"]]},"9edcf160":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float32_int16 = 1250"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float32_int16 = 1250"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float32_int16"]]},"ab48b98f":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_int64)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_int64"]]},"47fe5069":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_builtin = 49"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_builtin"]]},"dcdaf262":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","sign_float32 = 516"],["paragraph","\nValue type (abstract notation)\nfloat32 -\u003e float32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_sign_float32 = 516"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["sign_float32"]]},"a72423ef":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","bit_and_nat8 = 1572"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_bit_and_nat8 = 1572"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["bit_and_nat8"]]},"d82b4fc7":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_int64_value = 11"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_int64_value"]]},"bdf65098":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_blob_type_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.2."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","b7a6b89f","Types"]],["modern_node_blob_type_make"]]},"3ab0df11":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int8_nat16 = 10244"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int8_nat16 = 10244"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int8_nat16"]]},"dca07038":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_float32_make)(modern_library *library, float value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_float32_make"]]},"731046f3":{"title":"C library ∙ Node-based object model ∙ Callbacks ∙ Construction ∙ Values | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void *(*modern_node_bool_false_make)(modern_library *library);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.2.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","f65a2b21","Callbacks"]," ∙ ",["link","30d0e3d9","Construction"]," ∙ ",["link","bf492e42","Values"]],["modern_node_bool_false_make"]]},"c1b6aeff":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_negative_infinity_int16 = 417"],["paragraph","\nValue type (abstract notation)\nint16 -\u003e int16 -\u003e maybe int16"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_negative_infinity_int16 = 417"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_negative_infinity_int16"]]},"9069e3b0":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","character_offset_to_byte_offset_utf8 = 1760"],["paragraph","\n\nValue type (abstract notation)\n\nutf8 -\u003e nat64 -\u003e maybe nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_character_offset_to_byte_offset_utf8 = 1760"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["character_offset_to_byte_offset_utf8"]]},"5a87b5db":{"title":"C library ∙ Node-based object model ∙ Deserialization | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern *modern_deserialize_fd(modern_library *library, modern_context *context, int fd);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.6."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","126a6c7a","Deserialization"]],["modern_deserialize_fd"]]},"24863320":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int64_nat8 = 10264"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int64_nat8 = 10264"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int64_nat8"]]},"676418ff":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_ordering_less_make)(modern_library *library);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_ordering_less_make "]]},"f783ac6d":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_int64_set)(modern_library *library, void *node, int64_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int64_set "]]},"b1cb832a":{"title":"Builtin identifiers ∙ Large object | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","length_bytes_blob = 1793"],["paragraph","\n\nValue type (abstract notation)\n\nblob -\u003e nat64"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_length_bytes_blob = 1793"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.11."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","d9ae90ca","Large object"]],["length_bytes_blob"]]},"7687ea3c":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_right_nat8 = 1476"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_right_nat8 = 1476"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_right_nat8"]]},"5cf7ff8e":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat16_blob = 10317"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat16_blob = 10317"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat16_blob"]]},"c580ef87":{"title":"Builtin identifiers ∙ Arithmetic | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modulus_towards_zero_int8 = 384"],["paragraph","\nValue type (abstract notation)\nint8 -\u003e int8 -\u003e maybe int8"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_modulus_towards_zero_int8 = 384"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.5."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bfa7b17a","Arithmetic"]],["modulus_towards_zero_int8"]]},"184e8bee":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_int32 = 1349"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_int32 = 1349"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_int32"]]},"996e369e":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","round_towards_even_float64_int32 = 1253"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e int32"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_round_towards_even_float64_int32 = 1253"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["round_towards_even_float64_int32"]]},"c2907f92":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_nat16_value = 13"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_nat16_value"]]},"952df493":{"title":"2.4.1. C library ∙ Virtual files ∙ Callbacks | Modern Data the Reference","body":[["header",["link","59102192","modern_vfile"]],["header",["link","2a1e5e38","modern_vfile_read"]],["header",["link","5d46999b","modern_vfile_write"]]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.4.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fb148e11","Virtual files"]," ∙ ","Callbacks"]]},"d0d74fdc":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid *(*modern_node_representation_int8_make)(modern_library *library, int8_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_int8_make "]]},"70605fdd":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_nat8_nat64 = 10274"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_nat8_nat64 = 10274"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_nat8_nat64"]]},"a4927120":{"title":"Builtin identifiers ∙ Bitwise | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","shift_left_nat8 = 1444"],["paragraph","\n\nValue type (abstract notation)\n\nnat8 -\u003e nat8 -\u003e nat8"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_shift_left_nat8 = 1444"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.10."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","906c6179","Bitwise"]],["shift_left_nat8"]]},"85facafd":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_int16)(struct modern_processor *processor, void *processor_state, void *stream_state, int16_t value);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_int16"]]},"e013d881":{"title":"1.8.3. Semantics ∙ Values and types ∙ Integers | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.3."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Integers"]]},"c0c84978":{"title":"Builtin identifiers ∙ Cast | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","cast_int32_int16 = 10255"],["paragraph","\n\nValue type (abstract notation)\n\nint8 -\u003e maybe int16"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_cast_int32_int16 = 10255"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.16."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","684e715e","Cast"]],["cast_int32_int16"]]},"747d4a78":{"title":"C library ∙ Library instances ∙ Node representations | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","\nvoid (*modern_node_representation_nat32_set)(modern_library *library, void *node, uint32_t value);"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.1.4."," ",["link","3f34774e","C library"]," ∙ ",["link","5d9b1a34","Library instances"]," ∙ ",["link","148985b0","Node representations"]],["modern_node_representation_nat32_set "]]},"7a601092":{"title":"C library ∙ Node-based object model ∙ Node Types | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","modern_node_type_satisfies_type = 43"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.5.1."," ",["link","3f34774e","C library"]," ∙ ",["link","dcbec5c4","Node-based object model"]," ∙ ",["link","614f9fcb","Node Types"]],["modern_node_type_satisfies_type"]]},"8b402897":{"title":"Builtin identifiers ∙ Rounding | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","floor_float64_float64 = 1361"],["paragraph","\nValue type (abstract notation)\nfloat64 -\u003e float64"],["paragraph","\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_floor_float64_float64 = 1361"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.8."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","bea8b63b","Rounding"]],["floor_float64_float64"]]},"83d4e194":{"title":"C library ∙ Streaming model ∙ Streams ∙ Callbacks | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","void(*modern_stream_type_definition_float64)(struct modern_processor *processor, void *processor_state, void *stream_state);"],["header","Parameters"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["2.6.3.1."," ",["link","3f34774e","C library"]," ∙ ",["link","fa6e2bb8","Streaming model"]," ∙ ",["link","e6fab0b0","Streams"]," ∙ ",["link","d3c7bf1f","Callbacks"]],["modern_stream_type_definition_float64"]]},"26a730fe":{"title":"1.8.1. Semantics ∙ Values and types ∙ Booleans | Modern Data the Reference","body":[],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["1.8.1."," ",["link","fcb65d5c","Semantics"]," ∙ ",["link","74ee96d0","Values and types"]," ∙ ","Booleans"]]},"cc46c9c1":{"title":"Builtin identifiers ∙ Type manipulation | Modern Data the Reference","body":[["header","Synopsis"],["paragraph","get_satisfies_type_supertype = 2256"],["paragraph","\n\nValue type (abstract notation)\n\nuniverse 0 -\u003e maybe (universe 0)"],["paragraph","\n\nValue type (detailed notation)"],["header","Synopsis"],["paragraph","modern_builtin_identifier_get_satisfies_type_supertype = 2256"],["header","Semantics"]],"navigation":[[["link","3a51625c","Modern Data the Reference"]],["3.15."," ",["link","82cdeeb7","Builtin identifiers"]," ∙ ",["link","32b774b2","Type manipulation"]],["get_satisfies_type_supertype"]]}}}